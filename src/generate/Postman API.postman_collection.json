{
	"info": {
		"_postman_id": "c8142d51-e97c-46b6-bd77-52bb66712c9a",
		"name": "Postman API",
		"description": "The Postman API enables you to programmatically access data stored in your Postman account.\n\n## Getting started\n\nYou can get started with the Postman API by [forking the Postman API collection](https://learning.postman.com/docs/collaborating-in-postman/version-control/#creating-a-fork) to your workspace. You can then use Postman to send requests.\n\n## Overview\n\n1. You must use a valid API Key to send requests to the API endpoints. You can get your API key from Postman's [integrations dashboard](https://go.postman.co/settings/me/api-keys).\n2. The API has [rate and usage limits](#rate-and-usage-limits).\n3. The API only responds to HTTPS-secured communications. Any requests sent via HTTP return an HTTP `301` redirect to the corresponding HTTPS resources.\n4. The API returns requests responses in [JSON format](https://en.wikipedia.org/wiki/JSON). When an API request returns an error, it is sent in the JSON response as an error key.\n5. The request method (verb) determines the nature of action you intend to perform. A request made using the `GET` method implies that you want to fetch something from Postman. The `POST` method implies you want to save something new to Postman.\n6. For all requests, API calls respond with their corresponding [HTTP status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes). In the Postman client, the status code also provides help text that details the possible meaning of the response code.\n7. You can access individual resources in your Postman with its unique ID (`uid`) value. The `uid` is a simple concatenation of the resource owner's user ID and the resource's ID. For example, a collection's `uid` is the `{{owner_id}}-{{collection_id}}` value.\n    \n\n## ID and UID\n\nAll items in Postman, such as collections, workspaces, and APIs, have ID and UIDs:\n\n- An ID is the unique ID assigned to a Postman item. For example, `ec29121c-5203-409f-9e84-e83ffc10f226`.\n- The UID is the **full** ID of a Postman item. This value is the user ID concatenated with the item's unique ID. For example, in the `12345678-ec29121c-5203-409f-9e84-e83ffc10f226` UID:\n    - `12345678` is the user's ID.\n    - `ec29121c-5203-409f-9e84-e83ffc10f226` is the item's ID.\n\n## Authentication\n\nPostman uses API keys for authentication. The API key tells the API server that the request came from you. Everything that you have access to in Postman is accessible with your API key. You can generate a Postman API key in the [**API keys**](https://postman.postman.co/settings/me/api-keys) section of your Postman account settings.\n\nYou must include an API key in each request to the Postman API with the `X-Api-Key` request header. In Postman, you can store your API key as an [environment variable](https://www.getpostman.com/docs/environments). The Postman API [collection](https://www.getpostman.com/docs/collections) will use it to make API calls.\n\n### Authentication error response\n\nIf an API key is missing, malformed, or invalid, you will receive an HTTP `401 Unauthorized` response code.\n\n### Using the API key as a query parameter\n\nRequests that accept the `X-Api-Key` request header also accept the API key when you send it as the `apikey` query parameter. An API key sent as part of the header has a higher priority when you send the key as both a request header and a query parameter.\n\n## Rate and usage limits\n\nAPI access rate limits apply at a per-API key basis in unit time. The limit is **300 requests per minute**. Also, depending on your [plan](https://www.postman.com/pricing/), you may have usage limits. If you exceed either limit, your request will return an HTTP `429 Too Many Requests` status code.\n\nEach API response returns the following set of headers to help you identify your use status:\n\n| Header | Description |\n| --- | --- |\n| `X-RateLimit-Limit` | The maximum number of requests that the consumer is permitted to make per minute. |\n| `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |\n| `X-RateLimit-Reset` | The time at which the current rate limit window resets in UTC epoch seconds. |\n\n## 503 response\n\nAn HTTP `503` response from our servers indicates there is an unexpected spike in API access traffic. The server is usually operational within the next five minutes. If the outage persists or you receive any other form of an HTTP `5XX` error, [contact support](https://support.postman.com/hc/en-us/requests/new/).\n\n## Support\n\nFor help regarding accessing the Postman API, you can:\n\n- Visit [Postman Support](https://support.postman.com/hc/en-us) or our [Community and Support](https://www.postman.com/community/) sites.\n- Reach out to the [Postman community](https://community.postman.com/).\n- Submit a help request to [Postman support](https://support.postman.com/hc/en-us/requests/new/).\n    \n\n## Policies\n\n- [Postman Terms of Service](http://www.postman.com/legal/terms/)\n- [Postman Privacy Policy](https://www.postman.com/legal/privacy-policy/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28688390",
		"_collection_link": "https://www.postman.com/postman/workspace/postman-public-workspace/collection/12959542-c8142d51-e97c-46b6-bd77-52bb66712c9a?action=share&creator=28688390&source=collection_link"
	},
	"item": [
		{
			"name": "API",
			"item": [
				{
					"name": "v10",
					"item": [
						{
							"name": "Schema",
							"item": [
								{
									"name": "Create a schema",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"{{schemaType}}\",\n    \"files\": [\n        {\n            \"path\": \"{{filePath1}}\",\n            \"content\": \"{{content1}}\"\n        },\n         {\n            \"path\": \"{{filePath2}}\",\n            \"content\": \"{{content2}}\"\n        },\n         {\n            \"path\": \"{{filePath3}}\",\n            \"content\": \"{{content3}}\"\n        },\n         {\n            \"path\": \"{{filePath4}}\",\n            \"content\": \"{{content4}}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"schemas"
											]
										},
										"description": "Creates a schema for an API. The request body must contain the following:\n\n- `type` — A **string** value that contains the API schema's type. One of:\n    - `openapi:3_1`\n    - `openapi:3`\n    - `openapi:2`\n    - `openapi:1`\n    - `raml:0_8`\n    - `raml:1`\n    - `wsdl:1`\n    - `wsdl:2`\n    - `graphql`\n    - `proto:2`\n    - `proto:3`\n    - `asyncapi:2`\n- `files` — An **array** of schema files that contains the following:\n    - `path` — A **string** value that contains the schema file's path.\n    - `content` — A **string** value that contains the schema file's stringified contents."
									},
									"response": [
										{
											"name": "Create Schema",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Sample API\\\",\\n    \\\"description\\\": \\\"Buy or rent spacecrafts\\\"\\n  },\\n  \\\"paths\\\": {\\n    \\\"/spacecrafts/{spacecraftId}\\\": {\\n      \\\"parameters\\\": [\\n        {\\n          \\\"name\\\": \\\"spacecraftId\\\",\\n          \\\"description\\\": \\\"The unique identifier of the spacecraft\\\",\\n          \\\"in\\\": \\\"path\\\",\\n          \\\"required\\\": true,\\n          \\\"schema\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          }\\n        }\\n      ],\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Read a spacecraft\\\",\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"The spacecraft corresponding to the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Spacecraft\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"404\\\": {\\n            \\\"description\\\": \\\"No spacecraft found for the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"500\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"SpacecraftId\\\": {\\n        \\\"description\\\": \\\"The unique identifier of a spacecraft\\\",\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"Spacecraft\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\",\\n          \\\"type\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"type\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"enum\\\": [\\n              \\\"capsule\\\",\\n              \\\"probe\\\",\\n              \\\"satellite\\\",\\n              \\\"spaceplane\\\",\\n              \\\"station\\\"\\n            ]\\n          },\\n          \\\"description\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"message\\\": {\\n            \\\"description\\\": \\\"A human readable error message\\\",\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    },\\n    \\\"securitySchemes\\\": {\\n      \\\"ApiKey\\\": {\\n        \\\"type\\\": \\\"apiKey\\\",\\n        \\\"in\\\": \\\"header\\\",\\n        \\\"name\\\": \\\"X-Api-Key\\\"\\n      }\\n    }\\n  },\\n  \\\"security\\\": [\\n    {\\n      \\\"ApiKey\\\": []\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"NewPet.json\",\n            \"createdBy\": \"557089\",\n            \"id\": \"41a3d7fd-bf9a-4053-b20e-37453962b4d6\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"NewPet.json\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"createdBy\": \"557089\",\n            \"id\": \"93502b81-9f47-45e1-94f7-64882c92519b\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"Pet.json\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"createdBy\": \"557089\",\n            \"id\": \"72f4e1c2-5bf8-4247-ab3c-42bcdcc9ae9c\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"Error.json\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"createdBy\": \"557089\",\n            \"id\": \"2fdc8ea1-d02e-4e50-989e-6fa28f42b995\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"parameters.json\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n        },\n        {\n            \"root\": {\n                \"enabled\": true\n            },\n            \"path\": \"swagger.json\",\n            \"createdBy\": \"557089\",\n            \"id\": \"b4fc1bdc-6587-4f9b-95c9-f768146089b4\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"swagger.json\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n        }\n    ],\n    \"createdBy\": \"557089\",\n    \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n    \"id\": \"b4fc1bdc-6587-4f9b-95c9-f768146089b4\",\n    \"updatedBy\": \"557089\",\n    \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Sample API\\\",\\n    \\\"description\\\": \\\"Buy or rent spacecrafts\\\"\\n  },\\n  \\\"paths\\\": {\\n    \\\"/spacecrafts/{spacecraftId}\\\": {\\n      \\\"parameters\\\": [\\n        {\\n          \\\"name\\\": \\\"spacecraftId\\\",\\n          \\\"description\\\": \\\"The unique identifier of the spacecraft\\\",\\n          \\\"in\\\": \\\"path\\\",\\n          \\\"required\\\": true,\\n          \\\"schema\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          }\\n        }\\n      ],\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Read a spacecraft\\\",\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"The spacecraft corresponding to the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Spacecraft\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"404\\\": {\\n            \\\"description\\\": \\\"No spacecraft found for the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"500\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"SpacecraftId\\\": {\\n        \\\"description\\\": \\\"The unique identifier of a spacecraft\\\",\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"Spacecraft\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\",\\n          \\\"type\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"type\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"enum\\\": [\\n              \\\"capsule\\\",\\n              \\\"probe\\\",\\n              \\\"satellite\\\",\\n              \\\"spaceplane\\\",\\n              \\\"station\\\"\\n            ]\\n          },\\n          \\\"description\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"message\\\": {\\n            \\\"description\\\": \\\"A human readable error message\\\",\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    },\\n    \\\"securitySchemes\\\": {\\n      \\\"ApiKey\\\": {\\n        \\\"type\\\": \\\"apiKey\\\",\\n        \\\"in\\\": \\\"header\\\",\\n        \\\"name\\\": \\\"X-Api-Key\\\"\\n      }\\n    }\\n  },\\n  \\\"security\\\": [\\n    {\\n      \\\"ApiKey\\\": []\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
										},
										{
											"name": "Create Schema with Proto",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"proto:2\",\n    \"files\": [\n        {\n            \"path\": \"index.proto\",\n            \"content\": \"<file contents>\",\n            \"root\": {\n                \"enabled\": true\n            }\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"proto:2\",\n    \"files\": [\n        {\n            \"path\": \"index.proto\",\n            \"createdBy\": \"557089\",\n            \"id\": \"41a3d7fd-bf9a-4053-b20e-37453962b4d6\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"index.proto\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\",\n            \"root\": {\n                \"enabled\": true\n            }\n        }\n    ],\n    \"createdBy\": \"557089\",\n    \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n    \"id\": \"b4fc1bdc-6587-4f9b-95c9-f768146089b4\",\n    \"updatedBy\": \"557089\",\n    \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n}"
										},
										{
											"name": "API Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\" : \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
										},
										{
											"name": "Schema Already Exists",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\" : \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"invalidParamsError\",\n    \"title\": \"Could not create the resource\",\n    \"detail\": \"Schema already exists for this API\"\n}"
										},
										{
											"name": "Missing files Parameter",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\" : \"openapi:3\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid request body\",\n    \"detail\": \"Missing parameter: 'files'\"\n}"
										},
										{
											"name": "Missing content Parameter",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"index.json\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid request body\",\n    \"detail\": \"Required field 'content' missing in the files array\"\n}"
										},
										{
											"name": "Invalid type Parameter",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\" : \"openapi3\",\n     \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"InvalidParamsError\",\n    \"title\": \"Required parameter is invalid\",\n    \"detail\": \"Required property `type` is invalid. Should be one of: proto:2, proto:3, graphql, openapi:3_1, openapi:3, openapi:2, openapi:1, raml:1, raml:0_8, wsdl:2, wsdl:1, asyncapi:2\"\n}"
										},
										{
											"name": "Git-Linked API Errror",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\" : \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"
										}
									]
								},
								{
									"name": "Create or update a schema file",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"{{fileContent}}\"\n}"
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"schemas",
												"{{schemaId}}",
												"files",
												"{{filePath}}"
											]
										},
										"description": "Creates or updates an API schema file. The request body must contain the following properties:\n\n- `content` — A **string** value that contains the file's contents.\n    \n\n**Note:**\n\n- If the provided file path exists, the file will be updated with the new contents.\n- If the provided file path does **not** exist, then a new schema file will be created.\n- If the file path contains a `/` (forward slash) character, then a folder is created. For example, if the file path is the `dir/schema.json` value, then a `dir` folder is created with the `schema.json` file inside."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												},
												"description": "Creates an API definition. The request body must contain a `schema` object with the following properties:\n\n*   `type` — A **string** value that contains the API definition's type. One of:  \n    * `openapi3_1`  \n    * `openapi3`  \n    * `openapi2`  \n    * `openapi1`  \n    * `raml`  \n    * `raml1`  \n    * `wsdl1`  \n    * `wsdl2`  \n    * `graphql`  \n    * `proto2`  \n    * `graphql`  \n    * `proto3`  \n* `language` — A **string** value that contains the API definition's language. One of:  \n    * OpenAPI and RAML — `json` or `yaml`  \n    * GraphQL — `graphql`  \n    * WSDL — `xml`  \n    * Protobuf — `proto`  \n* `schema` — A **string** value that contains the API definition's contents."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"path\": \"data-model/index.json\",\n    \"name\": \"index.json\"\n}"
										},
										{
											"name": "Successfully Update root Tag",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"root\": {\n        \"enabled\": true\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												},
												"description": "Creates an API definition. The request body must contain a `schema` object with the following properties:\n\n*   `type` — A **string** value that contains the API definition's type. One of:  \n    * `openapi3_1`  \n    * `openapi3`  \n    * `openapi2`  \n    * `openapi1`  \n    * `raml`  \n    * `raml1`  \n    * `wsdl1`  \n    * `wsdl2`  \n    * `graphql`  \n    * `proto2`  \n    * `graphql`  \n    * `proto3`  \n* `language` — A **string** value that contains the API definition's language. One of:  \n    * OpenAPI and RAML — `json` or `yaml`  \n    * GraphQL — `graphql`  \n    * WSDL — `xml`  \n    * Protobuf — `proto`  \n* `schema` — A **string** value that contains the API definition's contents."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"path\": \"data-model/index.json\",\n    \"name\": \"index.json\"\n}"
										},
										{
											"name": "API Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
										},
										{
											"name": "Schema Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the resource you are looking for\"\n}"
										},
										{
											"name": "Schema Not Linked to API",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"
										},
										{
											"name": "Git-Linked API Errror",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\",\n    \"detail\": \"This action is not allowed for Git linked APIs\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
										}
									]
								},
								{
									"name": "Get a schema",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"schemas",
												"{{schemaId}}"
											],
											"query": [
												{
													"key": "versionId",
													"value": "{{versionId}}",
													"description": "Optional. The API's version ID.",
													"disabled": true
												},
												{
													"key": "bundled",
													"value": "true",
													"description": "Optional. If true, return the schema in a bundled format.",
													"disabled": true
												}
											]
										},
										"description": "Gets information about API schema. You can use the `versionId` query parameter to get a schema published in an API version.\n\nYou can use this API to do the following:\n\n- Get a schema's metadata.\n- Get all the files in a schema. This only returns the first file in the schema. The endpoint response contains a link to the next set of response results.\n- Get a schema's contents in multi-file or bundled format.\n    \n\n**Note:**\n\nThe `versionId` query parameter is a **required** parameter for API viewers."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}?versionId=66ae9950-0869-4e65-96b0-1e0e47e771af",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}"
													],
													"query": [
														{
															"key": "versionId",
															"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"type\": \"openapi:3\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"files\": {\n        \"meta\": {\n            \"nextPath\": \"/apis/1fdbff7c-036b-4f8a-91bc-17bf3ae74fd2/schemas/cf98c187-17c1-455f-afbf-d4be51f12770/files?cursor=eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJkaXIvczEuanNvbiJ9\"\n        },\n        \"data\": [\n            {\n                \"createdBy\": \"5000842\",\n                \"path\": \"dir/s1.json\",\n                \"updatedBy\": \"5000842\",\n                \"updatedAt\": \"2023-03-16T19:11:24.000Z\",\n                \"createdAt\": \"2023-03-16T18:38:56.000Z\",\n                \"id\": \"cf98c187-17c1-455f-afbf-d4be51f12770\",\n                \"name\": \"s1.json\"\n            }\n        ]\n    }\n}"
										},
										{
											"name": "Get Bundled Schema",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}?bundled=true",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}"
													],
													"query": [
														{
															"key": "bundled",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"type\": \"openapi:3\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"content\": \"openapi: '3.0.0'\\ninfo:\\n  version: '1.0.0'\\n  title: 'Sample API'\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '#/components/schemas/SpacecraftId'\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '200':\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Spacecraft'\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - names\\n        - type\\n      properties:\\n        id:\\n          $ref: '#/components/schemas/SpacecraftId'\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\\nsecurity:\\n  - ApiKey: []\"\n}"
										},
										{
											"name": "API Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
										},
										{
											"name": "Schema Not Linked to API",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"
										},
										{
											"name": "Invalid Version ID",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}?versionId=66ae9950-0869-4e65-96b0-1e0e47e771af",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}"
													],
													"query": [
														{
															"key": "versionId",
															"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid version Id provided\",\n    \"detail\": \"Schema not published in this version\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please ensure that you have required permissions\",\n    \"type\": \"ForbiddenError\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Invalid request body\",\n    \"type\": \"invalidParamError\",\n    \"detail\": \"Missing field 'versionId' in the request body\"\n}"
										},
										{
											"name": "Git-Linked API Errror",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"
										}
									]
								},
								{
									"name": "Get schema files",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"schemas",
												"{{schemaId}}",
												"files"
											],
											"query": [
												{
													"key": "limit",
													"value": "{{limit}}",
													"description": "Optional. The maximum number of rows to return in the response. This value defaults to `10`.",
													"disabled": true
												},
												{
													"key": "versionId",
													"value": "{{versionId}}",
													"description": "Optional. The API's version ID.",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "{{cursor}}",
													"description": "Optional. The pointer to the first record of the set of paginated results.",
													"disabled": true
												}
											]
										},
										"description": "Gets the files in an API schema. You can use the `versionId` query parameter to get schema files published in an API version.\n\n**Note:**\n\nThe `versionId` query parameter is a **required** parameter for API viewers."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files?versionId=66ae9950-0869-4e65-96b0-1e0e47e771af&limit=2&cursor=eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJkaXIvczEuanNvbiJ9",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files"
													],
													"query": [
														{
															"key": "versionId",
															"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
														},
														{
															"key": "limit",
															"value": "2"
														},
														{
															"key": "cursor",
															"value": "eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJkaXIvczEuanNvbiJ9"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"meta\": {\n        \"nextCursor\": \"eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJOZXdQZXQuanNvbiJ9\"\n    },\n    \"files\": [\n        {\n            \"id\": \"e8a015e0-f472-4bb3-a523-57ce7c4583ed\",\n            \"path\": \"data-model/error.yaml\",\n            \"name\": \"error.yaml\",\n            \"createdAt\": \"2022-03-29T11:37:15Z\",\n            \"updatedAt\": \"2022-03-29T11:37:15Z\",\n            \"createdBy\": 2345,\n            \"updatedBy\": 2345\n        },\n        {\n            \"id\": \"e8a015e0-f472-4bb3-a523-57ce7c4583ef\",\n            \"path\": \"data-model/error2.yaml\",\n            \"name\": \"error2.yaml\",\n            \"createdAt\": \"2022-03-29T11:37:15Z\",\n            \"updatedAt\": \"2022-03-29T11:37:15Z\",\n            \"createdBy\": 2345,\n            \"updatedBy\": 2345\n        }\n    ]\n}"
										},
										{
											"name": "API Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
										},
										{
											"name": "Git-Linked API Errror",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"
										},
										{
											"name": "Schema Not Linked to API",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"
										},
										{
											"name": "Invalid Version ID",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files?versionId=e8a015e0-f472",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files"
													],
													"query": [
														{
															"key": "versionId",
															"value": "e8a015e0-f472"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid version Id provided\",\n    \"detail\": \"Schema not published in this version\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please ensure that you have required permissions\",\n    \"type\": \"ForbiddenError\"\n}"
										}
									]
								},
								{
									"name": "Get schema file contents",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"schemas",
												"{{schemaId}}",
												"files",
												"{{filePath}}"
											],
											"query": [
												{
													"key": "versionId",
													"value": "{{versionId}}",
													"description": "Optional. The API's version ID.",
													"disabled": true
												}
											]
										},
										"description": "Gets an API schema file contents at the defined path. You can use the `versionId` query parameter to get schema file contents published in an API version.\n\n**Note:**\n\nThe `versionId` query parameter is a **required** parameter for API viewers."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"path\": \"s1.json\",\n    \"name\": \"s1\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"content\": \"openapi: '3.0.0'\\ninfo:\\n  version: '1.0.0'\\n  title: 'Sample API'\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '#/components/schemas/SpacecraftId'\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '200':\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Spacecraft'\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - names\\n        - type\\n      properties:\\n        id:\\n          $ref: '#/components/schemas/SpacecraftId'\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\\nsecurity:\\n  - ApiKey: []\"\n}"
										},
										{
											"name": "Successful Response for Published Version",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}?versionId=ae2b9ab2-28f2-401d-912f-eca09a78e98b",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													],
													"query": [
														{
															"key": "versionId",
															"value": "ae2b9ab2-28f2-401d-912f-eca09a78e98b"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"path\": \"s1.json\",\n    \"name\": \"s1\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"content\": \"openapi: '3.0.0'\\ninfo:\\n  version: '1.0.0'\\n  title: 'Sample API'\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '#/components/schemas/SpacecraftId'\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '200':\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Spacecraft'\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - names\\n        - type\\n      properties:\\n        id:\\n          $ref: '#/components/schemas/SpacecraftId'\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\\nsecurity:\\n  - ApiKey: []\"\n}"
										},
										{
											"name": "API Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
										},
										{
											"name": "Path Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Resource not found\",\n    \"detail\": \"API schema file does not exist\",\n    \"type\": \"instanceNotFoundError\"\n}"
										},
										{
											"name": "Schema Not Linked to API",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"
										},
										{
											"name": "Git-Linked API Errror",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\",\n    \"detail\": \"This action is not allowed for git linked APIs\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please ensure that you have required permissions\",\n    \"type\": \"ForbiddenError\"\n}"
										}
									]
								},
								{
									"name": "Delete a schema file",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"schemas",
												"{{schemaId}}",
												"files",
												"{{filePath}}"
											]
										},
										"description": "Deletes a file in an API schema."
									},
									"response": [
										{
											"name": "Deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"{{filePath}}"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": null
										},
										{
											"name": "Git-Linked API Errror",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"{{filePath}}"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"
										},
										{
											"name": "Path Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"{{filePath}}"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"File not found: Folder1/nestedFile.json\"\n}"
										},
										{
											"name": "API Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"{{filePath}}"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
										},
										{
											"name": "Schema Not Linked to API",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"{{filePath}}"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"schemas",
														"{{schemaId}}",
														"files",
														"{{filePath}}"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
										}
									]
								}
							],
							"description": "The Schema endpoints let you manage your API schema. These endpoints also support multi-file schema."
						},
						{
							"name": "Version",
							"item": [
								{
									"name": "Create a version",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{apiReleaseName}}\",\n    \"releaseNotes\": \"{{apiReleaseDescription}}\",\n    \"collections\": [\n        {\n            \"id\": \"{{collectionId}}\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"id\": \"{{schemaId}}\" \n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions"
											]
										},
										"description": "Creates a new API version asynchronously and immediately returns an HTTP `202 Accepted` response. The response contains a polling link to the task status API in the `Location` header.\n\nThis endpoint is equivalent to publishing a version in Postman app, which is the snapshot of API collections and schema at a given point in time.\n\nInclude the following properties in the request body:\n\n- `name` — A **string** value that contains the version name.\n- `collections` — An **array** containing all the collections to publish.\n- `schemas` — An **array** containing the schema to publish.\n- `branch` — A **string** value that contains the name of the repository branch. This property is required only for Git-linked APIs.\n    \n\nYou can include the following optional properties:\n\n- `releaseNotes` — A **string** value that contains the Markdown-supported version summary."
									},
									"response": [
										{
											"name": "Create Version",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"id\": \"e8a015e0-f472-4bb3-a523-57ce7c4583ed\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"id\": \"18a015e0-f472-4bb3-a523-57ce7c458387\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												},
												"description": "Creates a new API version release. Include the following properties in the `release` object:\n\n*   `name` — A **string** value that contains the release name.\n*   `visibility` — A **string** value that contains the release's visibility. One of:\n    *   `private` — The release is private.\n    *   `public` — The release is public.\n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains the release's summary.\n*   `description` — A **string** value that contains the release's description.\n*   `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												},
												{
													"key": "Location",
													"value": "/apis/{{apiId}}/tasks/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}"
										},
										{
											"name": "Create Version for Git-Linked API with Schemas and Collection",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "/apis/{{apiId}}/tasks/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}"
										},
										{
											"name": "Repository Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"RepositoryNotFound\",\n    \"title\": \"Repository not found.\",\n    \"detail\": \"We could not find the Git repository you are looking for.\"\n}"
										},
										{
											"name": "Collection Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"CollectionNotFound\",\n    \"title\": \"Collection not found.\",\n    \"detail\": \"We could not find the collection, path/to/collection1.json, in the Git repository. Please ensure that the path is correct.\"\n}"
										},
										{
											"name": "Inconsistent API State",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"APIStateInconsistent\",\n    \"title\": \"API state seems to be inconsistent.\",\n    \"detail\": \"Please perform a Git push from the Postman app to sync state between app and repository.\"\n}"
										},
										{
											"name": "Invalid Collection Path",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"CollectionPathInvalid\",\n    \"detail\": \"Please perform a Git push from the Postman app to sync state between app and repository.\",\n    \"title\": \"Collection not found.\"\n}"
										},
										{
											"name": "Schema Root Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"SchemaRootNotFound\",\n    \"detail\": \"Please perform a Git push from the Postman app to sync state between app and repository.\",\n    \"title\": \"Postman app config seems to be corrupted.\"\n}"
										},
										{
											"name": "API Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"
										},
										{
											"name": "Branch Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"BranchNotFound\",\n    \"title\": \"Branch not found.\",\n    \"details\": \"We could not find the branch you are looking for.\"\n}"
										},
										{
											"name": "Auth Token Expired",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"Unauthorized\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please use the Postman app to link your OAuth token with the API. Head over here, https://postman.postman.co/api/4ca6c9ae-da02-11ed-afa1-0242ac120002\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"Unauthorized\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please use the Postman app to link your OAuth token with the API. Head over here, https://postman.postman.co/api/4ca6c9ae-da02-11ed-afa1-0242ac120002\"\n}"
										},
										{
											"name": "Parameter branch Missing for Git-Linked API",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"paramMissingError\",\n    \"title\": \"Parameter is missing in the request.\",\n    \"detail\": \"Parameter, branch is missing in the request.\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"id\": \"e8a015e0-f472-4bb3-a523-57ce7c4583ed\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"id\": \"18a015e0-f472-4bb3-a523-57ce7c4183ed\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
										}
									]
								},
								{
									"name": "Get all versions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions"
											],
											"query": [
												{
													"key": "cursor",
													"value": "{{cursor}}",
													"description": "Optional. The pointer to the first record of the set of paginated results.",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "{{limit}}",
													"description": "Optional. The maximum number of rows to return in the response. This value defaults to `10`.",
													"disabled": true
												}
											]
										},
										"description": "Gets all the published versions of an API."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions?limit=2",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													],
													"query": [
														{
															"key": "limit",
															"value": "2"
														}
													]
												},
												"description": "Gets information about all of an API version's releases."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"versions\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"07d940bf-40fc-4acd-a11e-be6769894af0\",\n            \"name\": \"Release 2.0\",\n            \"releaseNotes\": \"This is the second release of the Test API.\"\n        },\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n            \"name\": \"Release 1.0\",\n            \"releaseNotes\": \"This is the first release of the Test API. For more information, read the documentation.\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"VGh1IE1hciAxNiAyMDIzIDE3OjIxOjUzIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"limit\": 2,\n        \"total\": \"100\"\n    }\n}"
										},
										{
											"name": "Success with Cursor Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions?limit=2",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													],
													"query": [
														{
															"key": "limit",
															"value": "2"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"meta\": {\n        \"total\": 4,\n        \"limit\": 2,\n        \"nextCursor\": \"V2VkIEZlYiAxNSAyMDIzIDEzOjUyOjAyIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\"\n    },\n    \"versions\": [\n        {\n            \"createdAt\": \"2023-02-15T13:41:43.000Z\",\n            \"name\": \"v1\",\n            \"id\": \"12691e5b-4a6f-4bc7-8335-4ce9b7c5c2ae\",\n            \"releaseNotes\": \"\",\n            \"updatedAt\": \"2023-02-15T13:41:58.000Z\"\n        },\n        {\n            \"createdAt\": \"2023-02-15T13:47:23.000Z\",\n            \"name\": \"v2\",\n            \"id\": \"2665bfbf-888a-48f6-98fa-24c0b7689207\",\n            \"releaseNotes\": \"\",\n            \"updatedAt\": \"2023-02-15T13:47:27.000Z\"\n        }\n    ]\n}"
										},
										{
											"name": "Response with cursor Query Parameter",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions?cursor=RnJpIEZlYiAxNyAyMDIzIDEwOjM5OjUxIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=&limit=10",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													],
													"query": [
														{
															"key": "cursor",
															"value": "RnJpIEZlYiAxNyAyMDIzIDEwOjM5OjUxIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk="
														},
														{
															"key": "limit",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"meta\": {\n        \"total\": 4,\n        \"limit\": 10\n    },\n    \"versions\": [\n        {\n            \"createdAt\": \"2023-02-17T10:39:51.000Z\",\n            \"name\": \"v4\",\n            \"id\": \"bc792958-ffd5-4a4c-bcf5-1c07cb8f277b\",\n            \"releaseNotes\": \"\",\n            \"updatedAt\": \"2023-02-17T10:39:57.000Z\"\n        }\n    ]\n}"
										},
										{
											"name": "API Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"We could not find the API you are looking for.\",\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"
										},
										{
											"name": "v9 Unsupported",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"
										}
									]
								},
								{
									"name": "Get a version",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{versionId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{versionId}}"
											]
										},
										"description": "Gets information about an API version.\n\n**Note:**\n\n- For API editors, this endpoint returns an HTTP `302 Found` status code when the version status is pending. It also returns the `/apis/{apiId}/tasks/{taskId}` task status response header.\n- For API viewers, this endpoint returns an HTTP `404 Not Found` when the version status is pending."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												},
												"description": "Gets information about an API version's release."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"version\": {\n        \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n        \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"releaseNotes\": \"This is the first release.\",\n        \"schemas\": [\n            {\n                \"id\": \"C1\",\n                \"type\": \"openapi3\"\n            }\n        ],\n        \"collections\": [\n            {\n                \"id\": \"C1\",\n                \"name\": \"collection1\"\n            },\n            {\n                \"id\": \"C2\",\n                \"name\": \"collection2\"\n            }\n        ]\n    }\n}"
										},
										{
											"name": "Version in Pending Status Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												},
												"description": "Gets information about an API version's release."
											},
											"status": "Found",
											"code": 302,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												},
												{
													"key": "Location",
													"value": "/apis/5360b75f-447e-467c-9299-12fd6c92450d/tasks/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
													"description": ""
												}
											],
											"cookie": [],
											"body": null
										},
										{
											"name": "Successful Response for API Viewers",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												},
												"description": "Gets information about an API version's release."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"version\": {\n        \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n        \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"releaseNotes\": \"This is the first release.\",\n        \"schemas\": [\n            {\n                \"id\": \"C1\",\n                \"type\": \"openapi:3\"\n            }\n        ],\n        \"collections\": [\n            {\n                \"id\": \"C1\",\n                \"name\": \"collection1\"\n            },\n            {\n                \"id\": \"C2\",\n                \"name\": \"collection2\"\n            }\n        ]\n    }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												},
												"description": "Gets information about an API version's release."
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"VersionNotFound\",\n    \"title\": \"API Version not found.\",\n    \"details\": \"We could not find the API Version you are looking for.\"\n}"
										}
									]
								},
								{
									"name": "Update a version",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{apiVersionName}}\",\n    \"releaseNotes\": \"{{releaseNotes}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}"
											]
										},
										"description": "Updates an API version. Include at least one of the following properties in the request body:\n\n- `name` — A **string** value that contains the version name.\n- `releaseNotes` — A **string** value that contains the Markdown-supported release notes.\n    \n\n**Note:**\n\nThis endpoint returns an HTTP `404 Not Found` response when an API version is pending publication."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												},
												"description": "Updates an API version's release. Include at least one of the following properties in the `release` object:\n\n*   `name` — A **string** value that contains the release name.\n*   `visibility` — A **string** value that contains the release's visibility. One of:\n    *   `private` — The release is private.\n    *   `public` — The release is public.\n*   `summary` — A **string** value that contains the release's summary.\n*   `description` — A **string** value that contains the release's description.\n*   `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2\",\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\"\n}"
										},
										{
											"name": "VersionNotFound Error When API Version is Pending Publishing",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"VersionNotFound\",\n    \"title\": \"API Version not found.\",\n    \"details\": \"We could not find the API Version you are looking for.\"\n}"
										}
									]
								},
								{
									"name": "Delete a version",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{postman-API-key}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "X-API-KEY",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{versionId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{versionId}}"
											]
										},
										"description": "Deletes an API version.\n\n**Note:**\n\nThis endpoint returns an HTTP `404 Not Found` response when an API version is pending publication."
									},
									"response": [
										{
											"name": "Deleted",
											"originalRequest": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "X-API-KEY",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{postman-API-key}}",
															"type": "string"
														},
														{
															"key": "in",
															"type": "any"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												},
												"description": "Deletes an API version's release."
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": null
										},
										{
											"name": "API Not Found",
											"originalRequest": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "X-API-KEY",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{postman-API-key}}",
															"type": "string"
														},
														{
															"key": "in",
															"type": "any"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												},
												"description": "Deletes an API version's release."
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API version you are looking for\"\n    }\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"forbiddenError\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"You do not have permission to perform this action\"\n}"
										},
										{
											"name": "VersionNotFound Error When API Version is Pending Publishing",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{versionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{versionId}}"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"VersionNotFound\",\n    \"title\": \"API Version not found.\",\n    \"details\": \"We could not find the API Version you are looking for.\"\n}"
										}
									]
								}
							],
							"description": "The Version endpoints let you manage your [API's versions](https://learning.postman.com/docs/designing-and-developing-your-api/versioning-an-api/versioning-an-api-overview/#publishing-an-api-version)."
						},
						{
							"name": "Collections",
							"item": [
								{
									"name": "Get a collection",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"collections",
												"{{collectionId}}"
											],
											"query": [
												{
													"key": "versionId",
													"value": "{{versionId}}",
													"description": "Optional. The API's version ID.",
													"disabled": true
												}
											]
										},
										"description": "Gets a collection attached to an API. You can use the `versionId` query parameter to get a collection published in a version.\n\n**Note:**\n\nThe `versionId` query parameter is a **required** parameter for API viewers."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections",
														"{{collectionId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"item\": [\n        {\n            \"protocolProfileBehavior\": {\n                \"disableBodyPruning\": true\n            },\n            \"response\": [\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 200,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"The spacecraft corresponding to the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"id\\\": \\\"<string>\\\",\\n  \\\"name\\\": \\\"commodo\\\",\\n  \\\"type\\\": \\\"capsule\\\",\\n  \\\"description\\\": \\\"pariatur dolo\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"OK\",\n                    \"id\": \"54467f6e-71d7-43d5-acc0-48f948e38528\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 404,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"No spacecraft found for the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Not Found\",\n                    \"id\": \"1231609a-7a3d-444d-aa0c-579703e618f4\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 500,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"Unexpected error\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Internal Server Error\",\n                    \"id\": \"db674465-8cec-4208-9724-42278ca9b83c\"\n                }\n            ],\n            \"id\": \"d3779255-5293-4e58-9b65-8954936e1dca\",\n            \"request\": {\n                \"url\": {\n                    \"host\": [\n                        \"https://api.getpostman.com\"\n                    ],\n                    \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                    \"variable\": [\n                        {\n                            \"description\": \"(Required) The unique identifier of the spacecraft\",\n                            \"key\": \"spacecraftId\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"path\": [\n                        \"spacecrafts\",\n                        \":spacecraftId\"\n                    ]\n                },\n                \"method\": \"GET\",\n                \"header\": [\n                    {\n                        \"key\": \"Accept\",\n                        \"value\": \"application/json\"\n                    }\n                ]\n            },\n            \"name\": \"Read a spacecraft\"\n        }\n    ],\n    \"auth\": {\n        \"apikey\": [\n            {\n                \"type\": \"string\",\n                \"key\": \"key\",\n                \"value\": \"X-Api-Key\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"value\",\n                \"value\": \"SCBKCDKCHKDHCK\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"in\",\n                \"value\": \"header\"\n            }\n        ],\n        \"type\": \"apikey\"\n    },\n    \"info\": {\n        \"description\": \"Buy or rent spacecrafts\",\n        \"_postman_id\": \"e726de58-f1b3-4edd-a8a7-2579dc799d39\",\n        \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n        \"name\": \"Generated\"\n    },\n    \"variable\": [\n        {\n            \"value\": \"/\",\n            \"type\": \"string\",\n            \"id\": \"526a20ba-acfb-4549-a841-8edf2d24b929\",\n            \"key\": \"baseUrl\"\n        }\n    ]\n}"
										},
										{
											"name": "Successful Response with Version",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}?versionId=e726de58-f1b3-4edd-a8a7-2579dc799d39",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections",
														"{{collectionId}}"
													],
													"query": [
														{
															"key": "versionId",
															"value": "e726de58-f1b3-4edd-a8a7-2579dc799d39"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"item\": [\n        {\n            \"protocolProfileBehavior\": {\n                \"disableBodyPruning\": true\n            },\n            \"response\": [\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 200,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"The spacecraft corresponding to the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"id\\\": \\\"<string>\\\",\\n  \\\"name\\\": \\\"commodo\\\",\\n  \\\"type\\\": \\\"capsule\\\",\\n  \\\"description\\\": \\\"pariatur dolo\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"OK\",\n                    \"id\": \"54467f6e-71d7-43d5-acc0-48f948e38528\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 404,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"No spacecraft found for the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Not Found\",\n                    \"id\": \"1231609a-7a3d-444d-aa0c-579703e618f4\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 500,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"Unexpected error\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Internal Server Error\",\n                    \"id\": \"db674465-8cec-4208-9724-42278ca9b83c\"\n                }\n            ],\n            \"id\": \"d3779255-5293-4e58-9b65-8954936e1dca\",\n            \"request\": {\n                \"url\": {\n                    \"host\": [\n                        \"https://api.getpostman.com\"\n                    ],\n                    \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                    \"variable\": [\n                        {\n                            \"description\": \"(Required) The unique identifier of the spacecraft\",\n                            \"key\": \"spacecraftId\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"path\": [\n                        \"spacecrafts\",\n                        \":spacecraftId\"\n                    ]\n                },\n                \"method\": \"GET\",\n                \"header\": [\n                    {\n                        \"key\": \"Accept\",\n                        \"value\": \"application/json\"\n                    }\n                ]\n            },\n            \"name\": \"Read a spacecraft\"\n        }\n    ],\n    \"auth\": {\n        \"apikey\": [\n            {\n                \"type\": \"string\",\n                \"key\": \"key\",\n                \"value\": \"X-Api-Key\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"value\",\n                \"value\": \"SCBKCDKCHKDHCK\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"in\",\n                \"value\": \"header\"\n            }\n        ],\n        \"type\": \"apikey\"\n    },\n    \"info\": {\n        \"description\": \"Buy or rent spacecrafts\",\n        \"_postman_id\": \"e726de58-f1b3-4edd-a8a7-2579dc799d39\",\n        \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n        \"name\": \"Generated\"\n    },\n    \"variable\": [\n        {\n            \"value\": \"/\",\n            \"type\": \"string\",\n            \"id\": \"526a20ba-acfb-4549-a841-8edf2d24b929\",\n            \"key\": \"baseUrl\"\n        }\n    ]\n}"
										},
										{
											"name": "Version ID Missing",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections",
														"{{collectionId}}"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Invalid request body\",\n    \"type\": \"invalidParamError\",\n    \"detail\": \"Missing field 'versionId' in the request body\"\n}"
										}
									]
								},
								{
									"name": "Add a collection",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"operationType\": \"{{operationType}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/collections",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"collections"
											]
										},
										"description": "Adds a collection to an API. To do this, use the following `operationType` values:\n\n- `COPY_COLLECTION` — Copies a collection from the workspace and adds it to an API.\n- `CREATE_NEW` — Creates a new collection by providing the new collection's content.\n- `GENERATE_FROM_SCHEMA` — Generates the collection from an API schema.\n    \n\nFor examples of each method, see the collection's response examples."
									},
									"response": [
										{
											"name": "Copy a Collection",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"operationType\": \"COPY_COLLECTION\",\n  \"data\": {\n    \"collectionId\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"
										},
										{
											"name": "Generate a Collection from Schema",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"operationType\": \"GENERATE_FROM_SCHEMA\",\n  \"name\": \"Test Collection\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"
										},
										{
											"name": "Add a New Collection",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"operationType\": \"CREATE_NEW\",\n    \"data\": {\n        \"item\": [\n            {\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"response\": [\n                    {\n                        \"originalRequest\": {\n                            \"url\": {\n                                \"host\": [\n                                    \"https://api.getpostman.com\"\n                                ],\n                                \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                                \"variable\": [\n                                    {\n                                        \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                        \"key\": \"spacecraftId\",\n                                        \"value\": \"<string>\"\n                                    }\n                                ],\n                                \"path\": [\n                                    \"spacecrafts\",\n                                    \":spacecraftId\"\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"description\": \"Added as a part of security scheme: apikey\",\n                                    \"key\": \"X-Api-Key\",\n                                    \"value\": \"<API Key>\"\n                                }\n                            ]\n                        },\n                        \"code\": 200,\n                        \"_postman_previewlanguage\": \"json\",\n                        \"responseTime\": null,\n                        \"header\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"value\": \"application/json\"\n                            }\n                        ],\n                        \"name\": \"The spacecraft corresponding to the provided `spacecraftId`\",\n                        \"_postman_previewtype\": \"html\",\n                        \"body\": \"{\\n  \\\"id\\\": \\\"<string>\\\",\\n  \\\"name\\\": \\\"commodo\\\",\\n  \\\"type\\\": \\\"capsule\\\",\\n  \\\"description\\\": \\\"pariatur dolo\\\"\\n}\",\n                        \"cookie\": [],\n                        \"status\": \"OK\",\n                        \"id\": \"54467f6e-71d7-43d5-acc0-48f948e38528\"\n                    },\n                    {\n                        \"originalRequest\": {\n                            \"url\": {\n                                \"host\": [\n                                    \"https://api.getpostman.com\"\n                                ],\n                                \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                                \"variable\": [\n                                    {\n                                        \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                        \"key\": \"spacecraftId\",\n                                        \"value\": \"<string>\"\n                                    }\n                                ],\n                                \"path\": [\n                                    \"spacecrafts\",\n                                    \":spacecraftId\"\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"description\": \"Added as a part of security scheme: apikey\",\n                                    \"key\": \"X-Api-Key\",\n                                    \"value\": \"<API Key>\"\n                                }\n                            ]\n                        },\n                        \"code\": 404,\n                        \"_postman_previewlanguage\": \"json\",\n                        \"responseTime\": null,\n                        \"header\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"value\": \"application/json\"\n                            }\n                        ],\n                        \"name\": \"No spacecraft found for the provided `spacecraftId`\",\n                        \"_postman_previewtype\": \"html\",\n                        \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                        \"cookie\": [],\n                        \"status\": \"Not Found\",\n                        \"id\": \"1231609a-7a3d-444d-aa0c-579703e618f4\"\n                    },\n                    {\n                        \"originalRequest\": {\n                            \"url\": {\n                                \"host\": [\n                                    \"https://api.getpostman.com\"\n                                ],\n                                \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                                \"variable\": [\n                                    {\n                                        \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                        \"key\": \"spacecraftId\",\n                                        \"value\": \"<string>\"\n                                    }\n                                ],\n                                \"path\": [\n                                    \"spacecrafts\",\n                                    \":spacecraftId\"\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"description\": \"Added as a part of security scheme: apikey\",\n                                    \"key\": \"X-Api-Key\",\n                                    \"value\": \"<API Key>\"\n                                }\n                            ]\n                        },\n                        \"code\": 500,\n                        \"_postman_previewlanguage\": \"json\",\n                        \"responseTime\": null,\n                        \"header\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"value\": \"application/json\"\n                            }\n                        ],\n                        \"name\": \"Unexpected error\",\n                        \"_postman_previewtype\": \"html\",\n                        \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                        \"cookie\": [],\n                        \"status\": \"Internal Server Error\",\n                        \"id\": \"db674465-8cec-4208-9724-42278ca9b83c\"\n                    }\n                ],\n                \"id\": \"d3779255-5293-4e58-9b65-8954936e1dca\",\n                \"request\": {\n                    \"url\": {\n                        \"host\": [\n                            \"https://api.getpostman.com\"\n                        ],\n                        \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                        \"variable\": [\n                            {\n                                \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                \"key\": \"spacecraftId\",\n                                \"value\": \"<string>\"\n                            }\n                        ],\n                        \"path\": [\n                            \"spacecrafts\",\n                            \":spacecraftId\"\n                        ]\n                    },\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Accept\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                },\n                \"name\": \"Read a spacecraft\"\n            }\n        ],\n        \"auth\": {\n            \"apikey\": [\n                {\n                    \"type\": \"string\",\n                    \"key\": \"key\",\n                    \"value\": \"X-Api-Key\"\n                },\n                {\n                    \"type\": \"string\",\n                    \"key\": \"value\",\n                    \"value\": \"SCBKCDKCHKDHCK\"\n                },\n                {\n                    \"type\": \"string\",\n                    \"key\": \"in\",\n                    \"value\": \"header\"\n                }\n            ],\n            \"type\": \"apikey\"\n        },\n        \"info\": {\n            \"description\": \"Buy or rent spacecrafts\",\n            \"_postman_id\": \"e726de58-f1b3-4edd-a8a7-2579dc799d39\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"name\": \"Generated\"\n        },\n        \"variable\": [\n            {\n                \"value\": \"/\",\n                \"type\": \"string\",\n                \"id\": \"526a20ba-acfb-4549-a841-8edf2d24b929\",\n                \"key\": \"baseUrl\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"operationType\": \"COPY_COLLECTION\",\n  \"data\": {\n    \"collectionId\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
										}
									]
								},
								{
									"name": "Sync collection with schema",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"collections",
												"{{collectionId}}",
												"sync-with-schema-tasks"
											]
										},
										"description": "Syncs a collection attached to an API with the API schema.\n\nThis is an asynchronous endpoint that returns an HTTP `202 Accepted` response. The response contains a polling link to the `/apis/{apiId}/tasks/{taskId}` endpoint in the Location header.\n\n**Note:**\n\nThis endpoint only supports the OpenAPI 3 schema type."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections",
														"{{collectionId}}",
														"sync-with-schema-tasks"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												},
												{
													"key": "Location",
													"value": "/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"taskId\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\"\n}"
										},
										{
											"name": "Schema Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections",
														"{{collectionId}}",
														"sync-with-schema-tasks"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"We could not find a schema linked to this API\",\n    \"title\": \"Schema not found\",\n    \"type\": \"instanceNotFoundError\"\n}"
										},
										{
											"name": "Unsupported Schema Type",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections",
														"{{collectionId}}",
														"sync-with-schema-tasks"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Unsupported schema\",\n    \"detail\": \"Collection syncing is not supported for the current schema type of the API\",\n    \"type\": \"unsupportedEntityError\"\n}"
										},
										{
											"name": "Action Not Allowed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections",
														"{{collectionId}}",
														"sync-with-schema-tasks"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"
										},
										{
											"name": "v9 Unsupported",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections",
														"{{collectionId}}",
														"sync-with-schema-tasks"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"This endpoint does not support v9 APIs.\",\n    \"title\": \"Unsupported API\",\n    \"type\": \"unsupportedEntityError\"\n}"
										},
										{
											"name": "Collection Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections",
														"{{collectionId}}",
														"sync-with-schema-tasks"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"We could not find a collection you are looking for\",\n    \"title\": \"Collection not found\",\n    \"type\": \"instanceNotFoundError\"\n}"
										},
										{
											"name": "API Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections",
														"{{collectionId}}",
														"sync-with-schema-tasks"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\",\n    \"type\": \"instanceNotFoundError\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.api.v10+json"
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/collections/{{collectionId}}/sync-with-schema-tasks",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"collections",
														"{{collectionId}}",
														"sync-with-schema-tasks"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
										}
									]
								}
							],
							"description": "The Collections endpoints let you manage your collections linked to an API."
						},
						{
							"name": "Get status of an asynchronous task",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/{{apiId}}/tasks/{{taskId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"tasks",
										"{{taskId}}"
									]
								},
								"description": "Gets the status of an asynchronous task."
							},
							"response": [
								{
									"name": "Pending Status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/tasks/{{taskId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"tasks",
												"{{taskId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"url\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync\",\n        \"action\": \"update\",\n        \"model\": \"collection\"\n    },\n    \"id\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\",\n    \"createdAt\": \"2023-02-12 19:34:49\",\n    \"updatedAt\": \"2023-02-12 19:34:49\",\n    \"status\": \"pending\"\n}"
								},
								{
									"name": "Completed Status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/tasks/{{taskId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"tasks",
												"{{taskId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"url\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync\",\n        \"action\": \"update\",\n        \"model\": \"collection\"\n    },\n    \"details\": {\n        \"resources\": [\n            {\n                \"id\": \"collectionID\",\n                \"url\": \"/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39\"\n            }\n        ]\n    },\n    \"id\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\",\n    \"createdAt\": \"2023-02-12 19:34:49\",\n    \"updatedAt\": \"2023-02-12 19:34:49\",\n    \"status\": \"completed\"\n}"
								},
								{
									"name": "Failed Status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/tasks/{{taskId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"tasks",
												"{{taskId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"url\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync\",\n        \"action\": \"update\",\n        \"model\": \"collection\"\n    },\n    \"details\": {\n        \"error\": {\n            \"message\": \"The API contains invalid schema\"\n        }\n    },\n    \"id\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2023-02-12 19:34:49\",\n    \"status\": \"failed\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/tasks/{{taskId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"tasks",
												"{{taskId}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"Parameter, taskId is in an invalid format.\",\n    \"title\": \"The specified parameter is in an invalid format\",\n    \"type\": \"invalidParamsError\"\n}"
								}
							]
						},
						{
							"name": "Create an API",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{postman-api-key}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{apiName}}\",\n    \"summary\": \"{{apiSummary}}\",\n    \"description\": \"{{apiDescription}}\"\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId={{workspaceId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "{{workspaceId}}",
											"description": "Required. The workspace ID."
										}
									]
								},
								"description": "Creates an API. Include the following properties in the request body:\n\n- `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n- `summary` — A **string** value that contains a summary of the API.\n- `description` — A **string** value that contains the description of the API."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
												}
											]
										},
										"description": "Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n    \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
												}
											]
										},
										"description": "Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"
								},
								{
									"name": "Missing Workspace ID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"paramMissingError\",\n    \"title\": \"Parameter is missing in the request.\",\n    \"detail\": \"Parameter, workspaceId is missing in the request.\"\n}"
								},
								{
									"name": "Workspace Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"We could not find the workspace you are looking for\",\n    \"detail\": \"We could not find the workspace you are looking for.\",\n    \"type\": \"instanceNotFoundError\"\n}"
								}
							]
						},
						{
							"name": "Update an API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{apiName}}\",\n    \"summary\": \"{{apiSummary}}\",\n    \"description\": \"{{apiDescription}}\"\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/apis/{{apiId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"{{apiId}}"
									]
								},
								"description": "Updates an API. Include at least one of the following properties in the request body:\n\n- `name` — A **string** value that contains the API's name.\n- `summary` — A **string** value that contains a summary of the API.\n- `description` — A **string** value that contains the description of the API. This supports Markdown formatting."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										},
										"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n    \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\"\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										},
										"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										},
										"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"
								},
								{
									"name": "v9 Unsupported",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"
								}
							]
						},
						{
							"name": "Get all APIs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId={{workspaceId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "{{workspaceId}}",
											"description": "Required. The workspace ID."
										},
										{
											"key": "createdBy",
											"value": "{{createdBy}}",
											"description": "Optional. The user ID of the user that created the resource.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. The pointer to the first record of the set of paginated results.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to `10`.",
											"disabled": true
										},
										{
											"key": "description",
											"value": "{{description}}",
											"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
											"disabled": true
										}
									]
								},
								"description": "Gets information about all APIs in a workspace.\n\n**Note:**\n\nThis endpoint only returns APIs created or migrated in Postman v10 and higher."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 12 Jul 2022 16:39:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=915b2bd230311a7e"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=108d09101d76e02a"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "400"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "399"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1657644009"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"nextCursor\": \"VGh1IE1hciAxNiAyMDIzIDE3OjIxOjUzIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 4,\n        \"limit\": 10\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": null,\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-15T13:07:08.000Z\",\n            \"id\": \"fec65321-5f55-4feb-8525-be95bccae8dd\",\n            \"updatedAt\": \"2023-02-15T13:07:08.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-16T05:52:27.000Z\",\n            \"id\": \"b7c54faa-d119-4572-a18d-e2f5c32348ce\",\n            \"updatedAt\": \"2023-02-16T05:52:27.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-16T07:07:16.000Z\",\n            \"id\": \"d535a8ba-ed4b-4c6a-bf1c-13fac95485b8\",\n            \"updatedAt\": \"2023-02-16T07:07:16.000Z\"\n        }\n    ]\n}"
								},
								{
									"name": "Pagination with Cursor Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)&cursor=V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=&limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"
												},
												{
													"key": "cursor",
													"value": "V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk="
												},
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"nextCursor\": \"VGh1IEZlYiAxNiAyMDIzIDA3OjA3OjE2IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 4,\n        \"limit\": 2\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": null,\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-15T13:07:08.000Z\",\n            \"id\": \"fec65321-5f55-4feb-8525-be95bccae8dd\",\n            \"updatedAt\": \"2023-02-15T13:07:08.000Z\"\n        }\n    ]\n}"
								},
								{
									"name": "Missing Workspace ID",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"paramMissingError\",\n    \"title\": \"Parameter is missing in the request.\",\n    \"detail\": \"Parameter, workspaceId is missing in the request.\"\n}"
								},
								{
									"name": "Filter by createdBy",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)&createdBy=893478",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"
												},
												{
													"key": "createdBy",
													"value": "893478"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"nextCursor\": \"V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 1,\n        \"limit\": 10\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": null,\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        }\n    ]\n}"
								},
								{
									"name": "Filter by description",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)&description=This is an API for testing purposes",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"
												},
												{
													"key": "description",
													"value": "This is an API for testing purposes"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"nextCursor\": \"V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 1,\n        \"limit\": 10\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        }\n    ]\n}"
								},
								{
									"name": "Workspace Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the workspace you are looking for\",\n    \"detail\": \"We could not find the workspace you are looking for.\"\n}"
								}
							]
						},
						{
							"name": "Get an API",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/{{apiId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"{{apiId}}"
									],
									"query": [
										{
											"key": "include",
											"value": "{{includeOptions}}",
											"description": "Optional. An array that contains one or more of the following additional resources to include in the response. Use this parameter to query for element links to the API, such as collections and schemas:\n- `collections` — Query for linked Postman collections.\n- `versions` — Query for linked versions.\n- `schemas` — Query for linked schemas.\n- `gitInfo` — Query for information about the API’s git-linked repository.\n\n**Note:**\nAPI viewers can only use the `versions` option.\n        ",
											"disabled": true
										}
									]
								},
								"description": "Gets information about an API.\n\n**Note:**\n\nAPI viewers can only use the `versions` option in the `include` query parameter."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										},
										"description": "Gets information about an API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"description\": \"This is a test API.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\"\n}"
								},
								{
									"name": "Response with the include Parameter",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}?include=schemas,collections,versions,gitInfo",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											],
											"query": [
												{
													"key": "include",
													"value": "schemas,collections,versions,gitInfo"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"description\": \"This is a test API.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"collections\": [\n        {\n            \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n        },\n        {\n            \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fc\"\n        }\n    ]\n}"
								},
								{
									"name": "Get Linked Collections",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}?include=collections",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											],
											"query": [
												{
													"key": "include",
													"value": "collections"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"description\": \"This is a test API.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"collections\": [\n        {\n            \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n        },\n        {\n            \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fc\"\n        }\n    ]\n}"
								},
								{
									"name": "Response for Git-Linked API with the include Parameter",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}?include=schemas,collections,versions,gitInfo",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											],
											"query": [
												{
													"key": "include",
													"value": "schemas,collections,versions,gitInfo"
												}
											]
										},
										"description": "Gets information about an API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"description\": \"This is a test API.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"schemas\": [],\n    \"collections\": [],\n    \"versions\": [\n        {\n            \"id\": \"version-id-1\",\n            \"name\": \"version-name\"\n        }\n    ],\n    \"gitInfo\": {\n        \"domain\": \"https://custom-domain.com\",\n        \"organisation\": \"org-name\",\n        \"repository\": \"repo-name\",\n        \"schemaFolder\": \"schema-folder\",\n        \"collectionFolder\": \"collection-folder\"\n    }\n}"
								},
								{
									"name": "Successful Response for API Viewers",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}?include=versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											],
											"query": [
												{
													"key": "include",
													"value": "versions"
												}
											]
										},
										"description": "Gets information about an API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"description\": \"This is a test API.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"versions\": [\n        {\n            \"id\": \"2360b75f-447e-467c-9299-12fd6c924502\",\n            \"name\": \"version-name-1\"\n        },\n        {\n            \"id\": \"5260b75f-447e-467c-9299-12f16c924503\",\n            \"name\": \"version-name-2\"\n        }\n    ]\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										},
										"description": "Gets information about an API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"
								},
								{
									"name": "v9 Unsupported",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"
								}
							]
						},
						{
							"name": "Delete an API",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/{{apiId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"{{apiId}}"
									]
								},
								"description": "Deletes an API."
							},
							"response": [
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										},
										"description": "Deletes an API."
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": null
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										},
										"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										},
										"description": "Deletes an API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"
								},
								{
									"name": "v9 Unsupported",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"
								}
							]
						}
					],
					"description": "The `/apis` endpoints let you manage your APIs.\n\n### Important:\n\n- These endpoints are only available in Postman v10 and higher.\n- When using these endpoints, you must pass an `Accept` header with the `application/vnd.api.v10+json` value."
				},
				{
					"name": "v9",
					"item": [
						{
							"name": "API Version",
							"item": [
								{
									"name": "Get all API versions",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions"
											]
										},
										"description": "Gets information about an API's versions.\n\n**In Postman v9 and earlier:**\n\nWhen you create an API, the system creates a single, default API version. You can use this version’s ID with any endpoints that require an API version ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": {
														"content": "",
														"type": "text/plain"
													},
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"versions\": [\n        {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"name\": \"Draft\",\n            \"summary\": null,\n            \"createdBy\": \"20891195\",\n            \"updatedBy\": \"20891195\",\n            \"stage\": \"Planning\",\n            \"visibility\": \"public\",\n            \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n            \"createdAt\": \"2023-02-14T14:26:05.000Z\",\n            \"updatedAt\": \"2023-02-14T14:26:05.000Z\",\n            \"repositoryIntegration\": null\n        }\n    ]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Create an API version",
									"request": {
										"method": "POST",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"version\": {\n\t\t\"name\": \"{{apiVersionName}}\",\n\t\t\"source\": {\n\t\t\t\"id\": \"{{apiVersionId}}\",\n\t\t\t\"schema\": {{boolean}},\n\t\t\t\"relations\": {\n\t\t\t\t\"monitor\": {{boolean}},\n\t\t\t\t\"mock\": {{boolean}},\n\t\t\t\t\"documentation\": {{boolean}},\n                \"test\": {{boolean}},\n                \"environment\": {{boolean}}\n\t\t\t}\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates a new API version. Include the following request body properties in the `version` object:\n\n- `name` — Required. A **string** that contains the API version's name.\n- `source` — An **object** that contains the following properties:\n    - `id` — A **string** that contains an API version's ID to copy to the created API version.\n    - `schema` — A **boolean** value. If true, copy the API definition to the new API version.\n    - `relations` — An **object** that contains the relation types to copy to the new API version. Each property is a **boolean** value that, if true, copies to the new API version. If you do **not** include any the following properties, the system does **not** copy them over (defaults to the `false` value):\n        - `monitor`\n        - `mock`\n        - `documentation`\n        - `test`\n        - `environment`"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {\n        \"name\": \"v1\",\n        \"source\": {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"schema\": true,\n            \"relations\": {\n                \"documentation\": true,\n                \"environment\": true,\n                \"mock\": true,\n                \"monitor\": true\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"version\": {\n        \"id\": \"8421a1f3-3262-4d47-a597-7005bf4c1564\",\n        \"name\": \"v1\",\n        \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {\n        \"name\": \"v1\",\n        \"source\": {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"schema\": true,\n            \"relations\": {\n                \"documentation\": true,\n                \"environment\": true,\n                \"mock\": true,\n                \"monitor\": true\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {\n        \"name\": \"v1\",\n        \"source\": {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"schema\": true,\n            \"relations\": {\n                \"documentation\": true,\n                \"environment\": true,\n                \"mock\": true,\n                \"monitor\": true\n            }\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Get an API version",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}"
											]
										},
										"description": "Gets information about an API version.\n\n**In Postman v9 and earlier:**\n\nWhen you create an API, the system creates a single, default API version. You can use this version’s ID with any endpoints that require an API version ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": {
														"content": "",
														"type": "text/plain"
													},
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"version\": {\n        \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"name\": \"Draft\",\n        \"summary\": null,\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"stage\": \"Planning\",\n        \"visibility\": \"public\",\n        \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n        \"createdAt\": \"2023-02-14T14:26:05.000Z\",\n        \"updatedAt\": \"2023-02-14T14:26:05.000Z\",\n        \"repositoryIntegration\": null,\n        \"schema\": [\n            \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n        ]\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Update an API version",
									"request": {
										"method": "PUT",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"version\": {\n\t\t\"name\": \"{{apiVersionName}}\"\n\t}\n}"
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nUpdates an API version. Include the following request body properties in the `version` object:\n\n- `name` — A **string** that contains the API version's name."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {\n        \"name\": \"v1.0\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"version\": {\n        \"createdAt\": \"2022-08-02T13:28:05.000Z\",\n        \"updatedAt\": \"2022-08-02T13:35:32.000Z\",\n        \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"name\": \"v1.0\",\n        \"summary\": null,\n        \"stage\": \"Planning\",\n        \"visibility\": \"public\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {\n        \"name\": \"v1.0\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {\n        \"name\": \"v1.0\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Delete an API version",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nDeletes an API version."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"version\": {\n        \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API version you are looking for\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								}
							],
							"description": "The API version endpoints let you manage your [API's versions](https://learning.postman.com/docs/designing-and-developing-your-api/versioning-an-api/versioning-an-api-overview/).\n\n### Important\n\n**API versions are deprecated as of Postman v10 and higher.**\n\nIn v9 and earlier, when you create an API, the system creates a single, default API version. You can use this version’s ID with any endpoints that require an API version ID.\n\nIn Postman v10, published versions are static representations of your API that consumers can reference (like releases in Postman v9). If you need to work on more than one major iteration of your API in Postman v10, create separate APIs.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Relations",
							"item": [
								{
									"name": "Get unclassified relations",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/unclassified",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"unclassified"
											]
										},
										"description": "**This endpoint is for Postman v10 and higher.**\n\nGets all of an API version's unclassified relations.\n\nUnclassified relations are used for documentation and testing. This is the default relation type."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/unclassified",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"unclassified"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"unclassified\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"Test\",\n            \"updatedAt\": \"2023-01-19T14:50:05.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        }\n    ]\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/unclassified",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"unclassified"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Get monitor relations",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/monitor",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"monitor"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets an API version's monitor relations."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/monitor",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"monitor"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"monitor\": [\n        {\n            \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"updatedAt\": \"2022-07-10T05:00:25.066Z\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n        }\n    ]\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/monitor",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"monitor"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Get  documentation relations",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/documentation",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"documentation"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets an API version's documentation relations."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/documentation",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"documentation"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"documentation\": [\n        {\n            \"id\": \"b9bccf0f-e06a-433d-b556-a3cd158f0270\",\n            \"name\": \"Test Collection\",\n            \"createdAt\": \"2022-07-08T20:29:35.000Z\",\n            \"updatedAt\": \"2022-07-08T20:31:06.000Z\"\n        }\n    ]\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/documentation",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"documentation"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Get integration test relations",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/integrationtest",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"integrationtest"
											]
										},
										"description": "**This endpoint is deprecated.**"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/integrationtest",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"relations",
														"integrationtest"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"integrationtest\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"C test\",\n            \"updatedAt\": \"2019-08-29T10:18:11.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        },\n        {\n            \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n            \"name\": \"C1\",\n            \"updatedAt\": \"2019-08-29T11:40:39.000Z\",\n            \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\"\n        }\n    ]\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/integrationtest",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"relations",
														"integrationtest"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Get test suite relations",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/testsuite",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"testsuite"
											]
										},
										"description": "**This endpoint is deprecated.**"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/testsuite",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"relations",
														"testsuite"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"testsuite\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"C test\",\n            \"updatedAt\": \"2019-08-29T10:18:11.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        },\n        {\n            \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n            \"name\": \"C1\",\n            \"updatedAt\": \"2019-08-29T11:40:39.000Z\",\n            \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\"\n        }\n    ]\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/testsuite",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"relations",
														"testsuite"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Get all linked relations",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/relations",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"relations"
											]
										},
										"description": "Gets all of an API version's relations.\n\n**Note:**\n\nIn Postman v10 and higher, this endpoint returns the following:\n\n- The `unclassified` relation is for documentation and testing. This is the default relation type.\n- The `apiDefinition` relation is the relation used for API definitions."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"relations"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": {
														"content": "",
														"type": "text/plain"
													},
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"relations\": {\n        \"apiDefintion\": {\n            \"16bb367e-fafb-4ef3-933b-ee3d971866fb\": {\n                \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n            }\n        },\n        \"unclassified\": {\n            \"b9bccf0f-e06a-433d-b556-a3cd158f0270\": {\n                \"id\": \"b9bccf0f-e06a-433d-b556-a3cd158f0270\",\n                \"name\": \"Test Collection\",\n                \"createdAt\": \"2023-01-30T17:41:50.000Z\",\n                \"updatedAt\": \"2023-01-19T14:50:05.000Z\"\n            }\n        },\n        \"schema\": {\n            \"16bb367e-fafb-4ef3-933b-ee3d971866fb\": {\n                \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n            }\n        }\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"relations"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Get all test relations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/test",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"test"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets all of an API version's test relations."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/test",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"test"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"test\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"updatedAt\": \"2022-07-08T18:32:23.000Z\",\n            \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/test",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"test"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Sync API relations with definition",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/:relationType/:entityId/syncWithSchema",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												":relationType",
												":entityId",
												"syncWithSchema"
											],
											"variable": [
												{
													"key": "relationType",
													"value": "unclassified",
													"description": "The `unclassified` relation type. This relation is used for documentation and testing.\n\n**Note:**\n\nIn Postman v10 and earlier, this value is one of:\n* `documentation`\n* `test`\n* `mock`\n* `monitor`"
												},
												{
													"key": "entityId",
													"value": "{{entityId}}",
													"description": "The collection's UID value.\n\n**Note:**\n\nIn Postman v10 and earlier, the entity's ID value is one of the following, based on its relation type:\n* `documentation` and `test` — The collection UID value.\n* `environment` — The environment UID value.\n* `mock` — The mock ID value.\n* `monitor` — The monitor ID value."
												}
											]
										},
										"description": "Syncs an API version's relation with the API's definition."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/4ebb45f8-7bb3-4a63-9c42-0b1602818293/versions/5e154147-b571-4ffe-a6ac-df2ab3b6e5ba/:relationType/:entityId/syncWithSchema",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"4ebb45f8-7bb3-4a63-9c42-0b1602818293",
														"versions",
														"5e154147-b571-4ffe-a6ac-df2ab3b6e5ba",
														":relationType",
														":entityId",
														"syncWithSchema"
													],
													"variable": [
														{
															"key": "relationType",
															"value": "unclassified"
														},
														{
															"key": "entityId",
															"value": "12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": true\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/4ebb45f8-7bb3-4a63-9c42-0b1602818293/versions/5e154147-b571-4ffe-a6ac-df2ab3b6e5ba/:relationType/:entityId/syncWithSchema",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"4ebb45f8-7bb3-4a63-9c42-0b1602818293",
														"versions",
														"5e154147-b571-4ffe-a6ac-df2ab3b6e5ba",
														":relationType",
														":entityId",
														"syncWithSchema"
													],
													"variable": [
														{
															"key": "relationType",
															"value": "unclassified"
														},
														{
															"key": "entityId",
															"value": "12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API version you are looking for\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/4ebb45f8-7bb3-4a63-9c42-0b1602818293/versions/5e154147-b571-4ffe-a6ac-df2ab3b6e5ba/:relationType/:entityId/syncWithSchema",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"4ebb45f8-7bb3-4a63-9c42-0b1602818293",
														"versions",
														"5e154147-b571-4ffe-a6ac-df2ab3b6e5ba",
														":relationType",
														":entityId",
														"syncWithSchema"
													],
													"variable": [
														{
															"key": "relationType",
															"value": "unclassified"
														},
														{
															"key": "entityId",
															"value": "12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Get environment relations",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/environment",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"environment"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets an API version's environment relations."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/environment",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"environment"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"environment\": [\n        {\n            \"id\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"name\": \"Test Environment\",\n            \"createdAt\": \"2022-07-08T20:32:48.000Z\",\n            \"updatedAt\": \"2022-07-08T20:31:30.000Z\"\n        }\n    ]\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/environment",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"environment"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Get contract test relations",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/contracttest",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"contracttest"
											]
										},
										"description": "**This endpoint is deprecated.**"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/contracttest",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"relations",
														"contracttest"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"contracttest\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"C test\",\n            \"updatedAt\": \"2019-08-29T10:18:11.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        },\n        {\n            \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n            \"name\": \"C1\",\n            \"updatedAt\": \"2019-08-29T11:40:39.000Z\",\n            \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\"\n        }\n    ]\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/contracttest",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"relations",
														"contracttest"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Create relations",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"{{relationType}}\": [\n        \"{{entityId}}\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/relations",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"relations"
											]
										},
										"description": "Creates a new relation for an API version. Include the following in the request body:\n\n- `relationType` — An **array** that contains entity relations. The key value for this array must be the `unclassified` value.\n    \n\nYou must include the following properties in the `relationType` array:\n\n- `entityId` — The collection's UID value.\n    \n\n**Note:**\n\nThe following is **deprecated** in Postman API v10 and higher:\n\n| **`relationType`** | **`entityId`** |\n| --- | --- |\n| `documentation` and `test` | A collection UID value. |\n| `environment` | An environment UID value. |\n| `mock` | A mock ID value. |\n| `monitor` | A monitor ID value. |\n\nThe endpoint accepts multiple `relationType` arrays in a single call. For an example, see the example response documentation.\n\nThe `documentation` and `test` values returned in the response are the relation ID values, **not** the collection ID values."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"unclassified\": [\n        \"12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"relations"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"unclassified\": [\n        \"2e006451-e819-443f-97bc-d1635e51007f\"\n    ]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"relations"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"unclassified\": [\n        \"12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"relations"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								}
							],
							"description": "The Relations endpoints let you manage your API's relations. Relations are an API's connections to items such as documentation, tests, and API definitions.\n\n### Important\n\nIn Postman v10 and higher, we **only** support the following relation types:\n\n- `unclassified` — The relation for documentation and testing.\n- `apiDefinition` — The relation for API definitions."
						},
						{
							"name": "Schema",
							"item": [
								{
									"name": "Get a schema",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas/{{schemaId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"schemas",
												"{{schemaId}}"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets information about an API's definition."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"schemas",
														"16bb367e-fafb-4ef3-933b-ee3d971866fb"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"schema\": {\n        \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\",\n        \"type\": \"openapi3\",\n        \"language\": \"json\",\n        \"createdAt\": \"2022-07-01T20:12:31.000Z\",\n        \"updatedAt\": \"2022-07-01T20:13:04.000Z\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n        \"apiVersion\": \"a9879d02-74bf-425a-bbec-6d27aa135507\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"schemas",
														"16bb367e-fafb-4ef3-933b-ee3d971866fb"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
										},
										{
											"name": "Definition Mismatch",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"schemas",
														"16bb367e-fafb-4ef3-933b-ee3d971866fb"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"schemaApiVersionMismatchError\",\n        \"message\": \"The Schema ID provided does not belong to the API Version ID provided.\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"schemas",
														"16bb367e-fafb-4ef3-933b-ee3d971866fb"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Create a schema",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"{{apiDefinitionLanguage}}\",\n\t\t\"schema\": \"{{apiDefinition}}\",\n\t\t\"type\": \"{{apiDefinitionType}}\"\n\t}\n}"
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"schemas"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates an API definition. The request body must contain a `schema` object with the following properties:\n\n- `type` — A **string** value that contains the API definition's type. One of:\n    - `openapi3_1`\n    - `openapi3`\n    - `openapi2`\n    - `openapi1`\n    - `raml`\n    - `raml1`\n    - `wsdl1`\n    - `wsdl2`\n    - `graphql`\n    - `proto2`\n    - `graphql`\n    - `proto3`\n- `language` — A **string** value that contains the API definition's language. One of:\n    - OpenAPI and RAML — `json` or `yaml`\n    - GraphQL — `graphql`\n    - WSDL — `xml`\n    - Protobuf — `proto`\n- `schema` — A **string** value that contains the API definition's contents."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"json\",\n\t\t\"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"schemas"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"schema\": {\n        \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n        \"language\": \"json\",\n        \"apiVersion\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"type\": \"openapi3\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2021-05-22T13:17:07.000Z\",\n        \"updatedAt\": \"2021-05-22T13:17:07.000Z\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"json\",\n\t\t\"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"schemas"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceAlreadyExists\",\n        \"message\": \"A schema already exists for this API Version\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"json\",\n\t\t\"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"schemas"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Create a collection from a schema",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"{{collectionName}}\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"{{relationType}}\"\n\t\t}\t\n\t],\n    \"options\": {\n        \"{{optionName}}\": \"{{optionValue}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas/{{schemaId}}/collections",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"schemas",
												"{{schemaId}}",
												"collections"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspaceId}}",
													"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
													"disabled": true
												}
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates a collection and links it to an API as one or multiple relations.\n\nInclude the following properties in the request body:\n\n- `name` — A **string** that contains the name of the collection.\n    \n\nYou can also include the following additional properties in the request body:\n\n- `relations` — An **array** that contains a list of relations to create:\n    - `contracttest` — **Deprecated.**\n    - `integrationtest` — **Deprecated.**\n    - `testsuite` — **Deprecated.**\n    - `documentation`\n- `options` — An **object** that contains advanced creation options and their values. You can find a complete list of properties and their values in Postman's [OpenAPI 3.0 to Postman Collection v2.1.0 Converter OPTIONS documentation](https://github.com/postmanlabs/openapi-to-postman/blob/develop/OPTIONS.md). **These properties are case-sensitive.**"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Test Collection\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"be50acd7-414e-4d65-9443-f919b847e29a",
														"versions",
														"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
														"schemas",
														"f087f7b9-018f-447f-ba64-74cb981957ce",
														"collections"
													],
													"query": [
														{
															"key": "workspace",
															"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
															"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678ß-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
										},
										{
											"name": "Create a Collection with a Documentation Relation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"documentation\"\n\t\t}\t\n\t]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"be50acd7-414e-4d65-9443-f919b847e29a",
														"versions",
														"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
														"schemas",
														"f087f7b9-018f-447f-ba64-74cb981957ce",
														"collections"
													],
													"query": [
														{
															"key": "workspace",
															"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
															"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    },\n    \"relations\": [\n        {\n            \"type\": \"documentation\",\n            \"id\": \"d86b6c97-fdf9-4c37-825a-49b0223913c7\"\n        }\n    ]\n}"
										},
										{
											"name": "Create a Collection with Advanced Options",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"documentation\"\n\t\t}\t\n\t],\n    \"options\": {\n        \"requestParametersResolution\": \"Example\",\n        \"requestNameSource\": \"Fallback\",\n        \"validateMetadata\": true\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"be50acd7-414e-4d65-9443-f919b847e29a",
														"versions",
														"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
														"schemas",
														"f087f7b9-018f-447f-ba64-74cb981957ce",
														"collections"
													],
													"query": [
														{
															"key": "workspace",
															"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
															"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    },\n    \"relations\": [\n        {\n            \"type\": \"documentation\",\n            \"id\": \"d86b6c97-fdf9-4c37-825a-49b0223913c7\"\n        }\n    ]\n}"
										},
										{
											"name": "Create a Collection from a Definition in a Workspace",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"documentation\"\n\t\t}\t\n\t]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections?workspace=c90a3482-f80d-43d6-9dfb-0830f5e43605",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"be50acd7-414e-4d65-9443-f919b847e29a",
														"versions",
														"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
														"schemas",
														"f087f7b9-018f-447f-ba64-74cb981957ce",
														"collections"
													],
													"query": [
														{
															"key": "workspace",
															"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
															"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    },\n    \"relations\": [\n        {\n            \"type\": \"documentation\",\n            \"id\": \"d86b6c97-fdf9-4c37-825a-49b0223913c7\"\n        }\n    ]\n}"
										},
										{
											"name": "Invalid Parameter",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"mocks\"\n\t\t}\t\n\t]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"be50acd7-414e-4d65-9443-f919b847e29a",
														"versions",
														"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
														"schemas",
														"f087f7b9-018f-447f-ba64-74cb981957ce",
														"collections"
													],
													"query": [
														{
															"key": "workspace",
															"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
															"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
															"disabled": true
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"mocks\"\n\t\t}\t\n\t]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"be50acd7-414e-4d65-9443-f919b847e29a",
														"versions",
														"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
														"schemas",
														"f087f7b9-018f-447f-ba64-74cb981957ce",
														"collections"
													],
													"query": [
														{
															"key": "workspace",
															"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
															"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
															"disabled": true
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Update a schema",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"{{apiDefinitionLanguage}}\",\n        \"schema\": \"{{apiDefinition}}\",\n\t\t\"type\": \"{{apiDefinitionType}}\"\n\t}\n}"
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas/{{schemaId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"schemas",
												"{{schemaId}}"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nUpdates an API definition. The request body must contain a `schema` object with the following properties:\n\n- `type` — A **string** value that contains the API definition's type. One of:\n    - `openapi3_1`\n    - `openapi3`\n    - `openapi2`\n    - `openapi1`\n    - `raml`\n    - `raml1`\n    - `wsdl1`\n    - `wsdl2`\n    - `graphql`\n    - `proto2`\n    - `graphql`\n    - `proto3`\n- `language` — A **string** value that contains the API definition's language. One of:\n    - OpenAPI and RAML — `json` or `yaml`\n    - GraphQL — `graphql`\n    - WSDL — `xml`\n    - Protobuf — `proto`\n- `schema` — Optional. A **string** value that contains the API definition's contents."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"yaml\",\n\t\t\"schema\": \"openapi: 3.0.0\\ninfo:\\n  version: 1.0.0\\n  title: Test API\\nservers:\\n  - url: http://localhost:3000\\npaths:\\n  /user:\\n    get:\\n      summary: List all users\\n      operationId: listUser\\n      tags:\\n        - user\\n      parameters:\\n        - name: id\\n          in: query\\n          required: true\\n          description: The user's ID.\\n          example: 1234\\n          schema:\\n            type: integer\\n            format: int32\\n      responses:\\n        '200':\\n          description: Information about the user.\\n          headers:\\n            x-next:\\n              description: A link to the next page of responses.\\n              schema:\\n                type: string\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/User' \\ncomponents:\\n  schemas:\\n   User:\\n      type: object\\n      required:\\n        - id\\n        - name\\n      properties:\\n        id:\\n          type: integer\\n          format: int32\\n   Error:\\n      type: object\\n      required:\\n        - code\\n        - message\\n      properties:\\n        code:\\n          type: integer\\n          format: int32\\n        message:\\n          type: string\\n\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"schemas",
														"16bb367e-fafb-4ef3-933b-ee3d971866fb"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"schema\": {\n        \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\",\n        \"language\": \"yaml\",\n        \"apiVersion\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"type\": \"openapi3\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2021-05-22T13:17:07.000Z\",\n        \"updatedAt\": \"2021-05-22T13:17:07.000Z\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"yaml\",\n\t\t\"schema\": \"openapi: 3.0.0\\ninfo:\\n  version: 1.0.0\\n  title: Test API\\nservers:\\n  - url: http://localhost:3000\\npaths:\\n  /user:\\n    get:\\n      summary: List all users\\n      operationId: listUser\\n      tags:\\n        - user\\n      parameters:\\n        - name: id\\n          in: query\\n          required: true\\n          description: The user's ID.\\n          example: 1234\\n          schema:\\n            type: integer\\n            format: int32\\n      responses:\\n        '200':\\n          description: Information about the user.\\n          headers:\\n            x-next:\\n              description: A link to the next page of responses.\\n              schema:\\n                type: string\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/User' \\ncomponents:\\n  schemas:\\n   User:\\n      type: object\\n      required:\\n        - id\\n        - name\\n      properties:\\n        id:\\n          type: integer\\n          format: int32\\n   Error:\\n      type: object\\n      required:\\n        - code\\n        - message\\n      properties:\\n        code:\\n          type: integer\\n          format: int32\\n        message:\\n          type: string\\n\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"schemas",
														"16bb367e-fafb-4ef3-933b-ee3d971866fb"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"yaml\",\n\t\t\"schema\": \"openapi: 3.0.0\\ninfo:\\n  version: 1.0.0\\n  title: Test API\\nservers:\\n  - url: http://localhost:3000\\npaths:\\n  /user:\\n    get:\\n      summary: List all users\\n      operationId: listUser\\n      tags:\\n        - user\\n      parameters:\\n        - name: id\\n          in: query\\n          required: true\\n          description: The user's ID.\\n          example: 1234\\n          schema:\\n            type: integer\\n            format: int32\\n      responses:\\n        '200':\\n          description: Information about the user.\\n          headers:\\n            x-next:\\n              description: A link to the next page of responses.\\n              schema:\\n                type: string\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/User' \\ncomponents:\\n  schemas:\\n   User:\\n      type: object\\n      required:\\n        - id\\n        - name\\n      properties:\\n        id:\\n          type: integer\\n          format: int32\\n   Error:\\n      type: object\\n      required:\\n        - code\\n        - message\\n      properties:\\n        code:\\n          type: integer\\n          format: int32\\n        message:\\n          type: string\\n\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"schemas",
														"16bb367e-fafb-4ef3-933b-ee3d971866fb"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								}
							],
							"description": "The Schema endpoints let you manage your API's definitions.\n\n### Important\n\n**The schemas concept is deprecated as of Postman v10 and higher.**\n\nIn Postman v10 and higher, “schemas” are now known as “API definitions”. You may see that API responses may return both the `schemas` and `apiDefinition` properties. Use the `apiDefinition` property."
						},
						{
							"name": "Release",
							"item": [
								{
									"name": "Get an API release",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases/{{apiReleaseId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"releases",
												"{{apiReleaseId}}"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{apiId}}"
												},
												{
													"key": "apiVersionId",
													"value": "{{apiVersionId}}"
												},
												{
													"key": "releaseId",
													"value": "{{releaseId}}"
												}
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets information about an API version's release."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases",
														"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases",
														"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Get all API releases",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"releases"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{apiId}}"
												},
												{
													"key": "apiVersionId",
													"value": "{{apiVersionId}}"
												}
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets information about all of an API version's releases."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"releases\": [\n        {\n            \"id\": \"07d940bf-40fc-4acd-a11e-be6769894af0\",\n            \"name\": \"Release 2.0\",\n            \"description\": \"This is the second release of the Test API.\",\n            \"visibility\": \"private\"\n        },\n        {\n            \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n            \"name\": \"Release 1.0\",\n            \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n            \"visibility\": \"public\"\n        }\n    ]\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Create an API release",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"release\": {\n        \"name\": \"{{apiReleaseName}}\",\n        \"summary\": \"{{apiReleaseSummary}}\",\n        \"description\": \"{{apiReleaseDescription}}\",\n        \"visibility\": \"{{apiReleaseVisibility}}\",\n        \"gitTag\": \"{{apiReleaseGitTag}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"releases"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates a new API version release. Include the following properties in the `release` object:\n\n- `name` — A **string** value that contains the release name.\n- `visibility` — A **string** value that contains the release's visibility. One of:\n    - `private` — The release is private.\n    - `public` — The release is public.\n\nYou can include the following optional properties:\n\n- `summary` — A **string** value that contains the release's summary.\n- `description` — A **string** value that contains the release's description.\n- `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"release\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"release\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"apiRepositoryNotFoundError\",\n        \"message\": \"This API version is not linked to a repository\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"release\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Update an API release",
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"release\": {\n        \"name\": \"{{apiReleaseName}}\",\n        \"summary\": \"{{apiReleaseSummary}}\",\n        \"description\": \"{{apiReleaseDescription}}\",\n        \"visibility\": \"{{apiReleaseVisibility}}\",\n        \"gitTag\": \"{{apiReleaseGitTag}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases/{{apiReleaseId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"releases",
												"{{apiReleaseId}}"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nUpdates an API version's release. Include at least one of the following properties in the `release` object:\n\n- `name` — A **string** value that contains the release name.\n- `visibility` — A **string** value that contains the release's visibility. One of:\n    - `private` — The release is private.\n    - `public` — The release is public.\n- `summary` — A **string** value that contains the release's summary.\n- `description` — A **string** value that contains the release's description.\n- `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"release\": {\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases",
														"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"release\": {\n        \"id\": \"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2\",\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"release\": {\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases",
														"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"release\": {\n        \"id\": \"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2\",\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"release\": {\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases",
														"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Delete an API release",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{postman-API-key}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "X-API-KEY",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases/{{apiReleaseId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"releases",
												"{{apiReleaseId}}"
											]
										},
										"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nDeletes an API version's release."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases",
														"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases",
														"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the release you are looking for\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"387c2863-6ee3-4a56-8210-225f774edade",
														"versions",
														"a9879d02-74bf-425a-bbec-6d27aa135507",
														"releases",
														"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								}
							],
							"description": "The API release endpoints let you manage your API's releases.\n\n### Important\n\n**API releases are deprecated as of Postman v10 and higher.**\n\nYou can no longer create releases for collections in Postman v10, but API producers can [publish versions of an API](https://learning.postman.com/docs/designing-and-developing-your-api/versioning-an-api/api-versions/)."
						},
						{
							"name": "Get all APIs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/apis",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "Optional. Return only APIs that are inside the given workspace.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "createdBy",
											"value": "{{createdBy}}",
											"description": "Optional. Return only APIs created by the given user ID.",
											"disabled": true
										},
										{
											"key": "updatedBy",
											"value": "{{updatedBy}}",
											"description": "Optional. Return only APIs updated by the given user ID.",
											"disabled": true
										},
										{
											"key": "isPublic",
											"value": "{{isPublic}}",
											"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{name}}",
											"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "summary",
											"value": "{{summary}}",
											"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "description",
											"value": "{{description}}",
											"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										}
									]
								},
								"description": "Gets information about all APIs."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspaceId}}",
													"description": "Optional. Return only APIs that are inside the given workspace.",
													"disabled": true
												},
												{
													"key": "since",
													"value": "{{since}}",
													"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "until",
													"value": "{{until}}",
													"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "createdBy",
													"value": "{{createdBy}}",
													"description": "Optional. Return only APIs created by the given user ID.",
													"disabled": true
												},
												{
													"key": "updatedBy",
													"value": "{{updatedBy}}",
													"description": "Optional. Return only APIs updated by the given user ID.",
													"disabled": true
												},
												{
													"key": "isPublic",
													"value": "{{isPublic}}",
													"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{name}}",
													"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "summary",
													"value": "{{summary}}",
													"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "description",
													"value": "{{description}}",
													"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "{{sort}}",
													"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
													"disabled": true
												},
												{
													"key": "direction",
													"value": "{{direction}}",
													"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 12 Jul 2022 16:39:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=915b2bd230311a7e"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=108d09101d76e02a"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "400"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "399"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1657644009"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-30T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-30T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public Test API B\",\n            \"summary\": \"Public Test B\",\n            \"description\": \"This is another public test API.\",\n            \"createdBy\": \"87654321\",\n            \"updatedBy\": \"87654321\",\n            \"isPublic\": false\n        }\n    ]\n}"
								},
								{
									"name": "Get Public APIs",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis?isPublic=true",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspaceId}}",
													"description": "Optional. Return only APIs that are inside the given workspace.",
													"disabled": true
												},
												{
													"key": "since",
													"value": "{{since}}",
													"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "until",
													"value": "{{until}}",
													"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "createdBy",
													"value": "{{createdBy}}",
													"description": "Optional. Return only APIs created by the given user ID.",
													"disabled": true
												},
												{
													"key": "updatedBy",
													"value": "{{updatedBy}}",
													"description": "Optional. Return only APIs updated by the given user ID.",
													"disabled": true
												},
												{
													"key": "isPublic",
													"value": "true",
													"description": "Optional. If true, return only public APIs; if false, return only private APIs."
												},
												{
													"key": "name",
													"value": "{{name}}",
													"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "summary",
													"value": "{{summary}}",
													"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "description",
													"value": "{{description}}",
													"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "{{sort}}",
													"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
													"disabled": true
												},
												{
													"key": "direction",
													"value": "{{direction}}",
													"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 12 Jul 2022 16:39:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=915b2bd230311a7e"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=108d09101d76e02a"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "400"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "399"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1657644009"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        }\n    ]\n}"
								},
								{
									"name": "Get APIs in a Date Range",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis?since=2022-06-01T00:00:00.000Z&until=2022-06-15T00:00:00.000Z",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspaceId}}",
													"description": "Optional. Return only APIs that are inside the given workspace.",
													"disabled": true
												},
												{
													"key": "since",
													"value": "2022-06-01T00:00:00.000Z",
													"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format."
												},
												{
													"key": "until",
													"value": "2022-06-15T00:00:00.000Z",
													"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format."
												},
												{
													"key": "createdBy",
													"value": "{{createdBy}}",
													"description": "Optional. Return only APIs created by the given user ID.",
													"disabled": true
												},
												{
													"key": "updatedBy",
													"value": "{{updatedBy}}",
													"description": "Optional. Return only APIs updated by the given user ID.",
													"disabled": true
												},
												{
													"key": "isPublic",
													"value": "{{isPublic}}",
													"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{name}}",
													"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "summary",
													"value": "{{summary}}",
													"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "description",
													"value": "{{description}}",
													"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "{{sort}}",
													"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
													"disabled": true
												},
												{
													"key": "direction",
													"value": "{{direction}}",
													"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 12 Jul 2022 16:39:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=915b2bd230311a7e"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=108d09101d76e02a"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "400"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "399"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1657644009"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        }\n    ]\n}"
								},
								{
									"name": "Filter APIs by Name",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis?name=Public",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspaceId}}",
													"description": "Optional. Return only APIs that are inside the given workspace.",
													"disabled": true
												},
												{
													"key": "since",
													"value": "{{since}}",
													"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "until",
													"value": "{{until}}",
													"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "createdBy",
													"value": "{{createdBy}}",
													"description": "Optional. Return only APIs created by the given user ID.",
													"disabled": true
												},
												{
													"key": "updatedBy",
													"value": "{{updatedBy}}",
													"description": "Optional. Return only APIs updated by the given user ID.",
													"disabled": true
												},
												{
													"key": "isPublic",
													"value": "{{isPublic}}",
													"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
													"disabled": true
												},
												{
													"key": "name",
													"value": "Public",
													"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive."
												},
												{
													"key": "summary",
													"value": "{{summary}}",
													"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "description",
													"value": "{{description}}",
													"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "{{sort}}",
													"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
													"disabled": true
												},
												{
													"key": "direction",
													"value": "{{direction}}",
													"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 12 Jul 2022 16:39:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=915b2bd230311a7e"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=108d09101d76e02a"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "400"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "399"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1657644009"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-30T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-30T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public Test API B\",\n            \"summary\": \"Public Test B\",\n            \"description\": \"This is another public test API.\",\n            \"createdBy\": \"87654321\",\n            \"updatedBy\": \"87654321\",\n            \"isPublic\": false\n        }\n    ]\n}"
								},
								{
									"name": "Sort by updatedAt",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis?sort=updatedAt",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspaceId}}",
													"description": "Optional. Return only APIs that are inside the given workspace.",
													"disabled": true
												},
												{
													"key": "since",
													"value": "{{since}}",
													"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "until",
													"value": "{{until}}",
													"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "createdBy",
													"value": "{{createdBy}}",
													"description": "Optional. Return only APIs created by the given user ID.",
													"disabled": true
												},
												{
													"key": "updatedBy",
													"value": "{{updatedBy}}",
													"description": "Optional. Return only APIs updated by the given user ID.",
													"disabled": true
												},
												{
													"key": "isPublic",
													"value": "{{isPublic}}",
													"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{name}}",
													"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "summary",
													"value": "{{summary}}",
													"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "description",
													"value": "{{description}}",
													"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "updatedAt",
													"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter."
												},
												{
													"key": "direction",
													"value": "{{direction}}",
													"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 12 Jul 2022 16:39:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=915b2bd230311a7e"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=108d09101d76e02a"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "400"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "399"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1657644009"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-30T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-30T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public Test API B\",\n            \"summary\": \"Public Test B\",\n            \"description\": \"This is another public test API.\",\n            \"createdBy\": \"87654321\",\n            \"updatedBy\": \"87654321\",\n            \"isPublic\": false\n        }\n    ]\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspaceId}}",
													"description": "Optional. Return only APIs that are inside the given workspace.",
													"disabled": true
												},
												{
													"key": "since",
													"value": "{{since}}",
													"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "until",
													"value": "{{until}}",
													"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "createdBy",
													"value": "{{createdBy}}",
													"description": "Optional. Return only APIs created by the given user ID.",
													"disabled": true
												},
												{
													"key": "updatedBy",
													"value": "{{updatedBy}}",
													"description": "Optional. Return only APIs updated by the given user ID.",
													"disabled": true
												},
												{
													"key": "isPublic",
													"value": "{{isPublic}}",
													"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{name}}",
													"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "summary",
													"value": "{{summary}}",
													"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "description",
													"value": "{{description}}",
													"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "{{sort}}",
													"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
													"disabled": true
												},
												{
													"key": "direction",
													"value": "{{direction}}",
													"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
													"disabled": true
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 12 Jul 2022 16:39:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=915b2bd230311a7e"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=108d09101d76e02a"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "400"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "399"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1657644009"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						},
						{
							"name": "Create an API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"name": "Content-Type",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"name\": \"{{apiName}}\",\n        \"summary\": \"{{apiSummary}}\",\n        \"description\": \"{{apiDescription}}\"\n    }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/apis",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								},
								"description": "Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"api\": {\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspace",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
													"description": "Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"api\": {\n        \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n        \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n}"
								},
								{
									"name": "Create API in a Workspace",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"api\": {\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspace",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
													"description": "Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"api\": {\n        \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n        \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"api\": {\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspace",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
													"description": "Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\"\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"api\": {\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspace",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
													"description": "Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.",
													"disabled": true
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						},
						{
							"name": "Get an API",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/apis/{{apiId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"{{apiId}}"
									]
								},
								"description": "Gets information about an API."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											},
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"api\": {\n        \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n        \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API\",\n        \"summary\": \"Test API.\",\n        \"description\": \"This is a test API.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"team\": \"1234\",\n        \"isPublic\": true,\n        \"versions\": [\n            {\n                \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n                \"name\": \"Draft\",\n                \"summary\": null,\n                \"schemas\": [\n                    {\n                        \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\",\n                        \"type\": \"openapi3\",\n                        \"language\": \"json\",\n                        \"content\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n                    }\n                ],\n                \"relations\": [\n                    {\n                        \"id\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\",\n                        \"model\": \"apiDefinition\",\n                        \"type\": \"apiDefinition\",\n                        \"modelId\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\"\n                    },\n                    {\n                        \"id\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\",\n                        \"model\": \"schema\",\n                        \"type\": \"schema\",\n                        \"modelId\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						},
						{
							"name": "Update an API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"name": "Content-Type",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"api\": {\n\t\t\"name\": \"{{apiName}}\",\n        \"summary\": \"{{apiSummary}}\",\n\t\t\"description\": \"{{apiDescription}}\"\n\t}\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/apis/{{apiId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"{{apiId}}"
									]
								},
								"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"api\": {\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"api\": {\n        \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n        \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"api\": {\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"api\": {\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						},
						{
							"name": "Delete an API",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/apis/{{apiId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"{{apiId}}"
									]
								},
								"description": "Deletes an API."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						}
					],
					"description": "The `/apis` endpoints let you manage your APIs."
				}
			],
			"description": "The API endpoints let you manage your APIs.\n\n### **Important:**\n\nThe endpoints in this folder are separated by Postman version:\n\n- **v10** — For APIs created or migrated in Postman v10 and higher only. When using these endpoints, you must pass an `Accept` header with the `application/vnd.api.v10+json` value.\n- **v9** — For APIs created in Postman v9 and earlier only."
		},
		{
			"name": "Collections",
			"item": [
				{
					"name": "Create a collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"{{collectionName}}\",\n            \"schema\": \"{{collectionSchemaUrl}}\"\n        },\n        \"item\": [\n            {\n                \"request\": {}\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/collections",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"collections"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` — An **object** that contains the following properties:\n    *   `name` — A **string** value that contains the collection's name.\n    *   `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` — An **object** that contains the HTTP request and response information.\n    *   `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object — Use the `definitions.info` entry.\n    *   `item` object — Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"The specified item already exists.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 1 errors with the supplied collection.\",\n        \"details\": [\n            \": must have required property 'info'\"\n        ]\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get a collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/collections/{{collectionId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"collections",
								"{{collectionId}}"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{accessKey}}",
									"description": "Optional. A collection's read-only access key. Using this query parameter does not require an API key to call the endpoint.",
									"disabled": true
								}
							]
						},
						"description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.\",\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n            \"updatedAt\": \"2022-06-16T20:21:13.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"id\": \"82ee981b-e19f-962a-401e-ea34ebfb4848\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                },\n                \"response\": []\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Get Collection with Access Token",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2?access_key={{accessKey}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									],
									"query": [
										{
											"key": "access_key",
											"value": "{{accessKey}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.\",\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n            \"updatedAt\": \"2022-06-16T20:21:13.000Z\",\n            \"fork\": {\n                \"label\": \"Test Fork\",\n                \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n                \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"id\": \"82ee981b-e19f-962a-401e-ea34ebfb4848\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                },\n                \"response\": []\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the collection you are looking for\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Delete a collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/collections/{{collectionId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"collections",
								"{{collectionId}}"
							]
						},
						"description": "Deletes a collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update a collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"{{collectionName}}\",\n            \"schema\": \"{{collectionSchemaUrl}}\"\n        },\n        \"item\": [\n            {\n                \"request\": {}\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/collections/{{collectionId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"collections",
								"{{collectionId}}"
							]
						},
						"description": "Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the HTTP request and response information.\n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object — Use the `definitions.info` entry.\n    - `item` object — Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).\n    \n\n### Important\n\nUse caution when using this endpoint. The system will replace the existing collection with the values passed in the request body."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 2 errors with the supplied collection.\",\n        \"details\": [\n            \": must have required property 'item'\",\n            \"info: must have required property 'schema'\"\n        ]\n    }\n}"
						},
						{
							"name": "Collection ID Mismatch",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"collectionMismatchError\",\n        \"message\": \"The collection ID in the path does not match the collection ID in the request body.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update a collection name or description",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"{{collectionName}}\",\n            \"description\": \"{{collectionDescription}}\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.getpostman.com/collections/{{collectionId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"collections",
								"{{collectionId}}"
							]
						},
						"description": "Updates the name or description of a collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection v2\",\n        \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"name\": \"Test Collection v2\",\n        \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\",\n        \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"You can only update the name and description of a collection's \\\"info\\\" object.\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Create a fork",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"label\": \"{{collectionForkName}}\"\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/collections/fork/{{collectionId}}?workspace={{workspaceId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"collections",
								"fork",
								"{{collectionId}}"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Required. The workspace ID in which to fork the collection."
								}
							]
						},
						"description": "Creates a [fork](https://learning.postman.com/docs/collaborating-in-postman/version-control/#creating-a-fork) from an existing collection into a workspace. Include the following required request body properties:\n\n*   `label` — The fork's label."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"label\": \"Test Fork\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/fork/12ece9e1-2abf-4edc-8e34-de66e74114d2?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"fork",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Required. The workspace ID in which to fork the collection."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"09547fef-a9a5-4e00-998b-aa563e8db69a\",\n        \"name\": \"Test Collection\",\n        \"fork\": {\n            \"label\": \"Test Fork\",\n            \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n            \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"uid\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"label\": \"Test Fork\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/fork/12ece9e1-2abf-4edc-8e34-de66e74114d2?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"fork",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Required. The workspace ID in which to fork the collection."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"label\": \"Test Fork\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/fork/12ece9e1-2abf-4edc-8e34-de66e74114d2?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"fork",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Required. The workspace ID in which to fork the collection."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Merge a fork",
					"request": {
						"method": "POST",
						"header": [
							{
								"name": "Content-Type",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"strategy\": \"{{mergeStrategy}}\",\n    \"source\": \"{{forkCollectionId}}\",\n    \"destination\": \"{{destinationCollectionId}}\"\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/collections/merge",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"collections",
								"merge"
							]
						},
						"description": "Merges a forked collection back into its destination collection. Include the following required properties in the request body:\n\n*   `source` — The forked collection's ID.\n*   `destination` — The destination collection's ID.\n    \n\nYou can also include the following optional properties in the request body:\n\n*   `strategy` — The fork's merge strategy. One of:\n    *   `deleteSource` — The system **deletes** the forked collection after a successful merge into the destination collection.\n    *   `updateSourceWithDestination` — **Default.** The system only merges the forked collection into the destination collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"strategy\": \"deleteSource\",\n    \"source\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\",\n    \"destination\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/merge",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"merge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"strategy\": \"deleteSource\",\n    \"source\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\",\n    \"destination\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/merge",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"merge"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"strategy\": \"deleteSource\",\n    \"source\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\",\n    \"destination\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/merge",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"merge"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all collections",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/collections",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"collections"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. A workspace ID.",
									"disabled": true
								}
							]
						},
						"description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"name\": \"Cloud API\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-04-12T10:29:46.000Z\",\n            \"updatedAt\": \"2022-04-12T10:29:56.000Z\",\n            \"uid\": \"12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"isPublic\": true\n        },\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-01-13T10:21:46.000Z\",\n            \"updatedAt\": \"2022-02-12T11:29:56.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"isPublic\": false,\n            \"fork\": {\n                \"label\": \"Test Fork\",\n                \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n                \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        },\n        {\n            \"id\": \"f695cab7-6878-eb55-7943-ad88e1ccfd65\",\n            \"name\": \"Postman Echo\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2021-04-11T09:18:26.000Z\",\n            \"updatedAt\": \"2022-05-01T15:29:32.000Z\",\n            \"uid\": \"12345678-f695cab7-6878-eb55-7943-ad88e1ccfd65\",\n            \"isPublic\": true\n        }\n    ]\n}"
						},
						{
							"name": "Filter by Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"name\": \"Cloud API\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-04-12T10:29:46.000Z\",\n            \"updatedAt\": \"2022-04-12T10:29:56.000Z\",\n            \"uid\": \"12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"isPublic\": true\n        }\n    ]\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The `/collections` endpoints let you manage your [collections](https://learning.postman.com/docs/sending-requests/intro-to-collections/)."
		},
		{
			"name": "Environments",
			"item": [
				{
					"name": "Get an environment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/environments/{{environmentId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"environments",
								"{{environmentId}}"
							]
						},
						"description": "Gets information about an environment."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Environment\",\n        \"owner\": \"12345678\",\n        \"createdAt\": \"2020-11-05T13:59:22.000Z\",\n        \"updatedAt\": \"2020-11-05T13:59:23.000Z\",\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            }\n        ],\n        \"isPublic\": false\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the environment you are looking for\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Delete an environment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/environments/{{environmentId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"environments",
								"{{environmentId}}"
							]
						},
						"description": "Deletes an environment."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified environment does not exist.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Create an environment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"environment\": {\n        \"name\": \"{{environmentName}}\",\n        \"values\": [\n            {\n                \"key\": \"{{environmentVariableName}}\",\n                \"value\": \"{{environmentVariableValue}}\",\n                \"enabled\": \"{{boolean}}\",\n                \"type\": \"{{environmentType}}\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/environments",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. A workspace ID in which to create the environment.\n\nIf you do not include this query parameter, the system creates the environment in your \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "Creates an environment. Include the following properties in the request body:\n\n* `name` — A **string** that contains the environment's name.\n\nYou can also include the following properties:\n\n* `values` — An array of objects that contains the following:\n    * `key` — The variable's name.\n    * `value` — The variable's value.\n    * `enabled` — If true, enable the variable.\n    * `type` — The variable's type. One of: `secret`, `default`, or `any`."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"name": "Content-Type",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Environment\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Create Environment in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"name": "Content-Type",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Environment\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 1 errors with the supplied environment.\",\n        \"details\": [\n            \"environment: must have required property 'name'\"\n        ]\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You are not permitted to perform the action.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"apiKey\",\n                \"value\": \"PMAK-1234-5678-0987-6543\",\n                \"enabled\": true,\n                \"type\": \"secret\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update an environment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"environment\": {\n        \"name\": \"{{environmentName}}\",\n        \"values\": [\n            {\n                \"key\": \"{{environmentVariableName}}\",\n                \"value\": \"{{environmentVariableValue}}\",\n                \"enabled\": \"{{boolean}}\",\n                \"type\": \"{{environmentType}}\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/environments/{{environmentId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"environments",
								"{{environmentId}}"
							]
						},
						"description": "Updates an environment. Include the following properties in the request body:\n\n* `name` — A **string** that contains the environment's name.\n\nYou can also include the following optional properties:\n\n* `values` — An array of objects that contains the following:\n    * `key` — The variable's name.\n    * `value` — The variable's value.\n    * `enabled` — If true, enable the variable.\n    * `type` — The variable's type. One of: `secret`, `default`, or `any`."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"name": "Content-Type",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test A Environment\",\n        \"values\": [\n            {\n                \"key\": \"variable_a\",\n                \"value\": \"The variable_a value.\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test A Environment\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"name": "Content-Type",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test A Environment\",\n        \"values\": [\n            null,\n            {\n                \"key\": \"variable_a\",\n                \"value\": \"The variable_a value.\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Invalid type: null (expected object) at environment.values.0\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test A Environment\",\n        \"values\": [\n            null,\n            {\n                \"key\": \"variable_a\",\n                \"value\": \"The variable_a value.\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all environments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/environments",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. A workspace ID.",
									"disabled": true
								}
							]
						},
						"description": "Gets information about all of your [environments](https://learning.postman.com/docs/sending-requests/managing-environments/)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environments\": [\n       {\n            \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"name\": \"Test Environment\",\n            \"createdAt\": \"2020-09-23T14:31:18.000Z\",\n            \"updatedAt\": \"2020-12-04T14:13:40.000Z\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"isPublic\": false\n        },\n        {\n            \"id\": \"7d786cc8-142b-4d62-b5a5-872afc37ad16\",\n            \"name\": \"Environment Scanner\",\n            \"createdAt\": \"2020-02-04T19:34:23.000Z\",\n            \"updatedAt\": \"2020-08-12T13:34:06.000Z\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-7d786cc8-142b-4d62-b5a5-872afc37ad16\",\n            \"isPublic\": false\n        }\n    ]\n}"
						},
						{
							"name": "Filter by Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environments\": [\n       {\n            \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"name\": \"Test Environment\",\n            \"createdAt\": \"2020-09-23T14:31:18.000Z\",\n            \"updatedAt\": \"2020-12-04T14:13:40.000Z\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"isPublic\": false\n        }\n    ]\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The `/environments` endpoints let you manage your [environments](https://learning.postman.com/docs/sending-requests/managing-environments/)."
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "Import an OpenAPI definition",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"{{APIspecificationType}}\",\n    \"input\": {{APIspecification}},\n    \"options\": {\n        \"{{optionName}}\": \"{{optionvalue}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/import/openapi",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"import",
								"openapi"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "Imports an OpenAPI definition into Postman as a new [Postman Collection](https://learning.postman.com/docs/getting-started/creating-the-first-collection/).\n\nInclude the following properties in the request body:\n\n- `type` — A **string** that contains the definition's type. One of:\n    - `string`\n    - `json`\n    - `file`\n- `input` — The OpenAPI definition, based on the `type` value:\n    - For `string`, the definition's stringified JSON object.\n    - For `json`, the definition's JSON object.\n    - For `file`, a definition file. To import a file, the request body **must** be a `form-data` request and include the `type` key with the `file` value.\n\nYou can include the following additional properties in the request body:\n\n- `options` — An **object** that contains advanced creation options and their values. You can find a complete list of properties and their values in Postman's [OpenAPI 3.0 to Postman Collection v2.1.0 Converter OPTIONS documentation](https://github.com/postmanlabs/openapi-to-postman/blob/develop/OPTIONS.md). **These properties are case-sensitive.**\n    \n\nFor more information, refer to the collection's examples.\n\n**Note:**\n\nIf you import with the `file` input method, you **must** use the Postman desktop app. The Postman web app does not support this method type."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"input\": {\n        \"openapi\": \"3.0.0\",\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test API\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ],\n    \"environments\": []\n}"
						},
						{
							"name": "Import an OpenAPI Definition to a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"input\": {\n        \"openapi\": \"3.0.0\",\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ],\n    \"environments\": []\n}"
						},
						{
							"name": "Import an OpenAPI Definition with Options",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"options\": {\n        \"folderStrategy\": \"Path\",\n        \"disableOptionalParameters\": true,\n        \"exampleParametersResolution\": \"Schema\"\n    },\n    \"input\": {\n        \"openapi\": \"3.0.0\",\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ],\n    \"environments\": []\n}"
						},
						{
							"name": "Import a Stringified OpenAPI Definition",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"string\",\n    \"input\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ],\n    \"environments\": []\n}"
						},
						{
							"name": "Import a File",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "file",
											"description": "Required. The `file` type value.",
											"type": "text"
										},
										{
											"key": "input",
											"description": "Required. A file containing a OpenAPI specification file.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ],\n    \"environments\": []\n}"
						},
						{
							"name": "Invalid Parameters",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"input\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"
						},
						{
							"name": "Missing Parameters",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"input\": {\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidSchemaError\",\n        \"message\": \"Specification must contain a semantic version number of the OAS specification\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"input\": {\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Import an exported Postman data dump file",
					"request": {
						"method": "POST",
						"header": [
							{
								"name": "Content-Type",
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "type",
									"value": "file",
									"description": "Required. The `file` type value.",
									"type": "text"
								},
								{
									"key": "input",
									"description": "Required. A file containing a valid user's export .zip file.",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "https://api.getpostman.com/import/exported",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"import",
								"exported"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. The workspace ID in which to import the exported Postman data dump file.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "Imports exported Postman data. This endpoint **only** accepts [export data dump files](https://postman.postman.co/me/export).\n\nFor more information, read our [Exporting data dumps](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/#exporting-data-dumps) documentation.\n\n## Important\n\nThis endpoint is **deprecated**."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://api.getpostman.com/import/exported?type=file&input",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"exported"
									],
									"query": [
										{
											"key": "type",
											"value": "file"
										},
										{
											"key": "input",
											"value": null
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test API\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"
						},
						{
							"name": "Invalid Parameters",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/import/exported?type=file&input",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"exported"
									],
									"query": [
										{
											"key": "type",
											"value": "file",
											"description": "Required. The `file` type value."
										},
										{
											"key": "input",
											"value": null,
											"description": "Required. A file containing a valid user's export .zip file."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"
						},
						{
							"name": "Missing Parameter",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/import/exported?type=file&input",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"exported"
									],
									"query": [
										{
											"key": "type",
											"value": "file",
											"description": "Required. The `file` type value."
										},
										{
											"key": "input",
											"value": null,
											"description": "Required. A file containing a valid user's export .zip file."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/import/exported?type=file&input",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"exported"
									],
									"query": [
										{
											"key": "type",
											"value": "file",
											"description": "Required. The `file` type value."
										},
										{
											"key": "input",
											"value": null,
											"description": "Required. A file containing a valid user's export .zip file."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The `/import` endpoints let you manage [importing and exporting](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/) Postman data.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Mocks",
			"item": [
				{
					"name": "Update a server response",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"serverResponse\": {\n        \"name\": \"{{serverStubName}}\",\n        \"statusCode\": \"{{statusCode}}\",\n        \"headers\": [\n            {\n                \"key\": \"{{headerKey}}\",\n                \"value\": \"{{headerValue}}\"\n            }\n        ],\n        \"body\": \"{{serverStubBody}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.getpostman.com/mocks/{{mockId}}/server-responses/{{serverResponseId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks",
								"{{mockId}}",
								"server-responses",
								"{{serverResponseId}}"
							]
						},
						"description": "Updates a mock server's server stub. Include at least one of the following properties in the request body:\n\n*   `name` — A **string** that contains the server response's name.\n*   `statusCode` — A **string** that contains the server stub's response code. This property only accepts [5xx values](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml).\n*   `headers` — An **array of objects** that contains the server stub's headers:\n    *   `key` — A **string** that contains the header's key.\n    *   `value` — A **string** that contains the header key's value. This value defines the corresponding value for the header key.\n*   `body` — A **string** that contains a response body that returns when you call the mock server."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serverResponse\": {\n        \"name\": \"Service Unavailable\",\n        \"statusCode\": 503,\n        \"headers\": [\n            {\n                \"key\": \"Content-type\",\n                \"value\": \"application/json\"\n            }\n        ],\n        \"language\": \"json\",\n        \"body\": \"{\\n    \\\"message\\\": \\\"Service is temporarily unavailable due to maintenance. Please reach out to support if the problem persists.\\\"\\n}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses",
										"965cdd16-fe22-4d96-a161-3d05490ac421"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"createdAt\": \"2022-08-02T15:08:03.000Z\",\n    \"updatedAt\": \"2022-08-02T15:58:12.000Z\",\n    \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n    \"name\": \"Service Unavailable\",\n    \"statusCode\": 503,\n    \"headers\": [\n        {\n            \"key\": \"Content-type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"language\": \"json\",\n    \"body\": \"{\\n    \\\"message\\\": \\\"Service is temporarily unavailable due to maintenance. Please reach out to support if the problem persists.\\\"\\n}\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"mock\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serverResponse\": {\n\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses",
										"965cdd16-fe22-4d96-a161-3d05490ac421"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": \"serverResponse\"\n        }\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serverResponse\": {\n\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses",
										"965cdd16-fe22-4d96-a161-3d05490ac421"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get a mock server",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/mocks/{{mockId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks",
								"{{mockId}}"
							]
						},
						"description": "Gets information about a mock server."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": {\n                \"type\": \"fixed\",\n                \"duration\": 140000\n            },\n            \"serverResponseId\": null\n        },\n        \"createdAt\": \"2022-07-25T20:54:30.000Z\",\n        \"updatedAt\": \"2022-07-25T20:54:30.000Z\",\n        \"isPublic\": false,\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified mock does not exist.\",\n        \"details\": {}\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get a server response",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/mocks/{{mockId}}/server-responses/{{serverResponseId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks",
								"{{mockId}}",
								"server-responses",
								"{{serverResponseId}}"
							]
						},
						"description": "Gets information about a mock server's server stub."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses",
										"965cdd16-fe22-4d96-a161-3d05490ac421"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"createdAt\": \"2022-08-02T15:08:03.000Z\",\n    \"updatedAt\": \"2022-08-02T15:08:03.000Z\",\n    \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n    \"name\": \"Internal Server Error\",\n    \"statusCode\": 500,\n    \"headers\": [],\n    \"language\": null,\n    \"body\": \"{\\n    \\\"message\\\": \\\"Something went wrong; try again later.\\\"\\n}\",\n    \"createdBy\": \"20891195\",\n    \"updatedBy\": \"20891195\",\n    \"mock\": \"32cd624d-9986-4f20-9048-89252f722269\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses",
										"965cdd16-fe22-4d96-a161-3d05490ac421"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"serverResponseNotFoundError\",\n        \"message\": \"We could not find the mock server response you are looking for.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses",
										"965cdd16-fe22-4d96-a161-3d05490ac421"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Create a mock server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"mock\": {\n        \"name\": \"{{mockName}}\",\n\t\t\"collection\": \"{{collectionId}}\",\n\t\t\"environment\": \"{{environmentId}}\",\n        \"private\": {{boolean}}\n\t}\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/mocks",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. A workspace ID in which to create the mock server.\n\nIf you do not include this query parameter, the system creates the mock server in your \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "**In Postman v10 and higher you cannot create mocks for collections added to an API definition.**\n\nCreates a mock server in a collection. Include a `mock` object in the request body that contains following properties:\n\n- `collection` — A **string** that contains the collection ID.\n    \n\nYou can include the following optional properties in the request body:\n\n- `environment` — A **string** that contains the environment ID to associate with the mock server.\n- `name` — A **string** that contains the the mock server's name.\n- `private` — A **boolean** value that, if true, sets the mock server as private. By default, mock servers are public and can receive requests from anyone and anywhere."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mock\": {\n        \"name\": \"Test Mock\",\n\t\t\"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"private\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "The mime type of this content",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": null,\n            \"serverResponseId\": null\n        },\n        \"createdAt\": \"2022-06-09T19:00:39.000Z\",\n        \"updatedAt\": \"2022-06-09T19:00:39.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mock\": {\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Mock\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the mock server.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "The mime type of this content",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": [\n                \"collection\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mock\": {\n        \"name\": \"Test Mock\",\n\t\t\"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"private\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the mock server.",
											"disabled": true
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "The mime type of this content",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all mock servers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/mocks",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks"
							]
						},
						"description": "Gets all mock servers."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mocks\": [\n        {\n            \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n            \"name\": \"Test Mock\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": {\n                    \"type\": \"fixed\",\n                    \"duration\": 140000\n                },\n                \"serverResponseId\": null\n            },\n            \"createdAt\": \"2022-07-25T20:54:30.000Z\",\n            \"updatedAt\": \"2022-07-25T20:54:30.000Z\",\n            \"isPublic\": false,\n            \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n        }\n    ]\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Delete a mock server",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/mocks/{{mockId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks",
								"{{mockId}}"
							]
						},
						"description": "Deletes a mock server."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n        \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified mock does not exist.\",\n        \"details\": {}\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Unpublish a mock server",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/mocks/{{mockId}}/unpublish",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks",
								"{{mockId}}",
								"unpublish"
							]
						},
						"description": "Unpublishes a mock server. Unpublishing a mock server sets its **Access Control** configuration setting to private."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/unpublish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"unpublish"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/unpublish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"unpublish"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"mockAlreadyUnpublishedError\",\n        \"message\": \"This mock has already been deleted.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/unpublish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"unpublish"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all server responses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/mocks/{{mockId}}/server-responses",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks",
								"{{mockId}}",
								"server-responses"
							]
						},
						"description": "Gets all of a mock server's server responses."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n        \"name\": \"Internal Server Error\",\n        \"statusCode\": 500,\n        \"createdAt\": \"2022-08-02T14:57:44.000Z\",\n        \"updatedAt\": \"2022-08-02T14:57:44.000Z\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n]"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified mock does not exist.\",\n        \"details\": {}\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Create a server response",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"serverResponse\": {\n        \"name\": \"{{serverStubName}}\",\n        \"statusCode\": \"{{statusCode}}\",\n        \"headers\": [\n            {\n                \"key\": \"{{headerKey}}\",\n                \"value\": \"{{headerValue}}\"\n            }\n        ],\n        \"body\": \"{{serverStubBody}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.getpostman.com/mocks/{{mockId}}/server-responses",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks",
								"{{mockId}}",
								"server-responses"
							]
						},
						"description": "Creates a server response. Server responses let you simulate 5xx server-level responses, such as 500 or 503.\n\nServer-level responses are agnostic to application-level logic. Server responses let you simulate this behavior on a mock server. You do not need to define each error for all exposed paths on the mock server.\n\nIf you set a server response as active, then all the calls to the mock server return with that active server response.\n\n**Note:**\n\nYou can create multiple server responses for a mock server, but only one mock server can be set as active.\n\nYou must include the following properties in the request body:\n\n\\*   `name` — A **string** that contains the server response's name.\n\\*   `statusCode` — An **integer** that contains the server stub's 5xx response code. This property **only** accepts [5xx values](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml).\n    \n\nYou can also include the following optional properties:\n\n\\*   `headers` — An **array of objects** that contains the server stub's headers:\n    \\*   `key` — A **string** that contains the header's key.\n    \\*   `value` — A **string** that contains the header key's value. This value defines the corresponding value for the header key.\n\\*   `body` — A **string** that contains a response body that returns when you call the mock server."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serverResponse\": {\n        \"name\": \"Internal Server Error\",\n        \"statusCode\": 500,\n        \"header\": [\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json\"\n            }\n        ],\n        \"body\": \"{\\n    \\\"message\\\": \\\"Something went wrong; try again later.\\\"\\n}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"createdAt\": \"2022-08-02T15:08:03.000Z\",\n    \"updatedAt\": \"2022-08-02T15:08:03.000Z\",\n    \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n    \"name\": \"Internal Server Error\",\n    \"statusCode\": 500,\n    \"headers\": [],\n    \"language\": null,\n    \"body\": \"{\\n    \\\"message\\\": \\\"Something went wrong; try again later.\\\"\\n}\",\n    \"createdBy\": \"20891195\",\n    \"updatedBy\": \"20891195\",\n    \"mock\": \"32cd624d-9986-4f20-9048-89252f722269\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serverResponse\": {\n        \"name\": \"Internal Server Error\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": [\n                \"statusCode\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serverResponse\": {\n        \"name\": \"Internal Server Error\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Delete a server response",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/mocks/{{mockId}}/server-responses/{{serverResponseId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks",
								"{{mockId}}",
								"server-responses",
								"{{serverResponseId}}"
							]
						},
						"description": "Deletes a mock server's server response."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses",
										"965cdd16-fe22-4d96-a161-3d05490ac421"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"bf6bbf95-bebb-44ba-8edb-1f096f905774\",\n    \"name\": \"Service Unavailable\",\n    \"statusCode\": 503,\n    \"headers\": [\n        {\n            \"key\": \"Content-Type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"language\": \"json\",\n    \"body\": \"{\\n    \\\"message\\\": \\\"Service is temporarily unavailable due to maintenance. If the problem persists, reach out to support.\\\"\\n}\",\n    \"createdBy\": \"1\",\n    \"updatedBy\": \"1\",\n    \"createdAt\": \"2022-05-02T09:38:04.000Z\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses",
										"965cdd16-fe22-4d96-a161-3d05490ac421"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"serverResponseNotFoundError\",\n        \"message\": \"We could not find the mock server response you are looking for.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"server-responses",
										"965cdd16-fe22-4d96-a161-3d05490ac421"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Publish a mock server",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/mocks/{{mockId}}/publish",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks",
								"{{mockId}}",
								"publish"
							]
						},
						"description": "Publishes a mock server. Publishing a mock server sets its **Access Control** configuration setting to public."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/publish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"publish"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/publish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"publish"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"mockAlreadyPublishedError\",\n        \"message\": \"This mock is already public.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/publish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"publish"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update a mock server",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mock\": {\n        \"name\": \"{{mockName}}\",\n        \"environment\": \"{{environmentUid}}\",\n        \"private\": \"<boolean>\",\n        \"versionTag\": \"{{apiVersionTagId}}\",\n        \"config\": {\n          \"serverResponseId\": \"{{serverResponseId}}\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.getpostman.com/mocks/{{mockId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks",
								"{{mockId}}"
							]
						},
						"description": "Updates a mock server. Include the `mock` object in the request body with one or more of the following properties:\n\n- `name` — A **string** that contains the mock server's name.\n- `environment` — A **string** that contains the environment UID.\n- `private` — A **boolean** value that, if true, sets the mock server as private. By default, mock servers are public and can receive requests from anyone and anywhere.\n- `versionTag` — A **string** that contains the API's version tag ID.\n- `config` — An **object** that contains the following properties:\n    - `serverResponseId` — A **string** that contains the server response ID. This sets the given server response as the default response for each request."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mock\": {\n        \"name\": \"Test Mock\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"description\": \"This is a test mock server.\",\n        \"private\": true,\n        \"versionTag\": \"abf07d3d-f8ec-47d4-8015-9fe83078b4ec\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true\n        },\n        \"createdAt\": \"2022-06-09T19:38:06.000Z\",\n        \"updatedAt\": \"2022-06-13T18:55:25.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Activate a Server Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mock\": {\n        \"config\": {\n          \"serverResponseId\": \"9a291bbe-dc0a-44ba-a3c8-6dbd06a61460\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": null,\n            \"serverResponseId\": \"9a291bbe-dc0a-44ba-a3c8-6dbd06a61460\"\n        },\n        \"createdAt\": \"2022-06-09T19:38:06.000Z\",\n        \"updatedAt\": \"2022-06-13T18:55:25.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Deactivate a Server Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mock\": {\n        \"config\": {\n          \"serverResponseId\": null\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": null,\n            \"serverResponseId\": null\n        },\n        \"createdAt\": \"2022-06-09T19:38:06.000Z\",\n        \"updatedAt\": \"2022-06-13T18:55:25.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mock\": {\n        \"config\": {\n          \"serverResponseId\": null\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get a mock server's call logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/mocks/{{mockId}}/call-logs",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"mocks",
								"{{mockId}}",
								"call-logs"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "{{cursor}}",
									"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
									"disabled": true
								},
								{
									"key": "until",
									"value": "{{until}}",
									"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
									"disabled": true
								},
								{
									"key": "since",
									"value": "{{since}}",
									"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.",
									"disabled": true
								},
								{
									"key": "responseStatusCode",
									"value": "{{responseStatusCode}}",
									"description": "Optional. Return only the call logs that match the given HTTP response status code.",
									"disabled": true
								},
								{
									"key": "responseType",
									"value": "{{responseType}}",
									"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
									"disabled": true
								},
								{
									"key": "requestMethod",
									"value": "{{requestMethod}}",
									"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
									"disabled": true
								},
								{
									"key": "requestPath",
									"value": "{{requestPath}}",
									"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "{{sort}}",
									"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
									"disabled": true
								},
								{
									"key": "direction",
									"value": "{{direction}}",
									"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "{{include}}",
									"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
									"disabled": true
								}
							]
						},
						"description": "Gets a mock server's call logs. You can get a maximum of 6.5MB of call logs **or** a total of 100 call logs, whichever limit is met first in one API call.\n\nCall logs contain exchanged request and response data made to mock servers. The logs provide visibility into how the mock servers are being used. You can log data to debug, test, analyze, and more, depending upon the use case."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "responseStatusCode",
											"value": "{{responseStatusCode}}",
											"description": "Optional. Return only the call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "{{responseType}}",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "{{requestMethod}}",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "{{requestPath}}",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "{{include}}",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
						},
						{
							"name": "Filter by Limit",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?limit=2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100."
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "responseStatusCode",
											"value": "{{responseStatusCode}}",
											"description": "Optional. Return only the call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "{{responseType}}",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "{{requestMethod}}",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "{{requestPath}}",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "{{include}}",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"call-logs\": [\n        {\n            \"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n            \"responseName\": \"Double check your method and the request path and try again.\",\n            \"servedAt\": \"2022-01-17T06:19:30.000Z\",\n            \"request\": {\n                \"method\": \"POST\",\n                \"path\": \"/animals\"\n            },\n            \"response\": {\n                \"type\": \"error\",\n                \"statusCode\": 404\n            }\n        },\n        {\n            \"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n            \"responseName\": \"Bad request\",\n            \"servedAt\": \"2022-01-17T06:19:22.000Z\",\n            \"request\": {\n                \"method\": \"POST\",\n                \"path\": \"/animals\"\n            },\n            \"response\": {\n                \"type\": \"success\",\n                \"statusCode\": 400\n            }\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"eyJzY2hlbWUiOiJjdXJzb3JfcGFnaW5hdGlvbklkIiwiZGlyZWN0aW9uVHlwZSI6Im5leHQiLCJwaXZvdCI6InBhZ2luYXRpb25JZCIsInZhbHVlIjoxNjQyNDAwMzU2MDAwNTc5fQ==\"\n    }\n}"
						},
						{
							"name": "Filter by Cursor",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?cursor=eyJzY2hlbWUiOiJjdXJzb3JfcGFnaW5hdGlvbklkIiwiZGlyZWN0aW9uVHlwZSI6Im5leHQiLCJwaXZvdCI6InBhZ2luYXRpb25JZCIsInZhbHVlIjoxNjQyNDAwMzU2MDAwNTc5fQ==",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "eyJzY2hlbWUiOiJjdXJzb3JfcGFnaW5hdGlvbklkIiwiZGlyZWN0aW9uVHlwZSI6Im5leHQiLCJwaXZvdCI6InBhZ2luYXRpb25JZCIsInZhbHVlIjoxNjQyNDAwMzU2MDAwNTc5fQ==",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter."
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "responseStatusCode",
											"value": "{{responseStatusCode}}",
											"description": "Optional. Return only the call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "{{responseType}}",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "{{requestMethod}}",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "{{requestPath}}",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "{{include}}",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
						},
						{
							"name": "Filter by a Date Range",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?until=2022-01-20T06:19:22.000Z&since=2022-01-17T06:19:22.000Z",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "2022-01-20T06:19:22.000Z",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format."
										},
										{
											"key": "since",
											"value": "2022-01-17T06:19:22.000Z",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format."
										},
										{
											"key": "responseStatusCode",
											"value": "{{responseStatusCode}}",
											"description": "Optional. Return only the call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "{{responseType}}",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "{{requestMethod}}",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "{{requestPath}}",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "{{include}}",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
						},
						{
							"name": "Filter by Date Since",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?since=2022-01-17T06:19:16.000Z",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "2022-01-17T06:19:16.000Z",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format."
										},
										{
											"key": "responseStatusCode",
											"value": "{{responseStatusCode}}",
											"description": "Optional. Return only the call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "{{responseType}}",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "{{requestMethod}}",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "{{requestPath}}",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "{{include}}",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
						},
						{
							"name": "Filter by responseStatusCode",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?responseStatusCode=200",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "responseStatusCode",
											"value": "200",
											"description": "Optional. Return only the call logs that match the given HTTP response status code."
										},
										{
											"key": "responseType",
											"value": "{{responseType}}",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "{{requestMethod}}",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "{{requestPath}}",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "{{include}}",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
						},
						{
							"name": "Filter by responseType",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?responseType=success",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "responseStatusCode",
											"value": "{{responseStatusCode}}",
											"description": "Optional. Return only the call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "success",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive."
										},
										{
											"key": "requestMethod",
											"value": "{{requestMethod}}",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "{{requestPath}}",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "{{include}}",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
						},
						{
							"name": "Filter by requestMethod",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?requestMethod=post",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "responseStatusCode",
											"value": "{{responseStatusCode}}",
											"description": "Optional. Return only the call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "{{responseType}}",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "post",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive."
										},
										{
											"key": "requestPath",
											"value": "{{requestPath}}",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "{{include}}",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
						},
						{
							"name": "Filter by requestPath",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?requestPath=/animals?type=Dog",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "responseStatusCode",
											"value": "{{responseStatusCode}}",
											"description": "Optional. Return only the call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "{{responseType}}",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "{{requestMethod}}",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "/animals?type=Dog",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive."
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "{{include}}",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
						},
						{
							"name": "Sort by servedAt",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?sort=servedAt&direction=asc",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "responseStatusCode",
											"value": "{{responseStatusCode}}",
											"description": "Optional. Return only the call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "{{responseType}}",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "{{requestMethod}}",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "{{requestPath}}",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "servedAt",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter."
										},
										{
											"key": "direction",
											"value": "asc",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter."
										},
										{
											"key": "include",
											"value": "{{include}}",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
						},
						{
							"name": "Filter by Header and Body Data",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?include=request.headers,request.body,response.headers,response.body",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "responseStatusCode",
											"value": "{{responseStatusCode}}",
											"description": "Optional. Return only the call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "{{responseType}}",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "{{requestMethod}}",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "{{requestPath}}",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "request.headers,request.body,response.headers,response.body",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-length\",\n\t\t\t\t\t\t\"value\": \"50\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"x-mock-match-request-body\",\n\t\t\t\t\t\t\"value\": \"true\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"mode\": \"raw\",\n\t\t\t\t\t\"data\": \"{\\\"type\\\":\\\"hamster\\\",\\\"breed\\\":\\\"Syrian Hamster\\\"}\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404,\n\t\t\t\t\"headers\": [],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"{\\\"error\\\":{\\\"name\\\":\\\"mockRequestNotFoundError\\\",\\\"message\\\":\\\"Double check your method and the request path and try again.\\\"}}\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-length\",\n\t\t\t\t\t\t\"value\": \"69\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"x-mock-match-request-body\",\n\t\t\t\t\t\t\"value\": \"true\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"mode\": \"raw\",\n\t\t\t\t\t\"data\": \"{\\\"type\\\":\\\"hamster\\\",\\\"breed\\\":\\\"Syrian Hamster\\\",\\\"age\\\":\\\"1 month\\\"}\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"{\\n\\t\\\"message\\\": \\\"Malformed request. You need to send gender as part of the request.\\\"\\n}\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-length\",\n\t\t\t\t\t\t\"value\": \"88\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"x-mock-match-request-body\",\n\t\t\t\t\t\t\"value\": \"true\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"mode\": \"raw\",\n\t\t\t\t\t\"data\": \"{\\\"type\\\":\\\"hamster\\\",\\\"breed\\\":\\\"Syrian Hamster\\\",\\\"age\\\":\\\"1 month\\\",\\\"gender\\\":\\\"male\\\"}\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"{\\n\\t\\\"message\\\": \\\"Animal added successfully to the store\\\"\\n}\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\",\n\t\t\t\t\"headers\": [],\n\t\t\t\t\"body\": {}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"[\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"German Sheperd\\\",\\n\\t\\t\\\"age\\\": \\\"6 months\\\",\\n\\t\\t\\\"gender\\\": \\\"male\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"Bulldog\\\",\\n\\t\\t\\\"age\\\": \\\"1 year\\\",\\n\\t\\t\\\"gender\\\": \\\"female\\\"\\n\\t}\\n]\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [],\n\t\t\t\t\"body\": {}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"[\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"German Sheperd\\\",\\n\\t\\t\\\"age\\\": \\\"6 months\\\",\\n\\t\\t\\\"gender\\\": \\\"male\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"Bulldog\\\",\\n\\t\\t\\\"age\\\": \\\"1 year\\\",\\n\\t\\t\\\"gender\\\": \\\"female\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"type\\\": \\\"cat\\\",\\n\\t\\t\\\"breed\\\": \\\"Persian cat\\\",\\n\\t\\t\\\"age\\\": \\\"3 months\\\",\\n\\t\\t\\\"gender\\\": \\\"female\\\"\\n\\t}\\n]\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"description": "Optional. The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "{{cursor}}",
											"description": "Optional. A pointer to the first record of the set of paginated results. To view the next response, use the \"nextCursor\" value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "{{until}}",
											"description": "Optional. Return only the call logs created at and after this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"description": "Optional. Return only the call logs created at and before this time, in ISO 8601 UTC format.",
											"disabled": true
										},
										{
											"key": "responseStatusCode",
											"value": "{{responseStatusCode}}",
											"description": "Optional. Return only the call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "{{responseType}}",
											"description": "Optional. Return only the call logs with a matching response type. For example, \"success\" or \"error\". Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "{{requestMethod}}",
											"description": "Optional. Return only the call logs with a matching HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "{{requestPath}}",
											"description": "Optional. Return only the call logs that match the request's path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "{{sort}}",
											"description": "Optional. Sort the call logs by the given property. This only accepts the \"servedAt\" value.\n\nIf you use this query parameter, you must also use the \"direction\" parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "{{direction}}",
											"description": "Optional. Sort in ascending (asc) or descending (desc) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "{{include}}",
											"description": "Optional. Include call log records with header and body data. This query parameter accepts the \"request.headers\", \"request.body\", \"response.headers\", and \"response.body\" values. For multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Jun 2022 19:10:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7b522a87c70459d8"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=08e5bf465e218638"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The `/mocks` endpoints lets you manage your [mock servers](https://learning.postman.com/docs/designing-and-developing-your-api/mocking-data/setting-up-mock/).\n\n### Important\n\n**In Postman v10 and higher you cannot create mock servers for collections added to an API definition.** You can still create mock servers for collections that are not part of an API definition."
		},
		{
			"name": "Monitors",
			"item": [
				{
					"name": "Create a monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"monitor\": {\n    \"name\": \"{{monitorName}}\",\n    \"schedule\": {\n      \"cron\": \"{{cronFrequencyPattern}}\",\n      \"timezone\": \"{{monitorTimezone}}\"\n    },\n    \"collection\": \"{{collectionUid}}\",\n    \"environment\": \"{{environmentUid}}\"\n  }\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/monitors",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"monitors"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. The workspace ID.",
									"disabled": true
								}
							]
						},
						"description": "**In Postman v10 and higher you cannot create monitors for collections added to an API definition.**\n\nCreates a monitor. Include the following properties in the request body:\n\n- `name` — A **string** value that contains the monitor's name.\n- `schedule` — An **object** that contains the following properties:\n    - `cron` — A **string** value the monitor's run frequency. At this time you can only create monitors with limited schedules. For information about the available schedules, see our [Postman Monitors](https://monitor.getpostman.com) collection. See the table below for cron patterns.\n    - `timezone` — A string value that contains the monitor's [timezone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).\n- `collection` — A **string** value that contains the monitor's associated collection unique ID.\n- `environment` — A **string** value that contains the monitor's associated environment unique ID.\n    \n\n### Cron patterns\n\n| Frequency | Cron Pattern |\n| --- | --- |\n| Every 5 minutes | `\\\\\\*/5 \\\\\\* \\\\\\* \\\\\\* \\\\\\*` |\n| Every 30 minutes | `\\\\\\*/30 \\\\\\* \\\\\\* \\\\\\* \\\\\\*` |\n| Every Hour | `0 \\\\\\*/1 \\\\\\* \\\\\\* \\\\\\*` |\n| Every 6 Hours | `0 \\\\\\*/6 \\\\\\* \\\\\\* \\\\\\*` |\n| Every day at 5pm | `0 17 \\\\\\* \\\\\\* \\\\\\*` |\n| Every Monday at 12pm | `0 12 \\\\\\* \\\\\\* MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 \\\\\\* \\\\\\* MON-FRI` |"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782",
									"key": "postman.sid"
								}
							],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"
						},
						{
							"name": "Create Monitor in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"
						},
						{
							"name": "Invalid Cron Pattern",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"* * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t},\n\t\t\"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"cronPatternNotAllowedError\",\n        \"message\": \"The specified cron pattern is not allowed. Please check https://monitor.getpostman.com for the allowed schedules.\",\n        \"details\": {\n            \"pattern\": \"* * * * *\"\n        }\n    }\n}"
						},
						{
							"name": "Invalid Collection UID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"0 0 * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t},\n\t\t\"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidUidError\",\n        \"message\": \"The specified uid is invalid.\",\n        \"details\": {\n            \"param\": \"collection\",\n            \"uid\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Invalid Environment UID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidUidError\",\n        \"message\": \"The specified uid is invalid.\",\n        \"details\": {\n            \"param\": \"environment\",\n            \"uid\": \"5daabc50-8451-43f6-922d-96b403b4f28e\"\n        }\n    }\n}"
						},
						{
							"name": "Invalid Timezone",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"USA\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The request had invalid parameters\",\n        \"details\": {\n            \"param\": \"schedule.timezone\"\n        }\n    }\n}"
						},
						{
							"name": "Missing Parameter",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": [\n                \"name\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Forbidden Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You need read access to this collection in order to perform this action.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Run a monitor",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/monitors/{{monitorId}}/run",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"monitors",
								"{{monitorId}}",
								"run"
							]
						},
						"description": "Runs a monitor and returns its run results."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
										"run"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"run\": {\n        \"info\": {\n            \"jobId\": \"1ecee76a-e14e-47c0-bddc-256bf690c407\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"status\": \"success\",\n            \"startedAt\": \"2022-06-17T19:50:04.019Z\",\n            \"finishedAt\": \"2022-06-17T19:50:06.439Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 0,\n                \"failed\": 0\n            },\n            \"requests\": {\n                \"total\": 1,\n                \"failed\": 0\n            }\n        },\n        \"executions\": [\n            {\n                \"id\": 1,\n                \"item\": {\n                    \"name\": \"Sample POST Request\"\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"url\": \"http://echo.getpostman.com/post\",\n                    \"headers\": {\n                        \"Content-Type\": \"application/json\",\n                        \"User-Agent\": \"PostmanRuntime/7.29.0\",\n                        \"Accept\": \"*/*\",\n                        \"Cache-Control\": \"no-cache\",\n                        \"Postman-Token\": null,\n                        \"Host\": \"echo.getpostman.com\",\n                        \"Accept-Encoding\": \"gzip, deflate, br\",\n                        \"Connection\": \"keep-alive\",\n                        \"Content-Length\": \"0\"\n                    },\n                    \"body\": {\n                        \"contentLength\": 0\n                    },\n                    \"timestamp\": \"2022-06-17T19:50:06.186Z\"\n                },\n                \"response\": {\n                    \"code\": 200,\n                    \"body\": {\n                        \"contentLength\": 50\n                    },\n                    \"responseTime\": 49,\n                    \"responseSize\": 50,\n                    \"headers\": {\n                        \"Date\": \"Fri, 17 Jun 2022 19:50:06 GMT\",\n                        \"Content-Type\": \"text/plain\",\n                        \"Content-Length\": \"50\",\n                        \"Connection\": \"keep-alive\",\n                        \"Server\": null\n                    }\n                }\n            }\n        ],\n        \"failures\": []\n    }\n}"
						},
						{
							"name": "Monitor Run Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
										"run"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"run\": {\n        \"info\": {\n            \"jobId\": \"1ecee76a-e14e-47c0-bddc-256bf690c407\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"status\": \"failed\",\n            \"startedAt\": \"2022-06-17T20:00:41.659Z\",\n            \"finishedAt\": \"2022-06-17T20:00:42.693Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 1,\n                \"failed\": 1\n            },\n            \"requests\": {\n                \"total\": 1,\n                \"failed\": 0\n            }\n        },\n        \"executions\": [\n            {\n                \"id\": 1,\n                \"item\": {\n                    \"name\": \"Sample POST Request\"\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"url\": \"http://echo.getpostman.com/post\",\n                    \"headers\": {\n                        \"Content-Type\": \"application/json\",\n                        \"User-Agent\": \"PostmanRuntime/7.29.0\",\n                        \"Accept\": \"*/*\",\n                        \"Cache-Control\": \"no-cache\",\n                        \"Postman-Token\": null,\n                        \"Host\": \"echo.getpostman.com\",\n                        \"Accept-Encoding\": \"gzip, deflate, br\",\n                        \"Connection\": \"keep-alive\",\n                        \"Content-Length\": \"0\"\n                    },\n                    \"body\": {\n                        \"contentLength\": 0\n                    },\n                    \"timestamp\": \"2022-06-17T20:00:42.423Z\"\n                },\n                \"response\": {\n                    \"code\": 200,\n                    \"body\": {\n                        \"contentLength\": 50\n                    },\n                    \"responseTime\": 15,\n                    \"responseSize\": 50,\n                    \"headers\": {\n                        \"Date\": \"Fri, 17 Jun 2022 20:00:42 GMT\",\n                        \"Content-Type\": \"text/plain\",\n                        \"Content-Length\": \"50\",\n                        \"Connection\": \"keep-alive\",\n                        \"Server\": null\n                    }\n                }\n            }\n        ],\n        \"failures\": []\n    }\n}"
						},
						{
							"name": "Monitor Run with Errors",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
										"run"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"run\": {\n        \"info\": {\n            \"jobId\": \"1ecee76a-e14e-47c0-bddc-256bf690c407\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"status\": \"error\",\n            \"startedAt\": \"2022-06-17T20:04:47.183Z\",\n            \"finishedAt\": \"2022-06-17T20:04:48.858Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 4,\n                \"failed\": 2\n            },\n            \"requests\": {\n                \"total\": 4,\n                \"failed\": 3\n            }\n        },\n        \"executions\": [\n            {\n                \"id\": 1,\n                \"item\": {\n                    \"name\": \"Sample GET Request\"\n                },\n                \"request\": {\n                    \"method\": \"GET\",\n                    \"url\": \"https://example.com/search?format=json&state=&city=&country=\",\n                    \"headers\": {\n                        \"User-Agent\": \"PostmanRuntime/7.29.0\",\n                        \"Accept\": \"*/*\",\n                        \"Cache-Control\": \"no-cache\",\n                        \"Postman-Token\": null,\n                        \"Host\": \"example.com\",\n                        \"Accept-Encoding\": \"gzip, deflate, br\",\n                        \"Connection\": \"keep-alive\"\n                    },\n                    \"body\": {\n                        \"contentLength\": 0\n                    },\n                    \"timestamp\": \"2022-06-17T20:04:47.926Z\"\n                },\n                \"response\": {\n                    \"code\": 200,\n                    \"body\": {\n                        \"contentLength\": 2\n                    },\n                    \"responseTime\": 257,\n                    \"responseSize\": 2,\n                    \"headers\": {\n                        \"Server\": null,\n                        \"Date\": \"Fri, 17 Jun 2022 20:04:47 GMT\",\n                        \"Content-Type\": \"application/json; charset=UTF-8\",\n                        \"Transfer-Encoding\": \"chunked\",\n                        \"Connection\": \"keep-alive\",\n                        \"Keep-Alive\": null,\n                        \"Access-Control-Allow-Origin\": \"*\",\n                        \"Access-Control-Allow-Methods\": \"OPTIONS,GET\"\n                    }\n                },\n                \"errors\": [\n                    {\n                        \"name\": \"TypeError\",\n                        \"message\": \"Cannot read property 'lat' of undefined\"\n                    }\n                ]\n            }\n        ],\n        \"failures\": [\n            {\n                \"executionId\": 1,\n                \"name\": \"TypeError\",\n                \"message\": \"Cannot read property 'lat' of undefined\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
										"run"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Delete a monitor",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/monitors/{{monitorId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"monitors",
								"{{monitorId}}"
							]
						},
						"description": "Deletes a monitor."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"uid\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"serverError\",\n        \"message\": \"An error has occurred on the server.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all monitors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/monitors",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"monitors"
							]
						},
						"description": "Gets all monitors."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782",
									"key": "postman.sid"
								}
							],
							"body": "{\n  \"monitors\": [\n    {\n      \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n      \"name\": \"Test Monitor\",\n      \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n      \"owner\": 12345678\n    },\n    {\n      \"id\": \"1e6b6cb7-f13d-4000-acb7-0695757174a8\",\n      \"name\": \"Postman Echo Monitor\",\n      \"uid\": \"87654321-1e6b6cb7-f13d-4000-acb7-0695757174a8\",\n      \"owner\": 87654321\n    }\n  ]\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get a monitor",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/monitors/{{monitorId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"monitors",
								"{{monitorId}}"
							]
						},
						"description": "Gets information about a monitor."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782",
									"key": "postman.sid"
								}
							],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"owner\": 12345678,\n        \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"options\": {\n            \"strictSSL\": true,\n            \"followRedirects\": true,\n            \"requestTimeout\": 3000,\n            \"requestDelay\": 0\n        },\n        \"notifications\": {\n            \"onError\": [\n                {\n                    \"email\": \"user@example.com\"\n                }\n            ],\n            \"onFailure\": [\n                {\n                    \"email\": \"user@example.com\"\n                }\n            ]\n        },\n        \"distribution\": [],\n        \"schedule\": {\n            \"cron\": \"0 0 * * * *\",\n            \"timezone\": \"America/Chicago\",\n            \"nextRun\": \"2022-06-18T05:00:00.000Z\"\n        },\n        \"lastRun\": {\n            \"status\": \"failed\",\n            \"startedAt\": \"2022-06-17T18:39:52.852Z\",\n            \"finishedAt\": \"2022-06-17T18:39:53.707Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 8,\n                \"failed\": 1\n            },\n            \"requests\": {\n                \"total\": 4\n            }\n\t\t}\n\t}\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782",
									"key": "postman.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified monitor does not exist.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update a monitor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"{{monitorName}}\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"{{cronFrequencyPattern}}\",\n            \"timezone\": \"{{monitorTimezone}}\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/monitors/{{monitorId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"monitors",
								"{{monitorId}}"
							]
						},
						"description": "Updates a monitor. Include the following properties in the request body:\n\n- `name` — A **string** value that contains the monitor's name.\n- `schedule` — An **object** that contains the following properties:\n    - `cron` — A **string** value the monitor's run frequency. At this time you can only create monitors with limited schedules. For information about the available schedules, see our [Postman Monitors](https://monitor.getpostman.com) collection. See the table below for cron patterns.\n    - `timezone` — A string value that contains the monitor's [timezone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).\n\n### Cron patterns\n\n| Frequency | Cron Pattern |\n| --- | --- |\n| Every 5 minutes | `\\\\*/5 \\\\* \\\\* \\\\* \\\\*` |\n| Every 30 minutes | `\\\\*/30 \\\\* \\\\* \\\\* \\\\*` |\n| Every Hour | `0 \\\\*/1 \\\\* \\\\* \\\\*` |\n| Every 6 Hours | `0 \\\\*/6 \\\\* \\\\* \\\\*` |\n| Every day at 5pm | `0 17 \\\\* \\\\* \\\\*` |\n| Every Monday at 12pm | `0 12 \\\\* \\\\* MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 \\\\* \\\\* MON-FRI` |"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"*/5 * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t}\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782",
									"key": "postman.sid"
								}
							],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"*/5 * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t}\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified monitor does not exist.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"*/5 * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t}\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The `/monitors` endpoints let you manage your [monitors](https://learning.postman.com/docs/monitoring-your-api/intro-monitors/).\n\n### Important\n\n**In Postman v10 and higher you cannot create monitors for collections added to an API definition.** You can still create monitors for collections that are not part of an API definition."
		},
		{
			"name": "Private API Network",
			"item": [
				{
					"name": "Get all elements and folders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Key",
								"value": ""
							}
						],
						"url": {
							"raw": "https://api.getpostman.com/network/private",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"network",
								"private"
							],
							"query": [
								{
									"key": "since",
									"value": "{{since}}",
									"description": "Optional. Return only elements updated at and after this time, in ISO 8601 UTC format.",
									"disabled": true
								},
								{
									"key": "until",
									"value": "{{until}}",
									"description": "Optional. Return only elements updated at and before this time, in ISO 8601 UTC format.",
									"disabled": true
								},
								{
									"key": "addedBy",
									"value": "{{addedBy}}",
									"description": "Optional. Return only elements published by the given user ID.",
									"disabled": true
								},
								{
									"key": "name",
									"value": "{{name}}",
									"description": "Optional. Return only elements whose name includes the given value. Matching is not case-sensitive.",
									"disabled": true
								},
								{
									"key": "summary",
									"value": "{{summary}}",
									"description": "Optional. Return only elements whose summary includes the given value. Matching is not case-sensitive.",
									"disabled": true
								},
								{
									"key": "description",
									"value": "{{description}}",
									"description": "Optional. Return only elements whose description includes the given value. Matching is not case-sensitive.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "{{sort}}",
									"description": "Optional. Sort the results by the given value. One of:\n- `createdAt`\n- `updatedAt`\n\nIf you use this query parameter, you must also use the `direction` parameter.",
									"disabled": true
								},
								{
									"key": "direction",
									"value": "{{direction}}",
									"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive. If you use this query parameter, you must also use the `sort` parameter.",
									"disabled": true
								},
								{
									"key": "createdBy",
									"value": "{{createdBy}}",
									"description": "Optional. Return only the elements created by the given user ID.",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "{{offset}}",
									"description": "Optional. The zero-based offset of the first item to return. This value defaults to `0`.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Optional. The maximum number of elements to return. If the value exceeds the maximum value of `1000`, then the system uses the `1000` value.",
									"disabled": true
								},
								{
									"key": "parentFolderId",
									"value": "{{parentFolderId}}",
									"description": "Optional. Return the folders and elements in a specific folder in the Private API Network. If this value is `0`, then the endpoint only returns the root folder's elements.",
									"disabled": true
								},
								{
									"key": "type",
									"value": "{{type}}",
									"description": "Optional. Filter by the element type. One of:\n- `folder`\n- `workspace`\n- `collection`\n- `api`",
									"disabled": true
								}
							]
						},
						"description": "Gets information about the folders and elements added to your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). Elements are APIs, collections, and workspaces.\n\n**Note:**\n\nThe `limit` and `offset` parameters are separately applied to elements and folders. For example, if you query a `limit` value of `10` and an `offset` value `0`, the endpoint returns 10 elements and 10 folders for a total of 20 items. The `totalCount` property in the `meta` response is the total count of **both** elements and folders."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-Key",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"elements\": [\n        {\n            \"addedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"addedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"type\": \"api\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"parentFolderId\": 1,\n            \"name\": \"Billing API\",\n            \"summary\": \"The payments and account services API.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d\"\n        },\n        {\n            \"addedAt\": \"2021-11-29T06:31:26.000Z\",\n            \"addedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T13:59:34.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2021-11-29T06:31:26.000Z\",\n            \"type\": \"api\",\n            \"id\": \"41f6dc6d-d8ab-45c6-8506-74a25acf5d5f\",\n            \"parentFolderId\": 2,\n            \"name\": \"Reporting API\",\n            \"summary\": \"The reporting API.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/apis/41f6dc6d-d8ab-45c6-8506-74a25acf5d5f\"\n        }\n    ],\n    \"folders\": [\n        {\n            \"id\": 1,\n            \"parentFolderId\": 0,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"updatedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"name\": \"Billing\",\n            \"description\": \"The Billing API.\",\n            \"type\": \"folder\"\n        },\n        {\n            \"id\": 2,\n            \"parentFolderId\": 0,\n            \"updatedAt\": \"2022-10-17T11:54:51.000Z\",\n            \"updatedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2021-03-05T06:27:24.000Z\",\n            \"name\": \"Reporting\",\n            \"description\": null,\n            \"type\": \"folder\"\n        }\n    ],\n    \"meta\": {\n        \"limit\": 1000,\n        \"offset\": 0,\n        \"totalCount\": 2\n    }\n}"
						},
						{
							"name": "List Root Folder's Elements",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-Key",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/network/private?parentFolderId=0",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									],
									"query": [
										{
											"key": "parentFolderId",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"elements\": [\n        {\n            \"addedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"addedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"type\": \"api\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"parentFolderId\": 1,\n            \"name\": \"Billing API\",\n            \"summary\": \"The payments and account services API.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d\"\n        },\n        {\n            \"addedBy\": 12345678,\n            \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n            \"type\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Billing API Collection\",\n            \"summary\": \"The Billing API collection.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"parentFolderId\": 2,\n            \"environments\": [\n                \"120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb\",\n                \"7084-461d8126-22c8-43ed-b99d-27e8a34d8eef\"\n        ]\n      }\n    ],\n    \"folders\": [\n        {\n            \"id\": 1,\n            \"parentFolderId\": 0,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"updatedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"name\": \"Billing\",\n            \"description\": \"The Billing API.\",\n            \"type\": \"folder\"\n        }\n    ],\n    \"meta\": {\n        \"limit\": 1000,\n        \"offset\": 0,\n        \"totalCount\": 2\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-Key",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-Key",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-Key",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"serverError\",\n        \"message\": \"An error has occurred on the server.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-Key",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Add an element or folder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"{{elementType}}\": {\n        \"id\": \"{{elementId}}\",\n        \"parentFolderId\": {{parentFolderId}}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.getpostman.com/network/private",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"network",
								"private"
							]
						},
						"description": "Publishes a element or creates a folder in your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). An element is a Postman API, collection, or workspace.\n\nInclude the following in the request body object:\n\n- `elementType` — The Private API Network element type. One of:\n    - `api`\n    - `folder`\n    - `collection`\n    - `workspace`\n\nIn the `elementType` object, include the following values:\n\n**For APIs and Workspaces:**\n\n- `id` — A **string** value that contains the element's ID.\n- `parentFolderId` — An **integer** value that contains the element's parent folder ID.\n    \n\n**For Collections:**\n\n- `id` — A **string** value that contains the collection's UID (`userId`\\-`collectionId`).\n- `summary` — A **string** value that contains the collection's summary.\n- `parentFolderId` — An **integer** value that contains the collection's parent folder ID.\n    \n\n**For Private API Network Folders:**\n\n- `name` — A **string** value that contains the folder's name.\n- `description` — A **string** value that contains the folder's description.\n- `parentFolderId` — An **integer** value that contains the folder's parent folder ID."
					},
					"response": [
						{
							"name": "Add an API",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-06-09T14:48:45.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2021-10-11T09:39:33.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:54:33.000Z\",\n    \"type\": \"api\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Billing API\",\n    \"summary\": \"The payments and account services API.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Add a Collection",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": \"The Billing API collection.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Add a Collection with Environments",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"parentFolderId\": 1,\n        \"environments\": [\n              \"120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb\",\n              \"7084-461d8126-22c8-43ed-b99d-27e8a34d8eef\"\n            ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": \"The Billing API collection.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1,\n    \"environments\": [\n        \"120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb\",\n        \"7084-461d8126-22c8-43ed-b99d-27e8a34d8eef\"\n    ]\n}"
						},
						{
							"name": "Add a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T17:59:23.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"type\": \"workspace\",\n    \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"name\": \"Billing Team Workspace\",\n    \"summary\": \"The Billing team's workspace.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Create a Folder",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folder\": {\n        \"name\": \"Billing\",\n        \"description\": \"The Billing API.\",\n        \"parentFolderId\": 0\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"parentFolderId\": 0,\n    \"updatedAt\": \"2022-12-07T18:00:39.000Z\",\n    \"updatedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:00:39.000Z\",\n    \"name\": \"Billing\",\n    \"description\": \"The Billing API.\",\n    \"type\": \"folder\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified API does not exist.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"serverError\",\n        \"message\": \"An error has occurred on the server.\"\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update an element or folder",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"{{elementType}}\": {\n        \"parentFolderId\": {{parentFolderId}}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.getpostman.com/network/private/{{elementType}}/{{elementId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"network",
								"private",
								"{{elementType}}",
								"{{elementId}}"
							]
						},
						"description": "Updates an element or folder in your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). When you call this endpoint, the `elementType` property must be the `api`, `folder`, `collection`, or `workspace` value.\n\nThe `elementId` value is the `api`, `folder`, or `workspace` element's ID. For `collection`, this value is the collection's UID (`userId`\\-`collectionId`).\n\nInclude the following in the request body object:\n\n- `elementType` — The Private API Network element type. One of:\n    - `api`\n    - `folder`\n    - `collection`\n    - `workspace`\n\nIn the `elementType` object, include the following values:\n\n- `parentFolderId` — The element's new Private API Network folder ID.\n    \n\n**For Collections:**\n\n- `summary` — A **string** value that contains the collection's new summary.\n    \n\n**For Private API Network Folders:**\n\nYou can include the following optional properties:\n\n- `description` — A **string** value that contains the folder's new description.\n- `name` — A **string** value that contains the folder's new name."
					},
					"response": [
						{
							"name": "Update an API",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-06-09T14:48:45.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2021-10-11T09:39:33.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:54:33.000Z\",\n    \"type\": \"api\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Billing API\",\n    \"summary\": \"The payments and account services API.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/apis/fcf87a6d-6d10-4cfa-bed2-0c234ff99f7b\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Update a Collection",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/collection/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"collection",
										"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": \"The Billing API collection.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Update a Collection's Environments",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"parentFolderId\": 1,\n        \"environments\": {\n            \"$add\": [\n                \"660a6sa-c8sa37-46ca-9sa1d8-7e8c669d1\",\n                \"02466-c837-46ca-9sa1d8-7e669d1\"\n            ],\n            \"$remove\": [\n                \"024660a6-c837-46ca-9sa1d8-7e8dd7c669d1\"\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/collection/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"collection",
										"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": \"The Billing API collection.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1,\n    \"environments\": [\n        \"660a6sa-c8sa37-46ca-9sa1d8-7e8c669d1\",\n        \"02466-c837-46ca-9sa1d8-7e669d1\"\n    ]\n}"
						},
						{
							"name": "Update a Workspace",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/workspace/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"workspace",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T17:59:23.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"type\": \"workspace\",\n    \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"name\": \"Billing Team Workspace\",\n    \"summary\": \"The Billing team's workspace.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Update a Folder",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folder\": {\n        \"name\": \"Billing\",\n        \"description\": \"The Billing API.\",\n        \"parentFolderId\": 0\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/folder/1234",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"folder",
										"1234"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"parentFolderId\": 0,\n    \"updatedAt\": \"2022-12-07T20:27:06.000Z\",\n    \"updatedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T17:04:23.000Z\",\n    \"name\": \"Billing\",\n    \"description\": \"The Billing API.\",\n    \"type\": \"folder\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified API does not exist.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Remove an element or folder",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/network/private/{{elementType}}/{{elementId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"network",
								"private",
								"{{elementType}}",
								"{{elementId}}"
							]
						},
						"description": "Removes an element or delete a folder from your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/).\n\n**Note:**\n\nRemoving an API, collection, or workspace element does **not** delete it. It only removes it from the Private API Network folder."
					},
					"response": [
						{
							"name": "Remove an API",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\"\n    }\n}"
						},
						{
							"name": "Remove a Collection",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/collection/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"collection",
										"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Remove a Workspace",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/workspace/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"workspace",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\"\n    }\n}"
						},
						{
							"name": "Delete a Folder",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/folder/1234",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"folder",
										"1234"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"folder\": {\n        \"id\": \"1\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified API does not exist.\"\n    }\n}"
						},
						{
							"name": "Folder Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/folder/1234",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"folder",
										"1234"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"Instance not found for the model Folder, id 1\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Folder Not Empty",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/folder/1234",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"folder",
										"1234"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"folderNotEmptyError\",\n    \"message\": \"You need to empty this folder before deleting it.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1234\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all element add requests",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Key",
								"value": "{{x-api-key}}"
							}
						],
						"url": {
							"raw": "https://api.getpostman.com/network/private/network-entity/request/all",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"network",
								"private",
								"network-entity",
								"request",
								"all"
							],
							"query": [
								{
									"key": "since",
									"value": "{{since}}",
									"description": "Optional. Return only elements updated at and after this time, in ISO 8601 UTC format.",
									"disabled": true
								},
								{
									"key": "until",
									"value": "{{until}}",
									"description": "Optional. Return only elements updated at and before this time, in ISO 8601 UTC format.",
									"disabled": true
								},
								{
									"key": "requestedBy",
									"value": "{{requestedBy}}",
									"description": "Optional. Return a user's element requests by their user ID.",
									"disabled": true
								},
								{
									"key": "type",
									"value": "{{type}}",
									"description": "Optional. Filter by the element type. One of: `workspace`, `collection`, `api`.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "{{status}}",
									"description": "Optional. Filter by the request status. One of: `pending`, `denied`.",
									"disabled": true
								},
								{
									"key": "name",
									"value": "{{name}}",
									"description": "Optional. Return only elements whose name includes the given value. Matching is not case-sensitive.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "{{sort}}",
									"description": "Optional. Sort the results by the `name` or `updatedAt` properties. If you use this query parameter, you must also use the `direction` parameter.",
									"disabled": true
								},
								{
									"key": "direction",
									"value": "{{direction}}",
									"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive. If you use this query parameter, you must also use the `sort` parameter.",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "{{offset}}",
									"description": "Optional. The zero-based offset of the first item to return. This value defaults to `0`.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Optional. The maximum number of elements to return. If the value exceeds the maximum value of `1000`, then the system uses the `1000` value.",
									"disabled": true
								}
							]
						},
						"description": "Gets a list requests to add elements to the [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-Key",
										"value": "{{x-api-key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/network/private/network-entity/request/all?since=2022-09-28T13:48:09.000Z&requestedBy=12345678&offset=5&limit=10",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"network-entity",
										"request",
										"all"
									],
									"query": [
										{
											"key": "since",
											"value": "2022-09-28T13:48:09.000Z"
										},
										{
											"key": "requestedBy",
											"value": "12345678"
										},
										{
											"key": "offset",
											"value": "5"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"requests\": [\n        {\n            \"id\": 1,\n            \"createdBy\": 87654321,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"status\": \"pending\",\n            \"element\": {\n                \"type\": \"api\",\n                \"id\": \"360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test api\",\n                \"summary\": \"Test api summary\"\n            }\n        },\n        {\n            \"id\": 2,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"message\": \"Please approve this collection\",\n            \"status\": \"denied\",\n            \"element\": {\n                \"type\": \"collection\",\n                \"id\": \"5360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test Collection\",\n                \"summary\": \"This is a test collection.\"\n            },\n            \"response\": {\n                \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n                \"createdBy\": 2272,\n                \"message\": \"Too many errors, please fix and resubmit\"\n            }\n        }\n    ],\n    \"meta\": {\n        \"limit\": 10,\n        \"offset\": 5,\n        \"totalCount\": 100\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-API-Key",
										"value": "{{x-api-key}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/network/private/network-entity/request/all",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"network-entity",
										"request",
										"all"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The specified request does not exist.\"\n}"
						}
					]
				},
				{
					"name": "Respond to an element add request",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"response\": {\n        \"message\": {{responderMessage}}\n    },\n    \"status\": {{responseStatus}}\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/network/private/network-entity/request/:id",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"network",
								"private",
								"network-entity",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{requestId}}",
									"description": "The element request's ID."
								}
							]
						},
						"description": "Responds to a user's request to add an element to the [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). Include the following in the request body:\n\n- `message` — A **string** value in a `response` object that contains a message that details why the user's request was denied.\n- `status` — A **string** value that contains the request's status. One of:\n    - `denied`\n    - `approved`"
					},
					"response": [
						{
							"name": "Request Denied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"denied\",\n    \"response\": {\n        \"message\": \"The requested collection has a lot of governance violations. Please fix them.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/network-entity/request/:id",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"network-entity",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "232"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"request\": [\n        {\n            \"id\": 2,\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"createdBy\": 12345678,\n            \"message\": \"Please add this to the network\",\n            \"status\": \"denied\",\n            \"element\": {\n                \"type\": \"api\",\n                \"id\": \"5360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test api\",\n                \"summary\": \"This is a test API\"\n            },\n            \"response\": {\n                \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n                \"createdBy\": 2272,\n                \"message\": \"Please fix the API issues first\"\n            }\n        }\n    ]\n}"
						},
						{
							"name": "Request Approved",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"approved\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/network-entity/request/:id",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"network-entity",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "232"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"request\": [\n        {\n            \"id\": 1,\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"createdBy\": 12345678,\n            \"message\": \"Please add this to the network\",\n            \"status\": \"approved\",\n            \"element\": {\n                \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n                \"createdBy\": 2272,\n                \"type\": \"api\",\n                \"id\": \"5360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test api\",\n                \"summary\": \"This is a test API\"\n            }\n        }\n    ]\n}"
						},
						{
							"name": "Request Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"approved\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/network-entity/request/:id",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"network-entity",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "232"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"RequestNotFound\",\n    \"message\": \"No request found for the corresponding ID\"\n}"
						},
						{
							"name": "Invalid Request Payload",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"accepted\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/network-entity/request/:id",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"network-entity",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "232"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"invalidParamsError\",\n    \"message\": \"Status type can only be denied or approved.\"\n}"
						},
						{
							"name": "Requested Element Already Published",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"approved\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/network-entity/request/:id",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"network-entity",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "232"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"requestEntityAlreadyPublished\",\n    \"message\": \"Test api has already been published to the network\"\n}"
						},
						{
							"name": "Request Already Responded To",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"approved\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/network-entity/request/:id",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"network-entity",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "232"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"requestAlreadyResponded\",\n    \"message\": \"This request is already responded.\"\n}"
						}
					]
				}
			],
			"description": "The `/private` endpoint lets you manage and work with your team's [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/)."
		},
		{
			"name": "Workspaces",
			"item": [
				{
					"name": "Update a workspace",
					"request": {
						"method": "PUT",
						"header": [
							{
								"name": "Content-Type",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"workspace\": {\n        \"name\": \"{{workspaceName}}\",\n        \"type\": \"{{workspaceType}}\",\n        \"description\": \"{{workspaceDescription}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/workspaces/{{workspaceId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"workspaces",
								"{{workspaceId}}"
							]
						},
						"description": "Updates a workspace. You can use the following request body properties to update the workspace:\n\n- `name` — A **string** that contains the workspace's new name.\n- `type` — A **string** that contains the workspace type:\n    - `personal` — A personal workspace.\n    - `team` — A team workspace.\n- `description` — A **string** that contains the new workspace description.\n    \n\n**Note:**\n\nYou can change a workspace's `type` from `personal` to `team`, but you **cannot** change a workspace from `team` to `personal`.\n\n### **Important**\n\nWe **deprecated** linking collections or environments between workspaces. We do **not** recommend that you do this.\n\nIf you have a linked collection or environment, note the following:\n\n- The endpoint does **not** create a clone of a collection or environment.\n- Any changes you make to a linked collection or environment changes them in **all** workspaces.\n- If you delete a collection or environment linked between workspaces, the system deletes it in **all** the workspaces."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Test Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a test team workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Test Workspace\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Test Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a test team workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified workspace does not exist.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Test Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a test team workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have access to update this workspace.\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Test Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a test team workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidUIDError\",\n        \"message\": \"The ID provided is not a valid UID.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Test Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a test team workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Create a workspace",
					"request": {
						"method": "POST",
						"header": [
							{
								"name": "Content-Type",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"workspace\": {\n        \"name\": \"{{workspaceName}}\",\n        \"type\": \"{{workspaceType}}\",\n        \"description\": \"{{workspaceDescription}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/workspaces",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"workspaces"
							]
						},
						"description": "Creates a new [workspace](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/). Include the following properties in the request body:\n\n- `name` — A **string** that contains the workspace's name.\n- `type` — A **string** that contains the workspace type:\n    - `personal`\n    - `private` — Private workspaces are available on Postman [Professional and Enterprise plans](https://www.postman.com/pricing).\n    - `public`\n    - `team`\n    - `partner` — [Partner Workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) are available on Postman [Enterprise Ultimate plans](https://www.postman.com/pricing).\n- `description` — Optional. A **string** that contains a description of the workspace.\n    \n\n### Important\n\nWe **deprecated** linking collections or environments between workspaces. We do **not** recommend that you do this.\n\nIf you have a linked collection or environment, note the following:\n\n- The endpoint does **not** create a clone of a collection or environment.\n- Any changes you make to a linked collection or environment changes them in **all** workspaces.\n- If you delete a collection or environment linked between workspaces, the system deletes it in **all** the workspaces."
					},
					"response": [
						{
							"name": "Create a Personal Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Personal Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is a personal workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Personal Workspace\"\n    }\n}"
						},
						{
							"name": "Create a Public Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Public Workspace\",\n        \"type\": \"public\",\n        \"description\": \"This is a public workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Public Workspace\"\n    }\n}"
						},
						{
							"name": "Create a Private Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Private Workspace\",\n        \"type\": \"private\",\n        \"description\": \"This is a private workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Private Workspace\"\n    }\n}"
						},
						{
							"name": "Create a Team Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Team Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a team workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Team Workspace\"\n    }\n}"
						},
						{
							"name": "Create a Partner Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Team Workspace\",\n        \"type\": \"partner\",\n        \"description\": \"This is a partner workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Partner Workspace\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"type\": \"personal\",\n        \"description\": \"This is a test personal workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamError\",\n        \"message\": \"body should have required property 'name'\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Test Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is a test personal workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get a workspace",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/workspaces/{{workspaceId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"workspaces",
								"{{workspaceId}}"
							]
						},
						"description": "Gets information about a workspace.\n\n**Note:**\n\nThis endpoint's response contains the `visibility` field. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:\n\n- `personal` — Only you can access the workspace.\n- `team` — All team members can access the workspace.\n- `private` — Only invited team members can access the workspace ([Professional and Enterprise plans only](https://www.postman.com/pricing)).\n- `public` — Everyone can access the workspace.\n- `partner` — Only invited team members and [partners](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) can access the workspace ([Enterprise Ultimate plans](https://www.postman.com/pricing) only).\n    \n\n### Important\n\nWe have **deprecated** the `name` and `uid` responses in the following array of objects:\n\n- `collections`\n- `environments`\n- `mocks`\n- `monitors`\n- `apis`"
					},
					"response": [
						{
							"name": "Get a Personal Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"My Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is your personal, private workspace to play around in. Only you can see the collections and APIs you create here - unless you share them with your team.\",\n        \"visibility\": \"personal\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Get a Public Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Public Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a public workspace.\",\n        \"visibility\": \"public\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Get a Private Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Private Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a private workspace.\",\n        \"visibility\": \"private\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Get a Team Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Team Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a team workspace.\",\n        \"visibility\": \"team\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Get a Partner Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Partner Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a partner workspace.\",\n        \"visibility\": \"partner\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "The mime type of this content",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"workspaceNotFoundError\",\n        \"message\": \"Workspace not found\",\n        \"statusCode\": 404\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "The mime type of this content",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"Instance not found in the database.\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete a workspace",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/workspaces/{{workspaceId}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"workspaces",
								"{{workspaceId}}"
							]
						},
						"description": "Deletes an existing workspace.\n\n### **Important:**\n\nIf you delete a workspace that has a linked collection or environment with another workspace, this will delete the collection and environment in **all** workspaces."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"workspaceNotFoundError\",\n        \"message\": \"Workspace not found\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all workspaces",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/workspaces",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"workspaces"
							],
							"query": [
								{
									"key": "type",
									"value": "<string>",
									"description": "Optional. The type of workspace to filter the response by:\n\n* `personal`\n* `team`\n* `private`\n* `public`\n* `partner`",
									"disabled": true
								}
							]
						},
						"description": "Gets all [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/). The response includes your workspaces and any workspaces that you have access to.\n\n**Note:**\n\nThis endpoint's response contains the `visibility` field. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:\n\n- `personal` — Only you can access the workspace.\n- `team` — All team members can access the workspace.\n- `private` — Only invited team members can access the workspace ([Professional and Enterprise plans only](https://www.postman.com/pricing)).\n- `public` — Everyone can access the workspace.\n- `partner` — Only invited team members and [partners](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) can access the workspace ([Enterprise Ultimate plans](https://www.postman.com/pricing) only)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspaces\": [\n        {\n            \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n            \"name\": \"My Workspace\",\n            \"type\": \"personal\",\n            \"visibility\": \"personal\"\n        },\n        {\n            \"id\": \"a0f46158-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Private Workspace\",\n            \"type\": \"team\",\n            \"visibility\": \"private\"\n        },\n        {\n            \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n            \"name\": \"Team Workspace\",\n            \"type\": \"team\",\n            \"visibility\": \"team\"\n        },\n        {\n            \"id\": \"74dbfab8-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Public Workspace\",\n            \"type\": \"team\",\n            \"visibility\": \"public\"\n        },\n        {\n            \"id\": \"74dbfab8-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Partner Workspace\",\n            \"type\": \"team\",\n            \"visibility\": \"partner\"\n        }\n    ]\n}"
						},
						{
							"name": "Filter by type Team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces?type=team",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "type",
											"value": "team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspaces\": [\n        {\n            \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n            \"name\": \"Team Workspace\",\n            \"type\": \"team\",\n            \"visibility\": \"team\"\n        }\n    ]\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>",
											"description": "Optional. The type of workspace to filter the response by:\n\n* `team` — Return only team workspaces.\n* `personal` — Return only personal workspaces.",
											"disabled": true
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The `/workspaces` endpoints let you manage your [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/)."
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Get entities by tag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/tags/:slug/entities",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"tags",
								":slug",
								"entities"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of tagged entities to return in a single call.",
									"disabled": true
								},
								{
									"key": "direction",
									"value": "{{direction}}",
									"description": "The ascending (`asc`) or descending (`desc`) order to sort the results by, based on the time of the entity's tagging.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "{{cursor}}",
									"description": "The cursor to get the next set of results in the paginated response. Use the `nextCursor` value in the response's `meta` object for this value.\n\nIf you pass an invalid value, the API only returns the first set of results.",
									"disabled": true
								},
								{
									"key": "entityType",
									"value": "{{entityType}}",
									"description": "Filter results for the given entity type:\n- `api`\n- `collection`\n- `workspace`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "slug",
									"value": "{{slugId}}",
									"description": "The tag's ID within a team or individual (non-team) user scope."
								}
							]
						},
						"description": "Gets Postman entities by a given tag. Tags enable you to organize and search [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#tagging-a-workspace), [APIs](https://learning.postman.com/docs/designing-and-developing-your-api/managing-apis/#tagging-apis), and [collections](https://learning.postman.com/docs/collections/using-collections/#tagging-a-collection) that contain shared tags."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/:slug/entities",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										":slug",
										"entities"
									],
									"variable": [
										{
											"key": "slug",
											"value": "needs-review"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"entities\": [\n            {\n                \"entityId\": \"8b86dfe8-de72-44e6-81ea-79d19805bc6a\",\n                \"entityType\": \"api\"\n            }\n        ]\n    },\n    \"meta\": {\n        \"count\": 1\n    }\n}"
						},
						{
							"name": "Successful Response With Next Cursor",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/:slug/entities?cursor=eyJpZCI6ODYsImVudGl0eVR5cGUiOiJhcGkifQ==",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										":slug",
										"entities"
									],
									"query": [
										{
											"key": "cursor",
											"value": "eyJpZCI6ODYsImVudGl0eVR5cGUiOiJhcGkifQ==",
											"description": "The `nextCursor` value from previous page's response."
										}
									],
									"variable": [
										{
											"key": "slug",
											"value": "needs-review"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"entities\": [\n      {\n        \"entityId\": \"12345678-6fd634a3-79ba-451d-8f07-56a953f96667\",\n        \"entityType\": \"collection\"\n      },\n      {\n        \"entityId\": \"7a95cfe8-de72-44e6-81ea-79d19805bd7b\",\n        \"entityType\": \"api\"\n      }\n    ]\n  },\n  \"meta\": {\n    \"count\": 2,\n    \"nextCursor\": \"eyJpZCI6ODYsImVudGl0eVR5cGUiOiJhcGkifQ==\"\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/:slug/entities",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										":slug",
										"entities"
									],
									"variable": [
										{
											"key": "slug",
											"value": "needs-review"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/:slug/entities",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										":slug",
										"entities"
									],
									"variable": [
										{
											"key": "slug",
											"value": "needs-review"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/:slug/entities",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										":slug",
										"entities"
									],
									"variable": [
										{
											"key": "slug",
											"value": "needs-review"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Resource Not Found\",\n    \"detail\": \"Slug 'needs-review' does not exist\",\n    \"status\": 404,\n    \"instance\": \"/slugs/needs-review/entities\"\n}"
						},
						{
							"name": "Unexpected Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/:slug/entities",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										":slug",
										"entities"
									],
									"variable": [
										{
											"key": "slug",
											"value": "needs-review"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Something went wrong\",\n    \"detail\": \"Something went wrong while fetching entities having the provided slug\",\n    \"status\": 500,\n    \"instance\": \"/tags/hello-world/entities\"\n}"
						}
					]
				}
			],
			"description": "The `/tags` endpoint lets you manage Postman's tagging feature. Enterprise users can add tags to collections, APIs, and workspaces. Tags enable users [search Postman entities](https://learning.postman.com/docs/getting-started/navigating-postman/#search-postman) using these tags."
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get authenticated user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/me",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"me"
							]
						},
						"description": "Gets information about the authenticated user.\n\n**Note:**\n\nThis API returns a different response for users with the [Guest role](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/me",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"id\": 12345678,\n        \"username\": \"taylor-lee\",\n        \"email\": \"taylor.lee@example.com\",\n        \"fullName\": \"Taylor Lee\",\n        \"avatar\": \"https://example.com/user/r5u9qpvmujfjf6lbqmga.jpg\",\n        \"isPublic\": true\n    },\n    \"operations\": [\n        {\n            \"name\": \"mock_usage\",\n            \"limit\": 1000000,\n            \"usage\": 110276,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"monitor_request_runs\",\n            \"limit\": 10000000,\n            \"usage\": 1141750,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"api_usage\",\n            \"limit\": 1000000,\n            \"usage\": 16240,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"custom_domains\",\n            \"limit\": 25,\n            \"usage\": 25,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"serverless_requests\",\n            \"limit\": 10000,\n            \"usage\": 0,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"integrations\",\n            \"limit\": 5000,\n            \"usage\": 1018,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"cloud_agent_requests\",\n            \"limit\": 1000000,\n            \"usage\": 1615,\n            \"overage\": 0\n        }\n    ]\n}"
						},
						{
							"name": "Guest User Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/me",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"id\": 12345678,\n        \"username\": \"taylor-lee\",\n        \"email\": \"taylor.lee@example.com\",\n        \"fullName\": \"Taylor Lee\",\n        \"avatar\": \"https://example.com/user/r5u9qpvmujfjf6lbqmga.jpg\",\n        \"isPublic\": true\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/me",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/me",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The `/me` endpoints let you manage information about the authenticated user."
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Create a webhook",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"webhook\":{\n        \"name\": \"{{webhookName}}\",\n        \"collection\": \"{{collectionUid}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.getpostman.com/webhooks",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"webhooks"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. A workspace ID in which to create the webhook.\n\nIf you do not include this query parameter, the system creates the webhook in your \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "Creates a webhook that triggers a collection with a custom payload. You can get the webhook's URL from the `webhookUrl` property in the endpoint's response.\n\nInclude the following properties in a `webhook` object in the request body:\n\n*   `name` — The webhook's name. On success, the system creates a new monitor with this name in the **Monitors** tab.\n*   `collection` — The collection UID to trigger when calling this webhook."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-workspace-id",
										"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhook\":{\n        \"name\": \"Test Webhook\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/webhooks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the webhook.\n\nIf you do not include this query parameter, the system creates the webhook in your \"My Workspace\" workspace."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"webhook\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Test Webhook\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"webhookUrl\": \"https://newman-api.getpostman.com/run/12345678/267a6e99-b6da-407c-a96f-03be2d6282fb\",\n        \"uid\": \"12345678-1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-workspace-id",
										"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhook\":{\n        \"name\": \"Test Webhook\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/webhooks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the webhook.\n\nIf you do not include this query parameter, the system creates the webhook in your \"My Workspace\" workspace."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The `/webhooks` endpoints let you manage [custom webhooks](https://learning.postman.com/docs/running-collections/collection-webhooks/)."
		},
		{
			"name": "SCIM 2.0 - Identity",
			"item": [
				{
					"name": "User Provisioning",
					"item": [
						{
							"name": "Get a user resource",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/Users/{{userId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"Users",
										"{{userId}}"
									]
								},
								"description": "Gets information about a Postman team member."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to fetch information about this team member.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Update a user",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"{{userName}}\",\n    \"name\": {\n        \"givenName\": \"{{firstName}}\",\n        \"familyName\": \"{{lastName}}\"\n    },\n    \"externalId\": \"{{externalId}}\",\n    \"locale\": \"{{locale}}\",\n    \"groups\": [\n        \"{{groupId}}\"\n    ],\n    \"active\": {{boolean}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/Users/{{userId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"Users",
										"{{userId}}"
									]
								},
								"description": "Updates a user's first and last name in Postman.\n\n**Note:**\n\nThis endpoint only updates a user's first and last name and pushes it to Postman. You cannot update any other user attributes with the SCIM API."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}s",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s username. Try again — it should work next time around.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Syntax",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Admin Action Not Allowed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"The admin is not allowed to perform this action.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "User Not in Team",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s information. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Create a user",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"{{userEmail}}\",\n    \"name\": {\n        \"givenName\": \"{{firstName}}\",\n        \"familyName\": \"{{lastName}}\"\n    },\n    \"locale\": \"{{locale}}\",\n    \"groups\": [\n        \"{{groupId}}\"\n    ],\n    \"active\": {{boolean}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/Users",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"Users"
									]
								},
								"description": "Creates a new user account in Postman and adds the user to your organization's Postman team. If the account does not already exist, this also activates the user so they can authenticate in to your Postman team.\n\nIf the account already exists, the system sends the user an [email invite](https://learning.postman.com/docs/administration/managing-your-team/managing-your-team/#inviting-users) to join the Postman team. The user joins the team once they accept the invite.\n\nBy default, the system assigns new users the developer role. You can [update user roles in Postman](https://learning.postman.com/docs/administration/managing-your-team/managing-your-team/#managing-team-roles)."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"emails\": [\n        {\n            \"primary\": true,\n            \"value\": \"taylor-lee@example.com\",\n            \"type\": \"work\",\n            \"display\": \"taylor-lee@example.com\"\n        }\n    ],\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Create User In Group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"groups\": [\n        \"g3d420314611061d6461b2b27487dcf2e58e39d744c8542f\"\n    ],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"emails\": [\n        {\n            \"primary\": true,\n            \"value\": \"taylor-lee@example.com\",\n            \"type\": \"work\",\n            \"display\": \"taylor-lee@example.com\"\n        }\n    ],\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Invalid Syntax",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Not Enterprise",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Only Postman teams on the Enterprise plan can use SCIM provisioning. Upgrade your plan.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "No Slots Available",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"No slots available on your Postman team. Purchase or free up slots to invite more members. For help, contact Team Admins or members with a Billing role.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person is already a member of the team.\",\n    \"scimType\": \"uniqueness\",\n    \"status\": \"409\"\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to add members to the team. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Get all user resources",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/Users",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"Users"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "<integer>",
											"description": "The index entry by which to begin the list of returned results.",
											"disabled": true
										},
										{
											"key": "count",
											"value": "<integer>",
											"description": "Limit the number of results returned in a single response. By default, the system returns a list of 100 users.",
											"disabled": true
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by a specific word or phrase. For example, user the `userName eq \"user%40example.com\"` value to filter for the `user@example.com` username.",
											"disabled": true
										}
									]
								},
								"description": "Gets information about all Postman team members."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users?startIndex=1&count=50",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1",
													"description": "The index entry by which to begin the list of returned results."
												},
												{
													"key": "count",
													"value": "50",
													"description": "Limit the number of results returned in a single response. By default, the system returns a list of 100 users."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 2,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 2,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:User\"\n            ],\n            \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"userName\": \"taylor-lee@example.com\",\n            \"name\": {\n                \"givenName\": \"Taylor\",\n                \"familyName\": \"Lee\"\n            },\n            \"externalId\": \"12345678\",\n            \"active\": true,\n            \"meta\": {\n                \"resourceType\": \"User\",\n                \"created\": \"2021-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n            }\n        },\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:User\"\n            ],\n            \"id\": \"123775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"userName\": \"alex-cruz@okta.local\",\n            \"name\": {\n                \"givenName\": \"Alex\",\n                \"familyName\": \"Cruz\"\n            },\n            \"externalId\": \"87654321\",\n            \"active\": true,\n            \"meta\": {\n                \"resourceType\": \"User\",\n                \"created\": \"2021-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"
								},
								{
									"name": "No Results Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users?startIndex=1&count=50",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1",
													"description": "The index entry by which to begin the list of returned results."
												},
												{
													"key": "count",
													"value": "50",
													"description": "Limit the number of results returned in a single response. By default, the system returns a list of 100 users."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 2,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 0,\n    \"Resources\": []\n}"
								},
								{
									"name": "Filter Results",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users?filter=userName eq \"taylor-lee%40example.com\"",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "filter",
													"value": "userName eq \"taylor-lee%40example.com\"",
													"description": "Filter results by a specific word or phrase. For example, user the `userName eq \"user%40example.com\"` value to filter for the `user@example.com` username."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 2,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 1,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:User\"\n            ],\n            \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"userName\": \"taylor-lee@example.com\",\n            \"name\": {\n                \"givenName\": \"Taylor\",\n                \"familyName\": \"Lee\"\n            },\n            \"externalId\": \"12345678\",\n            \"active\": true,\n            \"meta\": {\n                \"resourceType\": \"User\",\n                \"created\": \"2021-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"
								},
								{
									"name": "Invalid Filter",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users?filter=username ne \"test%40domain.com\"",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "filter",
													"value": "username ne \"test%40domain.com\"",
													"description": "Filter results by a specific word or phrase. For example, user the `userName eq \"user%40example.com\"` value to filter for the `user@example.com` username."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"You’ve used filter(s) that Postman doesn’t support.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users?startIndex=1&count=50",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1",
													"description": "The index entry by which to begin the list of returned results."
												},
												{
													"key": "count",
													"value": "50",
													"description": "Limit the number of results returned in a single response. By default, the system returns a list of 100 users."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t fetch members of the team.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Update a user's state",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": {{boolean}}\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/Users/{{userId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"Users",
										"{{userId}}"
									]
								},
								"description": "Updates a user's active state in Postman. Set the `active` property in the request body to one of the following values:\n\n- `true` — Activates the user. This lets them authenticate in to your Postman team.\n- `false` — Removes the user from your Postman team and deactivates the account. This blocks the user from authenticating in to Postman.\n    \n\n### Reactivating users\n\nBy setting the `active` property from `false` to `true`, this reactivates an account. This allows the account to authenticate in to Postman and adds the account back on to your Postman team."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"active\": false,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"You’ve used operation that Postman doesn’t support.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Team doesn't exist.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Admin Team Mismatch",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Too Many Requests",
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s information. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"
								}
							]
						}
					],
					"description": "The `/scim/v2/Users` endpoint lets you provision and manage your Postman users.\n\n**Note:**\n\nYou can only deactivate users with the SCIM API. You **cannot** permanently delete users with the API.\n\n### Provisioning users with the SCIM API\n\n- You can only deactivate users with the SCIM API. You **cannot** permanently delete users with the API.\n- Users created with the SCIM API are automatically created in Postman.\n    - If the account's email ID does not exist, the user is also added to their organization's Postman team.\n    - If the account's email ID already exists, the system sends the user an email invite to join the Postman team. After they accept the invite, the are added to the team.\n- By default, new users are given the developer role in Postman. Postman user roles cannot be updated via the SCIM API. You must manage user and group roles in Postman."
				},
				{
					"name": "Group Provisioning",
					"item": [
						{
							"name": "Get all group resources",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/Groups",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"Groups"
									]
								},
								"description": "Gets all Postman groups within the team."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 2,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 2,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n            ],\n            \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n            \"displayName\": \"Test-API\",\n            \"members\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"Taylor Lee\"\n                }\n            ],\n            \"externalId\": \"1234\",\n            \"meta\": {\n                \"resourceType\": \"Group\",\n                \"created\": \"2022-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n            }\n        },\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n            ],\n            \"id\": \"123775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"displayName\": \"Test Group\",\n            \"members\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"Taylor Lee\"\n                },\n                {\n                    \"value\": \"ghc794f24f4c49f4b5d503a4cb2686e90\",\n                    \"display\": \"Alex Cruz\"\n                }\n            ],\n            \"externalId\": \"4321\",\n            \"meta\": {\n                \"resourceType\": \"Group\",\n                \"created\": \"2022-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"
								},
								{
									"name": "Filter Results",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups?filter=displayName eq \"Test-API\"",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											],
											"query": [
												{
													"key": "filter",
													"value": "displayName eq \"Test-API\""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 1,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 1,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n            ],\n            \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n            \"displayName\": \"Test-API\",\n            \"members\": [\n                {\n                    \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\",\n                    \"display\": \"Taylor Lee\"\n                }\n            ],\n            \"externalId\": \"1234\",\n            \"meta\": {\n                \"resourceType\": \"Group\",\n                \"created\": \"2022-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"
								},
								{
									"name": "No Results Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups?startIndex=1&count=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 0,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 0,\n    \"Resources\": []\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Filter",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups?startIndex=1&count=2&filter=displayName ne \"Test SCIMv2\"",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "2"
												},
												{
													"key": "filter",
													"value": "displayName ne \"Test SCIMv2\"",
													"description": "Enter URL encoded email"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"You’ve used filter(s) that Postman doesn’t support.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t fetch members of the team.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Update a group",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"{{operation}}\",\n            \"value\": {\n                \"id\": \"{{groupId}}\",\n                \"displayName\": \"{{userGroupName}}\"\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/Groups/{{groupId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"Groups",
										"{{groupId}}"
									]
								},
								"description": "Updates a group's information. Using this endpoint you can:\n\n- Update a group's name.\n- Add or remove members from a Postman group.\n    \n\nInclude the following properties in the request body:\n\n- `Operations` — An **object** that contains the following properties:\n    - `op` — The operation to perform. One of:\n        - `add`\n        - `remove`\n        - `replace`\n    - `value` — An **object** that contains the following properties:\n        - `id` — The group's ID.\n        - `displayName` — The group's display name."
							},
							"response": [
								{
									"name": "Update a Group Name",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": null,\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Add Team Members",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"members\",\n            \"value\": [\n                {\n                    \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n                    \"display\": \"alex.cruz@example.com\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        },\n        {\n            \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n            \"display\": \"alex.cruz@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Remove Team Members",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"remove\",\n            \"path\": \"members[value eq \\\"89bb1940b90545759e7f6f887cfb368e\\\"]\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Replace Team Members",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"path\": \"members\",\n            \"value\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"taylor.lee@example.com\"\n                },\n                {\n                    \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n                    \"display\": \"alex.cruz@example.com\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        },\n        {\n            \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n            \"display\": \"alex.cruz@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Add and Remove Team Members",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"remove\",\n            \"path\": \"members[value eq \\\"89bb1940b90545759e7f6f887cfb368e\\\"]\"\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"members\",\n            \"value\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"taylor.lee@example.com\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s username. Try again — it should work next time around.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s username. Try again — it should work next time around.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Syntax",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid API Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Admin Team Mismatch",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"The admin is not allowed to perform this action.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Group isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s information. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Get a group resource",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/Groups/{{groupId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"Groups",
										"{{groupId}}"
									]
								},
								"description": "Gets information about a Postman group within the team."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\",\n            \"display\": \"Taylor Lee\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This group isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Too Many Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to fetch information about this team member.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Create a group",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:Group\"],\n    \"displayName\": {{ userGroup }},\n    \"members\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/Groups",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"Groups"
									]
								},
								"description": "Creates a new user group in Postman and creates a new account for each group member.\n\nEach account is added to your Postman team and authentication is activated for each user. If an existing Postman account uses an email that matches a group member's email ID, an [email invite](https://postman.postman.co/docs/administration/managing-your-team/managing-your-team/#invites) to join your Postman team is sent to that user. Once the user accepts the invite, they'll be added to your team.\n\nBy default, the system assigns new users the developer role. You can [update user roles in Postman](https://learning.postman.com/docs/administration/managing-your-team/managing-your-team/#managing-team-roles)."
							},
							"response": [
								{
									"name": "Group Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Group Created with Members",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"Test-API\",\n    \"members\": [\n        {\n            \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\",\n            \"display\": \"Taylor Lee\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Invalid Syntax",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Not Enterprise",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Only Postman teams on the Enterprise plan can use SCIM provisioning. Upgrade your plan.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "No Slots Available",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"No slots available on your Postman team. Purchase or free up slots to invite more members. For help, contact Team Admins or members with a Billing role.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Invalid API Key",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"uniqueness\",\n    \"detail\": \"This person is already a member of the team.\",\n    \"status\": \"409\"\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"Test-API\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to add members to the team. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Delete a group",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/Groups/{{groupId}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"Groups",
										"{{groupId}}"
									]
								},
								"description": "Deletes a group in Postman.\n\nUser accounts that were in the deleted group are deactivated in Postman if the app is assigned to the user only with the deleted group.\n\nUser accounts and the data corresponding to them are **not** deleted. To permanently delete user accounts and their data, [contact Postman support](https://www.postman.com/support/)."
							},
							"response": [
								{
									"name": "Group Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Invalid API Key",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This group isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to fetch information about this team member.\",\n    \"status\": \"500\"\n}"
								}
							]
						}
					],
					"description": "The `/scim/v2/Groups` endpoint lets you provision and manage your Postman groups."
				},
				{
					"name": "Get resource types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/scim/v2/ResourceTypes",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"scim",
								"v2",
								"ResourceTypes"
							]
						},
						"description": "Gets all the resource types supported by Postman's SCIM API."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/ResourceTypes",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"ResourceTypes"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"schemas\": [\n            \"urn:ietf:params:scim:schemas:core:2.0:ResourceType\"\n        ],\n        \"id\": \"User\",\n        \"name\": \"User\",\n        \"endpoint\": \"/Users\",\n        \"description\": \"User Account\",\n        \"schema\": \"urn:ietf:params:scim:schemas:core:2.0:User\",\n        \"schemaExtensions\": [\n            {\n                \"schema\": \"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\",\n                \"required\": true\n            }\n        ]\n    },\n    {\n        \"schemas\": [\n            \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n        ],\n        \"id\": \"Group\",\n        \"displayName\": \"Group\",\n        \"members\": [],\n        \"description\": \"Group Account\",\n        \"schema\": \"urn:ietf:params:scim:schemas:core:2.0:Group\",\n        \"schemaExtensions\": [\n            {\n                \"schema\": \"urn:ietf:params:scim:schemas:extension:enterprise:2.0:Group\",\n                \"required\": true\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Get service provider configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/scim/v2/ServiceProviderConfig",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"scim",
								"v2",
								"ServiceProviderConfig"
							]
						},
						"description": "Gets the Postman SCIM API configuration information. This includes a list of supported operations."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/ServiceProviderConfig",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"ServiceProviderConfig"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig\"\n    ],\n    \"documentationUri\": \"https://learning.postman.com/docs/administration/managing-your-team/configuring-scim\",\n    \"patch\": {\n        \"supported\": true\n    },\n    \"bulk\": {\n        \"supported\": false,\n        \"maxOperations\": 0,\n        \"maxPayloadSize\": 0\n    },\n    \"filter\": {\n        \"supported\": true,\n        \"maxResults\": 100\n    },\n    \"changePassword\": {\n        \"supported\": false\n    },\n    \"sort\": {\n        \"supported\": false\n    },\n    \"etag\": {\n        \"supported\": false\n    },\n    \"authenticationSchemes\": [\n        {\n            \"name\": \"OAuth Bearer Token\",\n            \"description\": \"Authentication scheme using the OAuth Bearer Token Standard\",\n            \"specUri\": \"http://www.rfc-editor.org/info/rfc6750\",\n            \"type\": \"oauthbearertoken\"\n        }\n    ],\n    \"meta\": {\n        \"resourceType\": \"ServiceProviderConfig\",\n        \"location\": \"https://api.getpostman.com/scim/v2/ServiceProviderConfig\"\n    }\n}"
						}
					]
				}
			],
			"description": "Postman supports [SCIM](https://en.wikipedia.org/wiki/System_for_Cross-domain_Identity_Management) (System for Cross-domain Identity Management), which allows you to automate the provisioning of your team. You can deploy Postman at scale across your organization and control access to it with your identity provider.\n\n**Note:**\n\n- You **must** be a [Postman Team admin](http://learning.getpostman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles) to enable SCIM.\n- SCIM provisioning is only available with a Postman **Enterprise** [pricing plan](https://www.postman.com/pricing).\n    \n\n### Enabling SCIM provisioning in Postman\n\nYou must [configure SSO](https://learning.postman.com/docs/administration/sso/admin-sso/) and [enable SCIM](http://learning.getpostman.com/docs/administration/managing-your-team/configuring-scim/#enabling-scim-provisioning) for your Postman team to use these endpoints.\n\n**Important:**\n\nTo use SCIM, you must have only **one** SSO method configured. If you have more than one SSO method enabled, you **cannot** generate an SCIM API key.\n\n### SCIM provisioning limitations\n\nYou can only deactivate users with the SCIM API. You **cannot** permanently delete users with the API.\n\n### Rate limits\n\nFor your organization's team, Postman applies per-minute rate limits across all SCIM API endpoints. This helps ensure that you have the best experience using Postman's SCIM API. The rate limits apply as follows:\n\n- **Write (POST, PUT, PATCH)** — 180 requests per minute.\n- **Read (GET)** — 300 requests per minute.\n    \n\nIf your requests are limited, the API will return an HTTP `429 Too Many Requests` response status code."
		},
		{
			"name": "API Security",
			"item": [
				{
					"name": "Schema security validation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"schema\": {\n        \"type\": \"{{schemaType}}\",\n        \"language\": \"{{schemaLanguage}}\",\n        \"schema\": \"{{schemaBody}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://api.getpostman.com/security/api-validation",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"security",
								"api-validation"
							]
						},
						"description": "Performs a security analysis on the given definition and returns any issues. This can help you understand their impact and provides solutions to help you resolve the errors. You can include this endpoint to your CI/CD process to automate schema validation.\n\nFor more information, read our [API definition warnings](https://learning.postman.com/docs/api-governance/api-definition/api-definition-warnings/) documentation.\n\nInclude the following properties in the request body:\n\n- `type` — A **string** value that contains the API definition's type. One of:\n    - `openapi3`\n    - `openapi2`\n- `language` — A **string** value that contains the API definition's language. One of:\n    - `json`\n    - `yaml`\n- `schema` — A **string** value that contains the API definition's contents.\n    \n\n**Note:**\n\nThe maximum allowed size of the definition is 10 MB."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schema\": {\n        \"type\": \"openapi3\",\n        \"language\": \"json\",\n        \"schema\": \"{\\\"openapi\\\":\\\"3.0.0\\\",\\\"info\\\":{\\\"version\\\":\\\"1\\\",\\\"title\\\":\\\"temp\\\",\\\"license\\\":{\\\"name\\\":\\\"MIT\\\"}},\\\"servers\\\":[{\\\"url\\\":\\\"https://petstore.swagger.io/v1\\\"}],\\\"paths\\\":{\\\"/user\\\":{\\\"get\\\":{\\\"summary\\\":\\\"Details about a user\\\",\\\"operationId\\\":\\\"listUser\\\",\\\"tags\\\":[\\\"user\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"id\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"ID of the user\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"}}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"Details about a user\\\",\\\"headers\\\":{\\\"x-next\\\":{\\\"description\\\":\\\"A link to the next page of responses\\\",\\\"schema\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"content\\\":{\\\"application/json\\\":{\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/User\\\"}}}},\\\"default\\\":{\\\"description\\\":\\\"unexpected error\\\",\\\"content\\\":{\\\"application/json\\\":{\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/Error\\\"}}}}}}}},\\\"components\\\":{\\\"schemas\\\":{\\\"User\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"id\\\",\\\"name\\\"],\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"tag\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"Error\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"code\\\",\\\"message\\\"],\\\"properties\\\":{\\\"code\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\"}}}},\\\"securitySchemes\\\":{\\\"BasicAuth\\\":{\\\"type\\\":\\\"http\\\",\\\"scheme\\\":\\\"basic\\\"}}},\\\"security\\\":[{\\\"BasicAuth\\\":[]}]}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/security/api-validation",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"security",
										"api-validation"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 12 Sep 2021 09:45:42 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=df3a673f51ba400d"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=5f5d0aa04106e973"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439948"
								},
								{
									"key": "ETag",
									"value": "W/\"164-PBgIpGM9qzmFyny6Y8Rw7l8wfv4\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"warnings\": []\n}"
						},
						{
							"name": "Successful Response with Warnings",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schema\": {\n        \"type\": \"openapi3\",\n        \"language\": \"json\",\n        \"schema\": \"{\\\"openapi\\\":\\\"3.0.0\\\",\\\"info\\\":{\\\"version\\\":\\\"1\\\",\\\"title\\\":\\\"temp\\\",\\\"license\\\":{\\\"name\\\":\\\"MIT\\\"}},\\\"servers\\\":[{\\\"url\\\":\\\"https://petstore.swagger.io/v1\\\"}],\\\"paths\\\":{\\\"/user\\\":{\\\"get\\\":{\\\"summary\\\":\\\"Details about a user\\\",\\\"operationId\\\":\\\"listUser\\\",\\\"tags\\\":[\\\"user\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"id\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"ID of the user\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"}}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"Details about a user\\\",\\\"headers\\\":{\\\"x-next\\\":{\\\"description\\\":\\\"A link to the next page of responses\\\",\\\"schema\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"content\\\":{\\\"application/json\\\":{\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/User\\\"}}}},\\\"default\\\":{\\\"description\\\":\\\"unexpected error\\\",\\\"content\\\":{\\\"application/json\\\":{\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/Error\\\"}}}}}}}},\\\"components\\\":{\\\"schemas\\\":{\\\"User\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"id\\\",\\\"name\\\"],\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"tag\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"Error\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"code\\\",\\\"message\\\"],\\\"properties\\\":{\\\"code\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\"}}}},\\\"securitySchemes\\\":{\\\"BasicAuth\\\":{\\\"type\\\":\\\"http\\\",\\\"scheme\\\":\\\"\\\"}}},\\\"security\\\":[{\\\"BasicAuth\\\":[]}]}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/security/api-validation",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"security",
										"api-validation"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 12 Sep 2021 09:44:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "15"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=ae1633478c228dbd"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=6da9fbb5ccd53a5e"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439948"
								},
								{
									"key": "ETag",
									"value": "W/\"f-qOnA/C9SOc9LcVJFceEQk4jhluk\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"warnings\": [\n        {\n            \"severity\": \"MEDIUM\",\n            \"message\": \"HTTP authentication scheme is using an unknown scheme.\",\n            \"location\": {\n                \"start\": {\n                    \"line\": 1,\n                    \"column\": 1116\n                },\n                \"end\": {\n                    \"line\": 1,\n                    \"column\": 1118\n                }\n            },\n            \"dataPath\": [\n                \"components\",\n                \"securitySchemes\",\n                \"BasicAuth\",\n                \"scheme\"\n            ],\n            \"possibleFixUrl\": \"https://go.pstmn.io/openapi3-security-warnings#http-authentication-scheme-is-using-an-unknown-scheme\",\n            \"category\": {\n                \"name\": \"Broken User Authentication\"\n            }\n        }\n    ]\n}"
						},
						{
							"name": "Invalid Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schema\": {\n        \"type\": \"openapi1\",\n        \"language\": \"json\",\n        \"schema\": \"{}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/security/api-validation",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"security",
										"api-validation"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 12 Sep 2021 09:39:21 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "125"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=583cc629de922167"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=510c7b003e356f45"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "ETag",
									"value": "W/\"7d-N5PP6H8rafi0mv9sTvRw40PwI84\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": {\n            \"name\": \"Invalid schema\",\n            \"reason\": \"Provided schema type is not supported.\"\n        }\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schema\": {\n        \"type\": \"openapi1\",\n        \"language\": \"json\",\n        \"schema\": \"{}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/security/api-validation",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"security",
										"api-validation"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 12 Sep 2021 09:39:21 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "125"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=583cc629de922167"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=510c7b003e356f45"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "ETag",
									"value": "W/\"7d-N5PP6H8rafi0mv9sTvRw40PwI84\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The API Security endpoints let you manage the [security of your API](https://learning.postman.com/docs/api-governance/api-definition/api-definition-warnings/). API security includes ensuring you follow security and format warnings and schema validation."
		},
		{
			"name": "Audit Logs",
			"item": [
				{
					"name": "Get team audit logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/audit/logs",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"audit",
								"logs"
							],
							"query": [
								{
									"key": "since",
									"value": "<string>",
									"description": "Return logs created after the given time, in YYYY-MM-DD format.",
									"disabled": true
								},
								{
									"key": "until",
									"value": "<string>",
									"description": "Return logs created before the given time, in YYYY-MM-DD format.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "The maximum number of audit events to return at once. The maximum value is 300.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<integer>",
									"description": "The cursor to get the next set of results.",
									"disabled": true
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Return the records in ascending (`asc`) or descending (`desc`) order. This value defaults to `desc` order.",
									"disabled": true
								}
							]
						},
						"description": "Gets a list of your team's generated audit events. For a complete list of all audit events, read our [Utilizing audit logs](https://learning.postman.com/docs/administration/audit-logs/) documentation."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/audit/logs",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"audit",
										"logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"trails\": [\n        {\n            \"id\": 12,\n            \"ip\": \"192.0.2.0\",\n            \"userAgent\": \"PostmanRuntime/7.29.0 Postman/5.5.4 ChromeApp\",\n            \"action\": \"user.login_password_success\",\n            \"timestamp\": \"2022-11-10T18:31:32.000Z\",\n            \"message\": \"taylor-lee successfully logged in using the Postman password.\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678\n                },\n                \"team\": {\n                    \"name\": \"Postman-Testing\",\n                    \"id\": 125648\n                }\n            }\n        },\n        {\n            \"id\": 13,\n            \"ip\": \"192.0.2.0\",\n            \"userAgent\": null,\n            \"action\": \"team.scim_add_member\",\n            \"timestamp\": \"2022-11-10T17:19:03.000Z\",\n            \"message\": \"Taylor Lee provisioned user Alex Cruz\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Alex Cruz\",\n                    \"username\": \"alex.cruz\",\n                    \"email\": \"alex.cruz@example.com\",\n                    \"id\": 87654321\n                },\n                \"team\": {\n                    \"name\": \"Test-API\",\n                    \"id\": 1234\n                }\n            }\n        },\n        {\n            \"id\": 14,\n            \"ip\": null,\n            \"userAgent\": null,\n            \"action\": \"user.authaccount.linked\",\n            \"timestamp\": \"2022-11-10T17:19:02.000Z\",\n            \"message\": \"Taylor Lee created account linkage for user.\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Alex Cruz\",\n                    \"username\": \"alex.cruz\",\n                    \"email\": \"alex.cruz@example.com\",\n                    \"id\": 87654321\n                },\n                \"team\": {\n                    \"name\": \"Test-API\",\n                    \"id\": 1234\n                },\n                \"variables\": {\n                    \"auth_type\": \"okta\",\n                    \"auth_uid\": \"8f868a0353fd46cbadfe8a6ab3853b94\",\n                    \"authaccount_uid\": \"f97535389e8447ae8006b2795a2059e1\"\n                }\n            }\n        },\n        {\n            \"id\": 15,\n            \"ip\": \"192.0.2.0\",\n            \"userAgent\": null,\n            \"action\": \"team.create_group\",\n            \"timestamp\": \"2022-11-10T15:54:47.000Z\",\n            \"message\": \"Taylor Lee created group Test-API.\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678\n                },\n                \"team\": {\n                    \"name\": \"API-Testing\",\n                    \"id\": 11\n                },\n                \"variables\": {\n                    \"groupId\": \"1234\",\n                    \"groupName\": \"Test-API\",\n                    \"groupVisibility\": \"team\"\n                }\n            }\n        }\n    ],\n    \"nextCursor\": 95427049\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/audit/logs",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"audit",
										"logs"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/audit/logs",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"audit",
										"logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"ForbiddenRequest\",\n        \"message\": \"You do not have permissions to view team Audit logs\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/audit/logs",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"audit",
										"logs"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The [Audit Logs](https://learning.postman.com/docs/administration/audit-logs/) endpoints let you monitor and analyze your Professional or Enterprise Postman teams.\n\n**Note:**\n\nThese endpoints are **only** available to Postman **Professional** and **Enterprise** [pricing plans](https://www.postman.com/pricing)."
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{postman-api-key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "postman-api-key",
			"value": "",
			"type": "string"
		}
	]
}